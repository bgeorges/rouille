(function() {var implementors = {};
implementors["openapi"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"openapi/apis/default_api/enum.MeasurementsGetError.html\" title=\"enum openapi::apis::default_api::MeasurementsGetError\">MeasurementsGetError</a>","synthetic":false,"types":["openapi::apis::default_api::MeasurementsGetError"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"openapi/apis/default_api/enum.MeasurementsIdGetError.html\" title=\"enum openapi::apis::default_api::MeasurementsIdGetError\">MeasurementsIdGetError</a>","synthetic":false,"types":["openapi::apis::default_api::MeasurementsIdGetError"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"openapi/apis/default_api/enum.MeasurementsPostError.html\" title=\"enum openapi::apis::default_api::MeasurementsPostError\">MeasurementsPostError</a>","synthetic":false,"types":["openapi::apis::default_api::MeasurementsPostError"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"openapi/apis/default_api/enum.UsersGetError.html\" title=\"enum openapi::apis::default_api::UsersGetError\">UsersGetError</a>","synthetic":false,"types":["openapi::apis::default_api::UsersGetError"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"openapi/models/measurement/struct.Measurement.html\" title=\"struct openapi::models::measurement::Measurement\">Measurement</a>","synthetic":false,"types":["openapi::models::measurement::Measurement"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"openapi/models/measurement_input/struct.MeasurementInput.html\" title=\"struct openapi::models::measurement_input::MeasurementInput\">MeasurementInput</a>","synthetic":false,"types":["openapi::models::measurement_input::MeasurementInput"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"openapi/models/user/struct.User.html\" title=\"struct openapi::models::user::User\">User</a>","synthetic":false,"types":["openapi::models::user::User"]}];
implementors["serde_json"] = [{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>&gt;","synthetic":false,"types":["serde_json::map::Map"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>","synthetic":false,"types":["serde_json::value::Value"]},{"text":"impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>","synthetic":false,"types":["serde_json::number::Number"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()