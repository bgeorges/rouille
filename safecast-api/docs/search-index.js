var searchIndex = JSON.parse('{\
"base64":{"doc":"ConfigsThere isn\'t just one type of Base64; that would be …","i":[[0,"display","base64","Enables base64\'d output anywhere you might use a <code>Display</code> …",null,null],[3,"Base64Display","base64::display","A convenience wrapper for base64\'ing bytes into a format …",null,null],[11,"with_config","","Create a <code>Base64Display</code> with the provided config.",0,[[["config",3]],["base64display",3]]],[0,"read","base64","Implementations of <code>io::Read</code> to transparently decode …",null,null],[3,"DecoderReader","base64::read","A <code>Read</code> implementation that decodes base64 data read from …",null,null],[0,"write","base64","Implementations of <code>io::Write</code> to transparently handle …",null,null],[3,"EncoderWriter","base64::write","A <code>Write</code> implementation that base64 encodes data before …",null,null],[3,"EncoderStringWriter","","A <code>Write</code> implementation that base64-encodes data using the …",null,null],[5,"encode_config_slice","base64","Encode arbitrary octets as base64. Writes into the …",null,[[["config",3],["asref",8]],["usize",15]]],[5,"encode","","Encode arbitrary octets as base64. Returns a String. …",null,[[["asref",8]],["string",3]]],[5,"encode_config","","Encode arbitrary octets as base64. Returns a String.",null,[[["config",3],["asref",8]],["string",3]]],[5,"encode_config_buf","","Encode arbitrary octets as base64. Writes into the …",null,[[["config",3],["string",3],["asref",8]]]],[5,"decode","","Decode from string reference as octets. Returns a Result …",null,[[["asref",8]],[["result",4],["vec",3],["decodeerror",4]]]],[5,"decode_config","","Decode from string reference as octets. Returns a Result …",null,[[["config",3],["asref",8]],[["result",4],["vec",3],["decodeerror",4]]]],[5,"decode_config_buf","","Decode from string reference as octets. Writes into the …",null,[[["config",3],["vec",3],["asref",8]],[["result",4],["decodeerror",4]]]],[5,"decode_config_slice","","Decode the input into the provided output slice.",null,[[["config",3],["asref",8]],[["usize",15],["decodeerror",4],["result",4]]]],[4,"DecodeError","","Errors that can occur while decoding.",null,null],[13,"InvalidByte","","An invalid byte was found in the input. The offset and …",1,null],[13,"InvalidLength","","The length of the input is invalid. A typical cause of …",1,null],[13,"InvalidLastSymbol","","The last non-padding input symbol\'s encoded 6 bits have …",1,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses <code>+</code> and <code>/</code>).",2,null],[13,"UrlSafe","","The URL safe character set (uses <code>-</code> and <code>_</code>).",2,null],[13,"Crypt","","The <code>crypt(3)</code> character set (uses …",2,null],[13,"Bcrypt","","The bcrypt character set (uses …",2,null],[13,"ImapMutf7","","The character set used in IMAP-modified UTF-7 (uses <code>+</code> and …",2,null],[13,"BinHex","","The character set used in BinHex 4.0 files.",2,null],[3,"Config","","Contains configuration parameters for base64 encoding",null,null],[11,"new","","Create a new <code>Config</code>.",3,[[["bool",15],["characterset",4]],["config",3]]],[11,"pad","","Sets whether to pad output with <code>=</code> characters.",3,[[["bool",15]],["config",3]]],[11,"decode_allow_trailing_bits","","Sets whether to emit errors for nonzero trailing bits.",3,[[["bool",15]],["config",3]]],[17,"STANDARD","","Standard character set with padding.",null,null],[17,"STANDARD_NO_PAD","","Standard character set without padding.",null,null],[17,"URL_SAFE","","URL-safe character set with padding",null,null],[17,"URL_SAFE_NO_PAD","","URL-safe character set without padding",null,null],[17,"CRYPT","","As per <code>crypt(3)</code> requirements",null,null],[17,"BCRYPT","","Bcrypt character set",null,null],[17,"IMAP_MUTF7","","IMAP modified UTF-7 requirements",null,null],[17,"BINHEX","","BinHex character set",null,null],[11,"from","base64::display","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","base64::read","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","base64::write","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","base64","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","base64::write","",5,[[]]],[11,"clone","base64","",1,[[],["decodeerror",4]]],[11,"clone","","",2,[[],["characterset",4]]],[11,"clone","","",3,[[],["config",3]]],[11,"eq","","",1,[[["decodeerror",4]],["bool",15]]],[11,"ne","","",1,[[["decodeerror",4]],["bool",15]]],[11,"fmt","base64::read","",4,[[["formatter",3]],["result",6]]],[11,"fmt","base64::write","",5,[[["formatter",3]],["result",6]]],[11,"fmt","base64","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","base64::display","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","base64","",1,[[["formatter",3]],["result",6]]],[11,"description","","",1,[[],["str",15]]],[11,"cause","","",1,[[],[["error",8],["option",4]]]],[11,"read","base64::read","Decode input from the wrapped reader.",4,[[],[["usize",15],["result",6]]]],[11,"write","base64::write","Encode input and then write to the delegate writer.",5,[[],[["usize",15],["result",6]]]],[11,"flush","","Because this is usually treated as OK to call multiple …",5,[[],["result",6]]],[11,"write","","",6,[[],[["usize",15],["result",6]]]],[11,"flush","","",6,[[],["result",6]]],[11,"new","base64::read","Create a new decoder that will read from the provided …",4,[[["config",3]]]],[11,"new","base64::write","Create a new encoder that will write to the provided …",5,[[["config",3]],["encoderwriter",3]]],[11,"finish","","Encode all remaining buffered data and write it, …",5,[[],["result",6]]],[11,"from","","Create a EncoderStringWriter that will append to the …",6,[[["config",3]]]],[11,"into_inner","","Encode all remaining buffered data, including any …",6,[[]]],[11,"new","","Create a EncoderStringWriter that will encode into a new …",6,[[["config",3]]]]],"p":[[3,"Base64Display"],[4,"DecodeError"],[4,"CharacterSet"],[3,"Config"],[3,"DecoderReader"],[3,"EncoderWriter"],[3,"EncoderStringWriter"]]},\
"bytes":{"doc":"Provides abstractions for working with bytes.","i":[[0,"buf","bytes","Utilities for working with buffers.",null,null],[8,"Buf","bytes::buf","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position …",0,[[],["usize",15]]],[10,"chunk","","Returns a slice starting at the current position and of …",0,[[]]],[11,"chunks_vectored","","Fills <code>dst</code> with potentially multiple slices starting at …",0,[[],["usize",15]]],[10,"advance","","Advance the internal cursor of the Buf",0,[[["usize",15]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",0,[[],["bool",15]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",0,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",0,[[],["u8",15]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",0,[[],["i8",15]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",0,[[],["u16",15]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",0,[[],["u16",15]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",0,[[],["i16",15]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",0,[[],["i16",15]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",0,[[],["i32",15]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",0,[[],["i32",15]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",0,[[],["u64",15]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",0,[[],["u64",15]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",0,[[],["i64",15]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",0,[[],["i64",15]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",0,[[],["u128",15]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",0,[[],["u128",15]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",0,[[],["i128",15]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",0,[[],["i128",15]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",0,[[["usize",15]],["u64",15]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",0,[[["usize",15]],["u64",15]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",0,[[["usize",15]],["i64",15]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",0,[[["usize",15]],["i64",15]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"copy_to_bytes","","Consumes <code>len</code> bytes inside self and returns new instance …",0,[[["usize",15]],["bytes",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",0,[[["usize",15]],["take",3]]],[11,"chain","","Creates an adaptor which will chain this buffer with …",0,[[["buf",8]],[["chain",3],["buf",8]]]],[11,"reader","","Creates an adaptor which implements the <code>Read</code> trait for …",0,[[],["reader",3]]],[8,"BufMut","","A trait for values that provide sequential write access …",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the …",1,[[],["usize",15]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",1,[[["usize",15]]]],[11,"has_remaining_mut","","Returns true if there is space in <code>self</code> for more bytes.",1,[[],["bool",15]]],[10,"chunk_mut","","Returns a mutable slice starting at the current BufMut …",1,[[],["uninitslice",3]]],[11,"put","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",1,[[["buf",8]]]],[11,"put_slice","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",1,[[]]],[11,"put_u8","","Writes an unsigned 8 bit integer to <code>self</code>.",1,[[["u8",15]]]],[11,"put_i8","","Writes a signed 8 bit integer to <code>self</code>.",1,[[["i8",15]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …",1,[[["u16",15]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to <code>self</code> in …",1,[[["u16",15]]]],[11,"put_i16","","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …",1,[[["i16",15]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to <code>self</code> in little-endian …",1,[[["i16",15]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …",1,[[["u32",15]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to <code>self</code> in …",1,[[["u32",15]]]],[11,"put_i32","","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …",1,[[["i32",15]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to <code>self</code> in little-endian …",1,[[["i32",15]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to <code>self</code> in the …",1,[[["u64",15]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to <code>self</code> in …",1,[[["u64",15]]]],[11,"put_i64","","Writes a signed 64 bit integer to <code>self</code> in the big-endian …",1,[[["i64",15]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to <code>self</code> in little-endian …",1,[[["i64",15]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to <code>self</code> in the …",1,[[["u128",15]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to <code>self</code> in …",1,[[["u128",15]]]],[11,"put_i128","","Writes a signed 128 bit integer to <code>self</code> in the big-endian …",1,[[["i128",15]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to <code>self</code> in little-endian …",1,[[["i128",15]]]],[11,"put_uint","","Writes an unsigned n-byte integer to <code>self</code> in big-endian …",1,[[["usize",15],["u64",15]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to <code>self</code> in the …",1,[[["usize",15],["u64",15]]]],[11,"put_int","","Writes a signed n-byte integer to <code>self</code> in big-endian byte …",1,[[["i64",15],["usize",15]]]],[11,"put_int_le","","Writes a signed n-byte integer to <code>self</code> in little-endian …",1,[[["i64",15],["usize",15]]]],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]]]],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]]]],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]]]],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]]]],[11,"limit","","Creates an adaptor which can write at most <code>limit</code> bytes to …",1,[[["usize",15]],["limit",3]]],[11,"writer","","Creates an adaptor which implements the <code>Write</code> trait for …",1,[[],["writer",3]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with …",1,[[["bufmut",8]],[["chain",3],["bufmut",8]]]],[3,"Chain","","A <code>Chain</code> sequences two buffers.",null,null],[3,"IntoIter","","Iterator over the bytes contained by the buffer.",null,null],[3,"Limit","","A <code>BufMut</code> adapter which limits the amount of bytes that …",null,null],[3,"Take","","A <code>Buf</code> adapter which limits the bytes read from an …",null,null],[3,"UninitSlice","","Uninitialized byte slice.",null,null],[3,"Reader","","A <code>Buf</code> adapter which implements <code>io::Read</code> for the inner …",null,null],[3,"Writer","","A <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner …",null,null],[8,"Buf","bytes","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position …",0,[[],["usize",15]]],[10,"chunk","","Returns a slice starting at the current position and of …",0,[[]]],[11,"chunks_vectored","bytes::buf","Fills <code>dst</code> with potentially multiple slices starting at …",0,[[],["usize",15]]],[10,"advance","bytes","Advance the internal cursor of the Buf",0,[[["usize",15]]]],[11,"has_remaining","bytes::buf","Returns true if there are any more bytes to consume",0,[[],["bool",15]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",0,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",0,[[],["u8",15]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",0,[[],["i8",15]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",0,[[],["u16",15]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",0,[[],["u16",15]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",0,[[],["i16",15]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",0,[[],["i16",15]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",0,[[],["i32",15]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",0,[[],["i32",15]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",0,[[],["u64",15]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",0,[[],["u64",15]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",0,[[],["i64",15]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",0,[[],["i64",15]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",0,[[],["u128",15]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",0,[[],["u128",15]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",0,[[],["i128",15]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",0,[[],["i128",15]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",0,[[["usize",15]],["u64",15]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",0,[[["usize",15]],["u64",15]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",0,[[["usize",15]],["i64",15]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",0,[[["usize",15]],["i64",15]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"copy_to_bytes","","Consumes <code>len</code> bytes inside self and returns new instance …",0,[[["usize",15]],["bytes",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",0,[[["usize",15]],["take",3]]],[11,"chain","","Creates an adaptor which will chain this buffer with …",0,[[["buf",8]],[["chain",3],["buf",8]]]],[11,"reader","","Creates an adaptor which implements the <code>Read</code> trait for …",0,[[],["reader",3]]],[8,"BufMut","bytes","A trait for values that provide sequential write access …",null,null],[10,"remaining_mut","","Returns the number of bytes that can be written from the …",1,[[],["usize",15]]],[10,"advance_mut","","Advance the internal cursor of the BufMut",1,[[["usize",15]]]],[11,"has_remaining_mut","bytes::buf","Returns true if there is space in <code>self</code> for more bytes.",1,[[],["bool",15]]],[10,"chunk_mut","bytes","Returns a mutable slice starting at the current BufMut …",1,[[],["uninitslice",3]]],[11,"put","bytes::buf","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",1,[[["buf",8]]]],[11,"put_slice","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",1,[[]]],[11,"put_u8","","Writes an unsigned 8 bit integer to <code>self</code>.",1,[[["u8",15]]]],[11,"put_i8","","Writes a signed 8 bit integer to <code>self</code>.",1,[[["i8",15]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …",1,[[["u16",15]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to <code>self</code> in …",1,[[["u16",15]]]],[11,"put_i16","","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …",1,[[["i16",15]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to <code>self</code> in little-endian …",1,[[["i16",15]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …",1,[[["u32",15]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to <code>self</code> in …",1,[[["u32",15]]]],[11,"put_i32","","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …",1,[[["i32",15]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to <code>self</code> in little-endian …",1,[[["i32",15]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to <code>self</code> in the …",1,[[["u64",15]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to <code>self</code> in …",1,[[["u64",15]]]],[11,"put_i64","","Writes a signed 64 bit integer to <code>self</code> in the big-endian …",1,[[["i64",15]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to <code>self</code> in little-endian …",1,[[["i64",15]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to <code>self</code> in the …",1,[[["u128",15]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to <code>self</code> in …",1,[[["u128",15]]]],[11,"put_i128","","Writes a signed 128 bit integer to <code>self</code> in the big-endian …",1,[[["i128",15]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to <code>self</code> in little-endian …",1,[[["i128",15]]]],[11,"put_uint","","Writes an unsigned n-byte integer to <code>self</code> in big-endian …",1,[[["usize",15],["u64",15]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to <code>self</code> in the …",1,[[["usize",15],["u64",15]]]],[11,"put_int","","Writes a signed n-byte integer to <code>self</code> in big-endian byte …",1,[[["i64",15],["usize",15]]]],[11,"put_int_le","","Writes a signed n-byte integer to <code>self</code> in little-endian …",1,[[["i64",15],["usize",15]]]],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]]]],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]]]],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]]]],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]]]],[11,"limit","","Creates an adaptor which can write at most <code>limit</code> bytes to …",1,[[["usize",15]],["limit",3]]],[11,"writer","","Creates an adaptor which implements the <code>Write</code> trait for …",1,[[],["writer",3]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with …",1,[[["bufmut",8]],[["chain",3],["bufmut",8]]]],[3,"Bytes","bytes","A cheaply cloneable and sliceable chunk of contiguous …",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[11,"from","bytes::buf","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","bytes","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"remaining","bytes::buf","",2,[[],["usize",15]]],[11,"chunk","","",2,[[]]],[11,"advance","","",2,[[["usize",15]]]],[11,"chunks_vectored","","",2,[[],["usize",15]]],[11,"remaining","","",6,[[],["usize",15]]],[11,"chunk","","",6,[[]]],[11,"advance","","",6,[[["usize",15]]]],[11,"remaining","bytes","",9,[[],["usize",15]]],[11,"chunk","","",9,[[]]],[11,"advance","","",9,[[["usize",15]]]],[11,"copy_to_bytes","","",9,[[["usize",15]],["bytes",3]]],[11,"remaining","","",10,[[],["usize",15]]],[11,"chunk","","",10,[[]]],[11,"advance","","",10,[[["usize",15]]]],[11,"copy_to_bytes","","",10,[[["usize",15]],["bytes",3]]],[11,"remaining_mut","bytes::buf","",2,[[],["usize",15]]],[11,"chunk_mut","","",2,[[],["uninitslice",3]]],[11,"advance_mut","","",2,[[["usize",15]]]],[11,"remaining_mut","","",4,[[],["usize",15]]],[11,"chunk_mut","","",4,[[],["uninitslice",3]]],[11,"advance_mut","","",4,[[["usize",15]]]],[11,"remaining_mut","bytes","",10,[[],["usize",15]]],[11,"advance_mut","","",10,[[["usize",15]]]],[11,"chunk_mut","","",10,[[],["uninitslice",3]]],[11,"put","","",10,[[["buf",8]]]],[11,"put_slice","","",10,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"from","","",9,[[],["bytes",3]]],[11,"from","","",9,[[["str",15]],["bytes",3]]],[11,"from","","",9,[[["vec",3],["u8",15]],["bytes",3]]],[11,"from","","",9,[[["string",3]],["bytes",3]]],[11,"from","","",10,[[],["bytesmut",3]]],[11,"from","","",10,[[["str",15]],["bytesmut",3]]],[11,"from","","",9,[[["bytesmut",3]],["bytes",3]]],[11,"fmt","bytes::buf","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","bytes","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"eq","","",9,[[["bytes",3]],["bool",15]]],[11,"eq","","",9,[[],["bool",15]]],[11,"eq","","",9,[[["str",15]],["bool",15]]],[11,"eq","","",9,[[["vec",3]],["bool",15]]],[11,"eq","","",9,[[["string",3]],["bool",15]]],[11,"eq","","",9,[[],["bool",15]]],[11,"eq","","",10,[[["bytesmut",3]],["bool",15]]],[11,"eq","","",10,[[],["bool",15]]],[11,"eq","","",10,[[["str",15]],["bool",15]]],[11,"eq","","",10,[[["vec",3]],["bool",15]]],[11,"eq","","",10,[[["string",3]],["bool",15]]],[11,"eq","","",10,[[],["bool",15]]],[11,"eq","","",9,[[["bytesmut",3]],["bool",15]]],[11,"eq","","",10,[[["bytes",3]],["bool",15]]],[11,"cmp","","",9,[[["bytes",3]],["ordering",4]]],[11,"cmp","","",10,[[["bytesmut",3]],["ordering",4]]],[11,"partial_cmp","","",9,[[["bytes",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["str",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[["string",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["bytesmut",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["str",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[["string",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",10,[[],[["option",4],["ordering",4]]]],[11,"drop","","",9,[[]]],[11,"drop","","",10,[[]]],[11,"index","bytes::buf","",7,[[["usize",15],["range",3]],["uninitslice",3]]],[11,"index","","",7,[[["usize",15],["rangefrom",3]],["uninitslice",3]]],[11,"index","","",7,[[["rangefull",3]],["uninitslice",3]]],[11,"index","","",7,[[["usize",15],["rangeinclusive",3]],["uninitslice",3]]],[11,"index","","",7,[[["usize",15],["rangeto",3]],["uninitslice",3]]],[11,"index","","",7,[[["usize",15],["rangetoinclusive",3]],["uninitslice",3]]],[11,"index_mut","","",7,[[["usize",15],["range",3]],["uninitslice",3]]],[11,"index_mut","","",7,[[["usize",15],["rangefrom",3]],["uninitslice",3]]],[11,"index_mut","","",7,[[["rangefull",3]],["uninitslice",3]]],[11,"index_mut","","",7,[[["usize",15],["rangeinclusive",3]],["uninitslice",3]]],[11,"index_mut","","",7,[[["usize",15],["rangeto",3]],["uninitslice",3]]],[11,"index_mut","","",7,[[["usize",15],["rangetoinclusive",3]],["uninitslice",3]]],[11,"hash","bytes","",9,[[]]],[11,"hash","","",10,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"write_str","","",10,[[["str",15]],["result",6]]],[11,"write_fmt","","",10,[[["arguments",3]],["result",6]]],[11,"from_iter","","",9,[[["intoiterator",8]]]],[11,"from_iter","","",10,[[["intoiterator",8]]]],[11,"from_iter","","",10,[[["intoiterator",8]]]],[11,"as_ref","","",9,[[]]],[11,"as_ref","","",10,[[]]],[11,"as_mut","","",10,[[]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"next","bytes::buf","",3,[[],[["option",4],["u8",15]]]],[11,"size_hint","","",3,[[]]],[11,"into_iter","","",2,[[]]],[11,"into_iter","bytes","",9,[[]]],[11,"into_iter","","",10,[[]]],[11,"extend","","",10,[[]]],[11,"extend","","",10,[[]]],[11,"clone","","",9,[[],["bytes",3]]],[11,"clone","","",10,[[],["bytesmut",3]]],[11,"default","","",9,[[],["bytes",3]]],[11,"default","","",10,[[],["bytesmut",3]]],[11,"fill_buf","bytes::buf","",5,[[],["result",6]]],[11,"consume","","",5,[[["usize",15]]]],[11,"read","","",5,[[],[["usize",15],["result",6]]]],[11,"write","","",8,[[],[["usize",15],["result",6]]]],[11,"flush","","",8,[[],["result",6]]],[11,"chunks_vectored","","Fills <code>dst</code> with potentially multiple slices starting at …",0,[[],["usize",15]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",0,[[],["bool",15]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",0,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",0,[[],["u8",15]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",0,[[],["i8",15]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",0,[[],["u16",15]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",0,[[],["u16",15]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",0,[[],["i16",15]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",0,[[],["i16",15]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",0,[[],["i32",15]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",0,[[],["i32",15]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",0,[[],["u64",15]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",0,[[],["u64",15]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",0,[[],["i64",15]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",0,[[],["i64",15]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",0,[[],["u128",15]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",0,[[],["u128",15]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",0,[[],["i128",15]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",0,[[],["i128",15]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",0,[[["usize",15]],["u64",15]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",0,[[["usize",15]],["u64",15]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",0,[[["usize",15]],["i64",15]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",0,[[["usize",15]],["i64",15]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"copy_to_bytes","","Consumes <code>len</code> bytes inside self and returns new instance …",0,[[["usize",15]],["bytes",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",0,[[["usize",15]],["take",3]]],[11,"chain","","Creates an adaptor which will chain this buffer with …",0,[[["buf",8]],[["chain",3],["buf",8]]]],[11,"reader","","Creates an adaptor which implements the <code>Read</code> trait for …",0,[[],["reader",3]]],[11,"has_remaining_mut","","Returns true if there is space in <code>self</code> for more bytes.",1,[[],["bool",15]]],[11,"put","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",1,[[["buf",8]]]],[11,"put_slice","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …",1,[[]]],[11,"put_u8","","Writes an unsigned 8 bit integer to <code>self</code>.",1,[[["u8",15]]]],[11,"put_i8","","Writes a signed 8 bit integer to <code>self</code>.",1,[[["i8",15]]]],[11,"put_u16","","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …",1,[[["u16",15]]]],[11,"put_u16_le","","Writes an unsigned 16 bit integer to <code>self</code> in …",1,[[["u16",15]]]],[11,"put_i16","","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …",1,[[["i16",15]]]],[11,"put_i16_le","","Writes a signed 16 bit integer to <code>self</code> in little-endian …",1,[[["i16",15]]]],[11,"put_u32","","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …",1,[[["u32",15]]]],[11,"put_u32_le","","Writes an unsigned 32 bit integer to <code>self</code> in …",1,[[["u32",15]]]],[11,"put_i32","","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …",1,[[["i32",15]]]],[11,"put_i32_le","","Writes a signed 32 bit integer to <code>self</code> in little-endian …",1,[[["i32",15]]]],[11,"put_u64","","Writes an unsigned 64 bit integer to <code>self</code> in the …",1,[[["u64",15]]]],[11,"put_u64_le","","Writes an unsigned 64 bit integer to <code>self</code> in …",1,[[["u64",15]]]],[11,"put_i64","","Writes a signed 64 bit integer to <code>self</code> in the big-endian …",1,[[["i64",15]]]],[11,"put_i64_le","","Writes a signed 64 bit integer to <code>self</code> in little-endian …",1,[[["i64",15]]]],[11,"put_u128","","Writes an unsigned 128 bit integer to <code>self</code> in the …",1,[[["u128",15]]]],[11,"put_u128_le","","Writes an unsigned 128 bit integer to <code>self</code> in …",1,[[["u128",15]]]],[11,"put_i128","","Writes a signed 128 bit integer to <code>self</code> in the big-endian …",1,[[["i128",15]]]],[11,"put_i128_le","","Writes a signed 128 bit integer to <code>self</code> in little-endian …",1,[[["i128",15]]]],[11,"put_uint","","Writes an unsigned n-byte integer to <code>self</code> in big-endian …",1,[[["usize",15],["u64",15]]]],[11,"put_uint_le","","Writes an unsigned n-byte integer to <code>self</code> in the …",1,[[["usize",15],["u64",15]]]],[11,"put_int","","Writes a signed n-byte integer to <code>self</code> in big-endian byte …",1,[[["i64",15],["usize",15]]]],[11,"put_int_le","","Writes a signed n-byte integer to <code>self</code> in little-endian …",1,[[["i64",15],["usize",15]]]],[11,"put_f32","","Writes  an IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]]]],[11,"put_f32_le","","Writes  an IEEE754 single-precision (4 bytes) floating …",1,[[["f32",15]]]],[11,"put_f64","","Writes  an IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]]]],[11,"put_f64_le","","Writes  an IEEE754 double-precision (8 bytes) floating …",1,[[["f64",15]]]],[11,"limit","","Creates an adaptor which can write at most <code>limit</code> bytes to …",1,[[["usize",15]],["limit",3]]],[11,"writer","","Creates an adaptor which implements the <code>Write</code> trait for …",1,[[],["writer",3]]],[11,"chain_mut","","Creates an adapter which will chain this buffer with …",1,[[["bufmut",8]],[["chain",3],["bufmut",8]]]],[11,"first_ref","","Gets a reference to the first underlying <code>Buf</code>.",2,[[]]],[11,"first_mut","","Gets a mutable reference to the first underlying <code>Buf</code>.",2,[[]]],[11,"last_ref","","Gets a reference to the last underlying <code>Buf</code>.",2,[[]]],[11,"last_mut","","Gets a mutable reference to the last underlying <code>Buf</code>.",2,[[]]],[11,"into_inner","","Consumes this <code>Chain</code>, returning the underlying values.",2,[[]]],[11,"into_inner","","Consumes this <code>IntoIter</code>, returning the underlying value.",3,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>Buf</code>.",3,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>Buf</code>.",3,[[]]],[11,"into_inner","","Consumes this <code>Limit</code>, returning the underlying value.",4,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>BufMut</code>.",4,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>BufMut</code>.",4,[[]]],[11,"limit","","Returns the maximum number of bytes that can be written",4,[[],["usize",15]]],[11,"set_limit","","Sets the maximum number of bytes that can be written.",4,[[["usize",15]]]],[11,"get_ref","","Gets a reference to the underlying <code>Buf</code>.",5,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>Buf</code>.",5,[[]]],[11,"into_inner","","Consumes this <code>Reader</code>, returning the underlying value.",5,[[]]],[11,"into_inner","","Consumes this <code>Take</code>, returning the underlying value.",6,[[]]],[11,"get_ref","","Gets a reference to the underlying <code>Buf</code>.",6,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>Buf</code>.",6,[[]]],[11,"limit","","Returns the maximum number of bytes that can be read.",6,[[],["usize",15]]],[11,"set_limit","","Sets the maximum number of bytes that can be read.",6,[[["usize",15]]]],[11,"from_raw_parts_mut","","Create a <code>&mut UninitSlice</code> from a pointer and a length.",7,[[["usize",15]],["uninitslice",3]]],[11,"write_byte","","Write a single byte at the specified offset.",7,[[["usize",15],["u8",15]]]],[11,"copy_from_slice","","Copies bytes  from <code>src</code> into <code>self</code>.",7,[[]]],[11,"as_mut_ptr","","Return a raw pointer to the slice\'s buffer.",7,[[]]],[11,"len","","Returns the number of bytes in the slice.",7,[[],["usize",15]]],[11,"get_ref","","Gets a reference to the underlying <code>BufMut</code>.",8,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying <code>BufMut</code>.",8,[[]]],[11,"into_inner","","Consumes this <code>Writer</code>, returning the underlying value.",8,[[]]],[11,"new","bytes","Creates a new empty <code>Bytes</code>.",9,[[],["bytes",3]]],[11,"from_static","","Creates a new <code>Bytes</code> from a static slice.",9,[[],["bytes",3]]],[11,"len","","Returns the number of bytes contained in this <code>Bytes</code>.",9,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>Bytes</code> has a length of 0.",9,[[],["bool",15]]],[11,"copy_from_slice","","Creates <code>Bytes</code> instance from slice, by copying it.",9,[[]]],[11,"slice","","Returns a slice of self for the provided range.",9,[[],["bytes",3]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given …",9,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",9,[[["usize",15]],["bytes",3]]],[11,"split_to","","Splits the bytes into two at the given index.",9,[[["usize",15]],["bytes",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and …",9,[[["usize",15]]]],[11,"clear","","Clears the buffer, removing all data.",9,[[]]],[11,"with_capacity","","Creates a new <code>BytesMut</code> with the specified capacity.",10,[[["usize",15]],["bytesmut",3]]],[11,"new","","Creates a new <code>BytesMut</code> with default capacity.",10,[[],["bytesmut",3]]],[11,"len","","Returns the number of bytes contained in this <code>BytesMut</code>.",10,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>BytesMut</code> has a length of 0.",10,[[],["bool",15]]],[11,"capacity","","Returns the number of bytes the <code>BytesMut</code> can hold without …",10,[[],["usize",15]]],[11,"freeze","","Converts <code>self</code> into an immutable <code>Bytes</code>.",10,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",10,[[["usize",15]],["bytesmut",3]]],[11,"split","","Removes the bytes from the current view, returning them …",10,[[],["bytesmut",3]]],[11,"split_to","","Splits the buffer into two at the given index.",10,[[["usize",15]],["bytesmut",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and …",10,[[["usize",15]]]],[11,"clear","","Clears the buffer, removing all data.",10,[[]]],[11,"resize","","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.",10,[[["usize",15],["u8",15]]]],[11,"set_len","","Sets the length of the buffer.",10,[[["usize",15]]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more bytes to …",10,[[["usize",15]]]],[11,"extend_from_slice","","Appends given bytes to this <code>BytesMut</code>.",10,[[]]],[11,"unsplit","","Absorbs a <code>BytesMut</code> that was previously split off.",10,[[["bytesmut",3]]]]],"p":[[8,"Buf"],[8,"BufMut"],[3,"Chain"],[3,"IntoIter"],[3,"Limit"],[3,"Reader"],[3,"Take"],[3,"UninitSlice"],[3,"Writer"],[3,"Bytes"],[3,"BytesMut"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate …",null,null]],"p":[]},\
"encoding_rs":{"doc":"encoding_rs is a Gecko-oriented Free Software / Open …","i":[[0,"mem","encoding_rs","Functions for converting between different in-RAM …",null,null],[4,"Latin1Bidi","encoding_rs::mem","Classification of text as Latin1 (all code points are …",null,null],[13,"Latin1","","Every character is below U+0100.",0,null],[13,"LeftToRight","","There is at least one character that\'s U+0100 or higher, …",0,null],[13,"Bidi","","There is at least one right-to-left character.",0,null],[5,"is_ascii","","Checks whether the buffer is all-ASCII.",null,[[],["bool",15]]],[5,"is_basic_latin","","Checks whether the buffer is all-Basic Latin (i.e. UTF-16 …",null,[[],["bool",15]]],[5,"is_utf8_latin1","","Checks whether the buffer is valid UTF-8 representing …",null,[[],["bool",15]]],[5,"is_str_latin1","","Checks whether the buffer represents only code points …",null,[[["str",15]],["bool",15]]],[5,"is_utf16_latin1","","Checks whether the buffer represents only code point less …",null,[[],["bool",15]]],[5,"is_utf8_bidi","","Checks whether a potentially-invalid UTF-8 buffer …",null,[[],["bool",15]]],[5,"is_str_bidi","","Checks whether a valid UTF-8 buffer contains code points …",null,[[["str",15]],["bool",15]]],[5,"is_utf16_bidi","","Checks whether a UTF-16 buffer contains code points that …",null,[[],["bool",15]]],[5,"is_char_bidi","","Checks whether a scalar value triggers right-to-left …",null,[[["char",15]],["bool",15]]],[5,"is_utf16_code_unit_bidi","","Checks whether a UTF-16 code unit triggers right-to-left …",null,[[["u16",15]],["bool",15]]],[5,"check_utf8_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-8 buffer …",null,[[],["latin1bidi",4]]],[5,"check_str_for_latin1_and_bidi","","Checks whether a valid UTF-8 buffer contains code points …",null,[[["str",15]],["latin1bidi",4]]],[5,"check_utf16_for_latin1_and_bidi","","Checks whether a potentially invalid UTF-16 buffer …",null,[[],["latin1bidi",4]]],[5,"convert_utf8_to_utf16","","Converts potentially-invalid UTF-8 to valid UTF-16 with …",null,[[],["usize",15]]],[5,"convert_str_to_utf16","","Converts valid UTF-8 to valid UTF-16.",null,[[["str",15]],["usize",15]]],[5,"convert_utf8_to_utf16_without_replacement","","Converts potentially-invalid UTF-8 to valid UTF-16 …",null,[[],[["option",4],["usize",15]]]],[5,"convert_utf16_to_utf8_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with …",null,[[]]],[5,"convert_utf16_to_utf8","","Converts potentially-invalid UTF-16 to valid UTF-8 with …",null,[[],["usize",15]]],[5,"convert_utf16_to_str_partial","","Converts potentially-invalid UTF-16 to valid UTF-8 with …",null,[[["str",15]]]],[5,"convert_utf16_to_str","","Converts potentially-invalid UTF-16 to valid UTF-8 with …",null,[[["str",15]],["usize",15]]],[5,"convert_latin1_to_utf16","","Converts bytes whose unsigned value is interpreted as …",null,[[]]],[5,"convert_latin1_to_utf8_partial","","Converts bytes whose unsigned value is interpreted as …",null,[[]]],[5,"convert_latin1_to_utf8","","Converts bytes whose unsigned value is interpreted as …",null,[[],["usize",15]]],[5,"convert_latin1_to_str_partial","","Converts bytes whose unsigned value is interpreted as …",null,[[["str",15]]]],[5,"convert_latin1_to_str","","Converts bytes whose unsigned value is interpreted as …",null,[[["str",15]],["usize",15]]],[5,"convert_utf8_to_latin1_lossy","","If the input is valid UTF-8 representing only Unicode …",null,[[],["usize",15]]],[5,"convert_utf16_to_latin1_lossy","","If the input is valid UTF-16 representing only Unicode …",null,[[]]],[5,"decode_latin1","","Converts bytes whose unsigned value is interpreted as …",null,[[],[["cow",4],["str",15]]]],[5,"encode_latin1_lossy","","If the input is valid UTF-8 representing only Unicode …",null,[[["str",15]],["cow",4]]],[5,"utf16_valid_up_to","","Returns the index of the first unpaired surrogate or, if …",null,[[],["usize",15]]],[5,"utf8_latin1_up_to","","Returns the index of first byte that starts an invalid …",null,[[],["usize",15]]],[5,"str_latin1_up_to","","Returns the index of first byte that starts a non-Latin1 …",null,[[["str",15]],["usize",15]]],[5,"ensure_utf16_validity","","Replaces unpaired surrogates in the input with the …",null,[[]]],[5,"copy_ascii_to_ascii","","Copies ASCII from source to destination up to the first …",null,[[],["usize",15]]],[5,"copy_ascii_to_basic_latin","","Copies ASCII from source to destination zero-extending it …",null,[[],["usize",15]]],[5,"copy_basic_latin_to_ascii","","Copies Basic Latin from source to destination narrowing …",null,[[],["usize",15]]],[7,"BIG5_INIT","encoding_rs","The initializer for the Big5 encoding.",null,null],[7,"BIG5","","The Big5 encoding.",null,null],[7,"EUC_JP_INIT","","The initializer for the EUC-JP encoding.",null,null],[7,"EUC_JP","","The EUC-JP encoding.",null,null],[7,"EUC_KR_INIT","","The initializer for the EUC-KR encoding.",null,null],[7,"EUC_KR","","The EUC-KR encoding.",null,null],[7,"GBK_INIT","","The initializer for the GBK encoding.",null,null],[7,"GBK","","The GBK encoding.",null,null],[7,"IBM866_INIT","","The initializer for the IBM866 encoding.",null,null],[7,"IBM866","","The IBM866 encoding.",null,null],[7,"ISO_2022_JP_INIT","","The initializer for the ISO-2022-JP encoding.",null,null],[7,"ISO_2022_JP","","The ISO-2022-JP encoding.",null,null],[7,"ISO_8859_10_INIT","","The initializer for the ISO-8859-10 encoding.",null,null],[7,"ISO_8859_10","","The ISO-8859-10 encoding.",null,null],[7,"ISO_8859_13_INIT","","The initializer for the ISO-8859-13 encoding.",null,null],[7,"ISO_8859_13","","The ISO-8859-13 encoding.",null,null],[7,"ISO_8859_14_INIT","","The initializer for the ISO-8859-14 encoding.",null,null],[7,"ISO_8859_14","","The ISO-8859-14 encoding.",null,null],[7,"ISO_8859_15_INIT","","The initializer for the ISO-8859-15 encoding.",null,null],[7,"ISO_8859_15","","The ISO-8859-15 encoding.",null,null],[7,"ISO_8859_16_INIT","","The initializer for the ISO-8859-16 encoding.",null,null],[7,"ISO_8859_16","","The ISO-8859-16 encoding.",null,null],[7,"ISO_8859_2_INIT","","The initializer for the ISO-8859-2 encoding.",null,null],[7,"ISO_8859_2","","The ISO-8859-2 encoding.",null,null],[7,"ISO_8859_3_INIT","","The initializer for the ISO-8859-3 encoding.",null,null],[7,"ISO_8859_3","","The ISO-8859-3 encoding.",null,null],[7,"ISO_8859_4_INIT","","The initializer for the ISO-8859-4 encoding.",null,null],[7,"ISO_8859_4","","The ISO-8859-4 encoding.",null,null],[7,"ISO_8859_5_INIT","","The initializer for the ISO-8859-5 encoding.",null,null],[7,"ISO_8859_5","","The ISO-8859-5 encoding.",null,null],[7,"ISO_8859_6_INIT","","The initializer for the ISO-8859-6 encoding.",null,null],[7,"ISO_8859_6","","The ISO-8859-6 encoding.",null,null],[7,"ISO_8859_7_INIT","","The initializer for the ISO-8859-7 encoding.",null,null],[7,"ISO_8859_7","","The ISO-8859-7 encoding.",null,null],[7,"ISO_8859_8_INIT","","The initializer for the ISO-8859-8 encoding.",null,null],[7,"ISO_8859_8","","The ISO-8859-8 encoding.",null,null],[7,"ISO_8859_8_I_INIT","","The initializer for the ISO-8859-8-I encoding.",null,null],[7,"ISO_8859_8_I","","The ISO-8859-8-I encoding.",null,null],[7,"KOI8_R_INIT","","The initializer for the KOI8-R encoding.",null,null],[7,"KOI8_R","","The KOI8-R encoding.",null,null],[7,"KOI8_U_INIT","","The initializer for the KOI8-U encoding.",null,null],[7,"KOI8_U","","The KOI8-U encoding.",null,null],[7,"SHIFT_JIS_INIT","","The initializer for the Shift_JIS encoding.",null,null],[7,"SHIFT_JIS","","The Shift_JIS encoding.",null,null],[7,"UTF_16BE_INIT","","The initializer for the UTF-16BE encoding.",null,null],[7,"UTF_16BE","","The UTF-16BE encoding.",null,null],[7,"UTF_16LE_INIT","","The initializer for the UTF-16LE encoding.",null,null],[7,"UTF_16LE","","The UTF-16LE encoding.",null,null],[7,"UTF_8_INIT","","The initializer for the UTF-8 encoding.",null,null],[7,"UTF_8","","The UTF-8 encoding.",null,null],[7,"GB18030_INIT","","The initializer for the gb18030 encoding.",null,null],[7,"GB18030","","The gb18030 encoding.",null,null],[7,"MACINTOSH_INIT","","The initializer for the macintosh encoding.",null,null],[7,"MACINTOSH","","The macintosh encoding.",null,null],[7,"REPLACEMENT_INIT","","The initializer for the replacement encoding.",null,null],[7,"REPLACEMENT","","The replacement encoding.",null,null],[7,"WINDOWS_1250_INIT","","The initializer for the windows-1250 encoding.",null,null],[7,"WINDOWS_1250","","The windows-1250 encoding.",null,null],[7,"WINDOWS_1251_INIT","","The initializer for the windows-1251 encoding.",null,null],[7,"WINDOWS_1251","","The windows-1251 encoding.",null,null],[7,"WINDOWS_1252_INIT","","The initializer for the windows-1252 encoding.",null,null],[7,"WINDOWS_1252","","The windows-1252 encoding.",null,null],[7,"WINDOWS_1253_INIT","","The initializer for the windows-1253 encoding.",null,null],[7,"WINDOWS_1253","","The windows-1253 encoding.",null,null],[7,"WINDOWS_1254_INIT","","The initializer for the windows-1254 encoding.",null,null],[7,"WINDOWS_1254","","The windows-1254 encoding.",null,null],[7,"WINDOWS_1255_INIT","","The initializer for the windows-1255 encoding.",null,null],[7,"WINDOWS_1255","","The windows-1255 encoding.",null,null],[7,"WINDOWS_1256_INIT","","The initializer for the windows-1256 encoding.",null,null],[7,"WINDOWS_1256","","The windows-1256 encoding.",null,null],[7,"WINDOWS_1257_INIT","","The initializer for the windows-1257 encoding.",null,null],[7,"WINDOWS_1257","","The windows-1257 encoding.",null,null],[7,"WINDOWS_1258_INIT","","The initializer for the windows-1258 encoding.",null,null],[7,"WINDOWS_1258","","The windows-1258 encoding.",null,null],[7,"WINDOWS_874_INIT","","The initializer for the windows-874 encoding.",null,null],[7,"WINDOWS_874","","The windows-874 encoding.",null,null],[7,"X_MAC_CYRILLIC_INIT","","The initializer for the x-mac-cyrillic encoding.",null,null],[7,"X_MAC_CYRILLIC","","The x-mac-cyrillic encoding.",null,null],[7,"X_USER_DEFINED_INIT","","The initializer for the x-user-defined encoding.",null,null],[7,"X_USER_DEFINED","","The x-user-defined encoding.",null,null],[3,"Encoding","","An encoding as defined in the Encoding Standard.",null,null],[11,"for_label","","Implements the <em>get an encoding</em> algorithm.",1,[[],[["option",4],["encoding",3]]]],[11,"for_label_no_replacement","","This method behaves the same as <code>for_label()</code>, except when …",1,[[],[["option",4],["encoding",3]]]],[11,"for_bom","","Performs non-incremental BOM sniffing.",1,[[],["option",4]]],[11,"name","","Returns the name of this encoding.",1,[[],["str",15]]],[11,"can_encode_everything","","Checks whether the <em>output encoding</em> of this encoding can …",1,[[],["bool",15]]],[11,"is_ascii_compatible","","Checks whether the bytes 0x00...0x7F map exclusively to …",1,[[],["bool",15]]],[11,"is_single_byte","","Checks whether this encoding maps one byte to one Basic …",1,[[],["bool",15]]],[11,"output_encoding","","Returns the <em>output encoding</em> of this encoding. This is …",1,[[],["encoding",3]]],[11,"decode","","Decode complete input to <code>Cow<\'a, str></code> <em>with BOM sniffing</em> …",1,[[]]],[11,"decode_with_bom_removal","","Decode complete input to <code>Cow<\'a, str></code> <em>with BOM removal</em> …",1,[[]]],[11,"decode_without_bom_handling","","Decode complete input to <code>Cow<\'a, str></code> <em>without BOM handling</em>…",1,[[]]],[11,"decode_without_bom_handling_and_without_replacement","","Decode complete input to <code>Cow<\'a, str></code> <em>without BOM handling</em>…",1,[[],[["cow",4],["option",4]]]],[11,"encode","","Encode complete input to <code>Cow<\'a, [u8]></code> with unmappable …",1,[[["str",15]]]],[11,"new_decoder","","Instantiates a new decoder for this encoding with BOM …",1,[[],["decoder",3]]],[11,"new_decoder_with_bom_removal","","Instantiates a new decoder for this encoding with BOM …",1,[[],["decoder",3]]],[11,"new_decoder_without_bom_handling","","Instantiates a new decoder for this encoding with BOM …",1,[[],["decoder",3]]],[11,"new_encoder","","Instantiates a new encoder for the output encoding of …",1,[[],["encoder",3]]],[11,"utf8_valid_up_to","","Validates UTF-8.",1,[[],["usize",15]]],[11,"ascii_valid_up_to","","Validates ASCII.",1,[[],["usize",15]]],[11,"iso_2022_jp_ascii_valid_up_to","","Validates ISO-2022-JP ASCII-state data.",1,[[],["usize",15]]],[4,"CoderResult","","Result of a (potentially partial) decode or encode …",null,null],[13,"InputEmpty","","The input was exhausted.",2,null],[13,"OutputFull","","The converter cannot produce another unit of output, …",2,null],[4,"DecoderResult","","Result of a (potentially partial) decode operation …",null,null],[13,"InputEmpty","","The input was exhausted.",3,null],[13,"OutputFull","","The decoder cannot produce another unit of output, …",3,null],[13,"Malformed","","The decoder encountered a malformed byte sequence.",3,null],[3,"Decoder","","A converter that decodes a byte stream into Unicode …",null,null],[11,"encoding","","The <code>Encoding</code> this <code>Decoder</code> is for.",4,[[],["encoding",3]]],[11,"max_utf8_buffer_length","","Query the worst-case UTF-8 output size <em>with replacement</em>.",4,[[["usize",15]],[["option",4],["usize",15]]]],[11,"max_utf8_buffer_length_without_replacement","","Query the worst-case UTF-8 output size <em>without replacement</em>…",4,[[["usize",15]],[["option",4],["usize",15]]]],[11,"decode_to_utf8","","Incrementally decode a byte stream into UTF-8 with …",4,[[["bool",15]]]],[11,"decode_to_str","","Incrementally decode a byte stream into UTF-8 with …",4,[[["bool",15],["str",15]]]],[11,"decode_to_string","","Incrementally decode a byte stream into UTF-8 with …",4,[[["bool",15],["string",3]]]],[11,"decode_to_utf8_without_replacement","","Incrementally decode a byte stream into UTF-8 <em>without …",4,[[["bool",15]]]],[11,"decode_to_str_without_replacement","","Incrementally decode a byte stream into UTF-8 with type …",4,[[["bool",15],["str",15]]]],[11,"decode_to_string_without_replacement","","Incrementally decode a byte stream into UTF-8 using a …",4,[[["bool",15],["string",3]]]],[11,"max_utf16_buffer_length","","Query the worst-case UTF-16 output size (with or without …",4,[[["usize",15]],[["option",4],["usize",15]]]],[11,"decode_to_utf16","","Incrementally decode a byte stream into UTF-16 with …",4,[[["bool",15]]]],[11,"decode_to_utf16_without_replacement","","Incrementally decode a byte stream into UTF-16 <em>without …",4,[[["bool",15]]]],[11,"latin1_byte_compatible_up_to","","Checks for compatibility with storing Unicode scalar …",4,[[],[["option",4],["usize",15]]]],[4,"EncoderResult","","Result of a (potentially partial) encode operation …",null,null],[13,"InputEmpty","","The input was exhausted.",5,null],[13,"OutputFull","","The encoder cannot produce another unit of output, …",5,null],[13,"Unmappable","","The encoder encountered an unmappable character.",5,null],[3,"Encoder","","A converter that encodes a Unicode stream into bytes …",null,null],[11,"encoding","","The <code>Encoding</code> this <code>Encoder</code> is for.",6,[[],["encoding",3]]],[11,"has_pending_state","","Returns <code>true</code> if this is an ISO-2022-JP encoder that\'s not …",6,[[],["bool",15]]],[11,"max_buffer_length_from_utf8_if_no_unmappables","","Query the worst-case output size when encoding from UTF-8 …",6,[[["usize",15]],[["option",4],["usize",15]]]],[11,"max_buffer_length_from_utf8_without_replacement","","Query the worst-case output size when encoding from UTF-8 …",6,[[["usize",15]],[["option",4],["usize",15]]]],[11,"encode_from_utf8","","Incrementally encode into byte stream from UTF-8 with …",6,[[["bool",15],["str",15]]]],[11,"encode_from_utf8_to_vec","","Incrementally encode into byte stream from UTF-8 with …",6,[[["vec",3],["bool",15],["str",15]]]],[11,"encode_from_utf8_without_replacement","","Incrementally encode into byte stream from UTF-8 <em>without …",6,[[["bool",15],["str",15]]]],[11,"encode_from_utf8_to_vec_without_replacement","","Incrementally encode into byte stream from UTF-8 <em>without …",6,[[["vec",3],["bool",15],["str",15]]]],[11,"max_buffer_length_from_utf16_if_no_unmappables","","Query the worst-case output size when encoding from …",6,[[["usize",15]],[["option",4],["usize",15]]]],[11,"max_buffer_length_from_utf16_without_replacement","","Query the worst-case output size when encoding from …",6,[[["usize",15]],[["option",4],["usize",15]]]],[11,"encode_from_utf16","","Incrementally encode into byte stream from UTF-16 with …",6,[[["bool",15]]]],[11,"encode_from_utf16_without_replacement","","Incrementally encode into byte stream from UTF-16 <em>without …",6,[[["bool",15]]]],[11,"from","encoding_rs::mem","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","encoding_rs","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"fmt","encoding_rs::mem","",0,[[["formatter",3]],["result",6]]],[11,"fmt","encoding_rs","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"eq","encoding_rs::mem","",0,[[["latin1bidi",4]],["bool",15]]],[11,"eq","encoding_rs","",1,[[["encoding",3]],["bool",15]]],[11,"eq","","",2,[[["coderresult",4]],["bool",15]]],[11,"eq","","",3,[[["decoderresult",4]],["bool",15]]],[11,"ne","","",3,[[["decoderresult",4]],["bool",15]]],[11,"eq","","",5,[[["encoderresult",4]],["bool",15]]],[11,"ne","","",5,[[["encoderresult",4]],["bool",15]]],[11,"hash","","",1,[[]]]],"p":[[4,"Latin1Bidi"],[3,"Encoding"],[4,"CoderResult"],[4,"DecoderResult"],[3,"Decoder"],[4,"EncoderResult"],[3,"Encoder"]]},\
"fnv":{"doc":"An implementation of the [Fowler–Noll–Vo hash function…","i":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"with_key","","Create an FNV hasher starting with a state corresponding …",0,[[["u64",15]],["fnvhasher",3]]],[6,"FnvBuildHasher","","A builder for default FNV hashers.",null,null],[6,"FnvHashMap","","A <code>HashMap</code> using a default FNV hasher.",null,null],[6,"FnvHashSet","","A <code>HashSet</code> using a default FNV hasher.",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",0,[[],["fnvhasher",3]]],[11,"finish","","",0,[[],["u64",15]]],[11,"write","","",0,[[]]]],"p":[[3,"FnvHasher"]]},\
"form_urlencoded":{"doc":"Parser and serializer for the …","i":[[5,"parse","form_urlencoded","Convert a byte string in the …",null,[[],["parse",3]]],[3,"Parse","","The return type of <code>parse()</code>.",null,null],[11,"into_owned","","Return a new iterator that yields pairs of <code>String</code> instead …",0,[[],["parseintoowned",3]]],[3,"ParseIntoOwned","","Like <code>Parse</code>, but yields pairs of <code>String</code> instead of pairs …",null,null],[5,"byte_serialize","","The <code>application/x-www-form-urlencoded</code> byte serializer.",null,[[],["byteserialize",3]]],[3,"ByteSerialize","","Return value of <code>byte_serialize()</code>.",null,null],[3,"Serializer","","The <code>application/x-www-form-urlencoded</code> serializer.",null,null],[8,"Target","","",null,null],[10,"as_mut_string","","",1,[[],["string",3]]],[10,"finish","","",1,[[]]],[16,"Finished","","",1,null],[11,"new","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",2,[[]]],[11,"for_suffix","","Create a new <code>application/x-www-form-urlencoded</code> serializer …",2,[[["usize",15]]]],[11,"clear","","Remove any existing name/value pair.",2,[[]]],[11,"encoding_override","","Set the character encoding to be used for names and …",2,[[["encodingoverride",6]]]],[11,"append_pair","","Serialize and append a name/value pair.",2,[[["str",15]]]],[11,"append_key_only","","Serialize and append a name of parameter without any …",2,[[["str",15]]]],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",2,[[]]],[11,"extend_keys_only","","Serialize and append a number of names without values.",2,[[]]],[11,"finish","","If this serializer was constructed with a string, take …",2,[[]]],[6,"EncodingOverride","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next","","",0,[[],["option",4]]],[11,"next","","",3,[[],["option",4]]],[11,"next","","",4,[[],[["str",15],["option",4]]]],[11,"size_hint","","",4,[[]]],[11,"clone","","",0,[[],["parse",3]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]]],"p":[[3,"Parse"],[8,"Target"],[3,"Serializer"],[3,"ParseIntoOwned"],[3,"ByteSerialize"]]},\
"futures_channel":{"doc":"Asynchronous channels.","i":[[0,"mpsc","futures_channel","A multi-producer, single-consumer queue for sending …",null,null],[3,"Sender","futures_channel::mpsc","The transmission end of a bounded mpsc channel.",null,null],[3,"UnboundedSender","","The transmission end of an unbounded mpsc channel.",null,null],[3,"Receiver","","The receiving end of a bounded mpsc channel.",null,null],[3,"UnboundedReceiver","","The receiving end of an unbounded mpsc channel.",null,null],[3,"SendError","","The error type for <code>Sender</code>s used as <code>Sink</code>s.",null,null],[3,"TrySendError","","The error type returned from <code>try_send</code>.",null,null],[3,"TryRecvError","","The error type returned from <code>try_next</code>.",null,null],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",0,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",0,[[],["bool",15]]],[11,"is_full","","Returns <code>true</code> if this error is a result of the channel …",1,[[],["bool",15]]],[11,"is_disconnected","","Returns <code>true</code> if this error is a result of the receiver …",1,[[],["bool",15]]],[11,"into_inner","","Returns the message that was attempted to be sent but …",1,[[]]],[11,"into_send_error","","Drops the message and converts into a <code>SendError</code>.",1,[[],["senderror",3]]],[5,"channel","","Creates a bounded mpsc channel for communicating between …",null,[[["usize",15]]]],[5,"unbounded","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[11,"try_send","","Attempts to send a message on this <code>Sender</code>, returning the …",2,[[],[["trysenderror",3],["result",4]]]],[11,"start_send","","Send a message on the channel.",2,[[],[["result",4],["senderror",3]]]],[11,"poll_ready","","Polls the channel to determine if there is guaranteed …",2,[[["context",3]],[["result",4],["poll",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",2,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",2,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",2,[[]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",2,[[],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",2,[[["receiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",2,[[]]],[11,"poll_ready","","Check if the channel is ready to receive a message.",3,[[["context",3]],[["result",4],["poll",4]]]],[11,"is_closed","","Returns whether this channel is closed without needing a …",3,[[],["bool",15]]],[11,"close_channel","","Closes this channel from the sender side, preventing any …",3,[[]]],[11,"disconnect","","Disconnects this sender from the channel, closing it if …",3,[[]]],[11,"start_send","","Send a message on the channel.",3,[[],[["result",4],["senderror",3]]]],[11,"unbounded_send","","Sends a message along this channel.",3,[[],[["trysenderror",3],["result",4]]]],[11,"same_receiver","","Returns whether the senders send to the same receiver.",3,[[],["bool",15]]],[11,"is_connected_to","","Returns whether the sender send to this receiver.",3,[[["unboundedreceiver",3]],["bool",15]]],[11,"hash_receiver","","Hashes the receiver into the provided hasher",3,[[]]],[11,"close","","Closes the receiving half of a channel, without dropping …",4,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",4,[[],[["result",4],["option",4],["tryrecverror",3]]]],[11,"close","","Closes the receiving half of a channel, without dropping …",5,[[]]],[11,"try_next","","Tries to receive the next message without notifying a …",5,[[],[["result",4],["option",4],["tryrecverror",3]]]],[0,"oneshot","futures_channel","A channel for sending a single message between …",null,null],[3,"Receiver","futures_channel::oneshot","A future for a value that will be provided by another …",null,null],[3,"Sender","","A means of transmitting a single value to another task.",null,null],[5,"channel","","Creates a new one-shot channel for sending a single value …",null,[[]]],[11,"send","","Completes this oneshot with a successful result.",6,[[],["result",4]]],[11,"poll_canceled","","Polls this <code>Sender</code> half to detect whether its associated …",6,[[["context",3]],["poll",4]]],[11,"cancellation","","Creates a future that resolves when this <code>Sender</code>\'s …",6,[[],["cancellation",3]]],[11,"is_canceled","","Tests to see whether this <code>Sender</code>\'s corresponding <code>Receiver</code> …",6,[[],["bool",15]]],[11,"is_connected_to","","Tests to see whether this <code>Sender</code> is connected to the …",6,[[["receiver",3]],["bool",15]]],[3,"Cancellation","","A future that resolves when the receiving end of a …",null,null],[3,"Canceled","","Error returned from a <code>Receiver</code> when the corresponding …",null,null],[11,"close","","Gracefully close this receiver, preventing any subsequent …",7,[[]]],[11,"try_recv","","Attempts to receive a message outside of the context of a …",7,[[],[["option",4],["canceled",3],["result",4]]]],[11,"from","futures_channel::mpsc","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"try_poll_next","","",4,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"try_poll_next","","",5,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","futures_channel::oneshot","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_future","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"drop","futures_channel::mpsc","",4,[[]]],[11,"drop","","",5,[[]]],[11,"drop","futures_channel::oneshot","",6,[[]]],[11,"drop","","",7,[[]]],[11,"clone","futures_channel::mpsc","",0,[[],["senderror",3]]],[11,"clone","","",1,[[],["trysenderror",3]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","futures_channel::oneshot","",10,[[],["canceled",3]]],[11,"eq","futures_channel::mpsc","",0,[[["senderror",3]],["bool",15]]],[11,"ne","","",0,[[["senderror",3]],["bool",15]]],[11,"eq","","",1,[[["trysenderror",3]],["bool",15]]],[11,"ne","","",1,[[["trysenderror",3]],["bool",15]]],[11,"eq","futures_channel::oneshot","",10,[[["canceled",3]],["bool",15]]],[11,"fmt","futures_channel::mpsc","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::mpsc","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","futures_channel::oneshot","",10,[[["formatter",3]],["result",6]]],[11,"poll","","",9,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"poll_next","futures_channel::mpsc","",4,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",5,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"is_terminated","","",4,[[],["bool",15]]],[11,"is_terminated","","",5,[[],["bool",15]]]],"p":[[3,"SendError"],[3,"TrySendError"],[3,"Sender"],[3,"UnboundedSender"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"Receiver"],[3,"TryRecvError"],[3,"Cancellation"],[3,"Canceled"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","i":[[0,"future","futures_core","Futures.",null,null],[6,"BoxFuture","futures_core::future","An owned dynamically typed [<code>Future</code>] for use in cases …",null,null],[6,"LocalBoxFuture","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.",null,null],[8,"FusedFuture","","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",1,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[0,"stream","futures_core","Asynchronous streams.",null,null],[6,"BoxStream","futures_core::stream","An owned dynamically typed [<code>Stream</code>] for use in cases …",null,null],[6,"LocalBoxStream","","<code>BoxStream</code>, but without the <code>Send</code> requirement.",null,null],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",2,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",2,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",2,[[]]],[8,"FusedStream","","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",3,[[],["bool",15]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",4,null],[16,"Error","","The type of failures yielded by this future",4,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",4,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[0,"task","futures_core","Task notification.",null,null],[14,"ready","","Extracts the successful type of a <code>Poll<T></code>.",null,null]],"p":[[8,"FusedFuture"],[8,"TryFuture"],[8,"Stream"],[8,"FusedStream"],[8,"TryStream"]]},\
"futures_sink":{"doc":"Asynchronous sinks","i":[[8,"Sink","futures_sink","A <code>Sink</code> is a value into which other values can be sent, …",null,null],[16,"Error","","The type of value produced by the sink when an error …",0,null],[10,"poll_ready","","Attempts to prepare the <code>Sink</code> to receive a value.",0,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"start_send","","Begin the process of sending a value to the sink. Each …",0,[[["pin",3]],["result",4]]],[10,"poll_flush","","Flush any remaining output from this sink.",0,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[10,"poll_close","","Flush any remaining output and close this sink, if …",0,[[["pin",3],["context",3]],[["result",4],["poll",4]]]]],"p":[[8,"Sink"]]},\
"futures_task":{"doc":"Tools for working with tasks.","i":[[8,"LocalSpawn","futures_task","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",0,[[["localfutureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",0,[[],[["result",4],["spawnerror",3]]]],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",1,[[["futureobj",3]],[["result",4],["spawnerror",3]]]],[11,"status","","Determines whether the executor is able to spawn new …",1,[[],[["result",4],["spawnerror",3]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",2,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",2,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[5,"noop_waker_ref","","Get a static reference to a [<code>Waker</code>] which does nothing …",null,[[],["waker",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_future","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"from","","",4,[[["futureobj",3]]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"drop","","",4,[[]]],[11,"poll","","",4,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"status","","Determines whether the executor is able to spawn new …",1,[[],[["result",4],["spawnerror",3]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",0,[[],[["result",4],["spawnerror",3]]]],[11,"shutdown","","Spawning failed because the executor has been shut down.",3,[[]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",3,[[],["bool",15]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",4,[[["unsafefutureobj",8]]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",4,[[],["futureobj",3]]],[11,"new","","Create a <code>FutureObj</code> from a custom trait object …",5,[[["send",8],["unsafefutureobj",8]]]]],"p":[[8,"LocalSpawn"],[8,"Spawn"],[8,"UnsafeFutureObj"],[3,"SpawnError"],[3,"LocalFutureObj"],[3,"FutureObj"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","i":[[0,"future","futures_util","Asynchronous values.",null,null],[8,"FusedFuture","futures_util::future","A future which tracks whether or not the underlying future…",null,null],[10,"is_terminated","","Returns <code>true</code> if the underlying future should no longer be …",0,[[],["bool",15]]],[8,"TryFuture","","A convenience for futures that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",1,null],[16,"Error","","The type of failures yielded by this future",1,null],[10,"try_poll","","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.",1,[[["context",3],["pin",3]],[["result",4],["poll",4]]]],[3,"FutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",2,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",2,[[]]],[3,"Flatten","","Future for the <code>flatten</code> method.",null,null],[3,"Fuse","","Future for the <code>fuse</code> method.",null,null],[8,"FutureExt","","An extension trait for <code>Future</code>s that provides a variety of …",null,null],[11,"map","","Map this future\'s output to a different type, returning a …",3,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",3,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",3,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",3,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",3,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",3,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",3,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",3,[[],["inspect",3]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",3,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",3,[[],["option",4]]],[3,"Inspect","","Future for the <code>inspect</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"Map","","Future for the <code>map</code> method.",null,null],[3,"MapInto","","Future for the <code>map_into</code> combinator.",null,null],[3,"NeverError","","Future for the <code>never_error</code> combinator.",null,null],[3,"Then","","Future for the <code>then</code> method.",null,null],[3,"UnitError","","Future for the <code>unit_error</code> combinator.",null,null],[3,"FlattenStream","","Stream for the <code>flatten_stream</code> method.",null,null],[3,"AndThen","","Future for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Future for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Future for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Future for the <code>inspect_ok</code> method.",null,null],[3,"IntoFuture","","Future for the <code>into_future</code> method.",null,null],[3,"MapErr","","Future for the <code>map_err</code> method.",null,null],[3,"MapOk","","Future for the <code>map_ok</code> method.",null,null],[3,"MapOkOrElse","","Future for the <code>map_ok_or_else</code> method.",null,null],[3,"OkInto","","Future for the <code>ok_into</code> method.",null,null],[3,"OrElse","","Future for the <code>or_else</code> method.",null,null],[3,"TryFlatten","","Future for the <code>try_flatten</code> method.",null,null],[3,"TryFlattenStream","","Future for the <code>try_flatten_stream</code> method.",null,null],[8,"TryFutureExt","","Adapters specific to [<code>Result</code>]-returning futures",null,null],[11,"map_ok","","Maps this future\'s success value to a different value.",4,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",4,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",4,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",4,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",4,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",4,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",4,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",4,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",4,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",4,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s output, producing a future with …",4,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",4,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",4,[[["context",3]],[["result",4],["poll",4]]]],[3,"UnwrapOrElse","","Future for the <code>unwrap_or_else</code> method.",null,null],[5,"lazy","","Creates a new future that allows delayed execution of a …",null,[[],["lazy",3]]],[3,"Lazy","","Future for the [<code>lazy</code>] function.",null,null],[5,"pending","","Creates a future which never resolves, representing a …",null,[[],["pending",3]]],[3,"Pending","","Future for the [<code>pending()</code>] function.",null,null],[5,"maybe_done","","Wraps a future into a <code>MaybeDone</code>",null,[[["future",8]],[["maybedone",4],["future",8]]]],[4,"MaybeDone","","A future that may have completed.",null,null],[13,"Future","","A not-yet-completed future",5,null],[13,"Done","","The output of the completed future",5,null],[13,"Gone","","The empty variant after the result of a [<code>MaybeDone</code>] has …",5,null],[5,"try_maybe_done","","Wraps a future into a <code>TryMaybeDone</code>",null,[[["tryfuture",8]],[["tryfuture",8],["trymaybedone",4]]]],[4,"TryMaybeDone","","A future that may have completed with an error.",null,null],[13,"Future","","A not-yet-completed future",6,null],[13,"Done","","The output of the completed future",6,null],[13,"Gone","","The empty variant after the result of a [<code>TryMaybeDone</code>] …",6,null],[3,"OptionFuture","","A future representing a value which may or may not be …",null,null],[5,"poll_fn","","Creates a new future wrapping around a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Future for the [<code>poll_fn</code>] function.",null,null],[5,"err","","Create a future that is immediately ready with an error …",null,[[],[["ready",3],["result",4]]]],[5,"ok","","Create a future that is immediately ready with a success …",null,[[],[["ready",3],["result",4]]]],[5,"ready","","Creates a future that is immediately ready with a value.",null,[[],["ready",3]]],[3,"Ready","","Future for the <code>ready</code> function.",null,null],[5,"join","","Joins the result of two futures, waiting for them both to …",null,[[],["join",3]]],[5,"join3","","Same as <code>join</code>, but with more futures.",null,[[],["join3",3]]],[5,"join4","","Same as <code>join</code>, but with more futures.",null,[[],["join4",3]]],[5,"join5","","Same as <code>join</code>, but with more futures.",null,[[],["join5",3]]],[3,"Join","","Future for the <code>join</code> function.",null,null],[3,"Join3","","Future for the [<code>join3</code>] function.",null,null],[3,"Join4","","Future for the [<code>join4</code>] function.",null,null],[3,"Join5","","Future for the [<code>join5</code>] function.",null,null],[5,"select","","Waits for either one of two differently-typed futures to …",null,[[],["select",3]]],[3,"Select","","Future for the [<code>select()</code>] function.",null,null],[5,"try_join","","Joins the result of two futures, waiting for them both to …",null,[[],["tryjoin",3]]],[5,"try_join3","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin3",3]]],[5,"try_join4","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin4",3]]],[5,"try_join5","","Same as <code>try_join</code>, but with more futures.",null,[[],["tryjoin5",3]]],[3,"TryJoin","","Future for the <code>try_join</code> function.",null,null],[3,"TryJoin3","","Future for the [<code>try_join3</code>] function.",null,null],[3,"TryJoin4","","Future for the [<code>try_join4</code>] function.",null,null],[3,"TryJoin5","","Future for the [<code>try_join5</code>] function.",null,null],[5,"try_select","","Waits for either one of two differently-typed futures to …",null,[[],["tryselect",3]]],[3,"TrySelect","","Future for the [<code>try_select()</code>] function.",null,null],[4,"Either","","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","First branch of the type",7,null],[13,"Right","","Second branch of the type",7,null],[0,"stream","futures_util","Asynchronous streams.",null,null],[8,"FusedStream","futures_util::stream","A stream which tracks whether or not the underlying stream…",null,null],[10,"is_terminated","","Returns <code>true</code> if the stream should no longer be polled.",8,[[],["bool",15]]],[8,"Stream","","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",9,null],[10,"poll_next","","Attempt to pull out the next value of this stream, …",9,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",9,[[]]],[8,"TryStream","","A convenience for streams that return <code>Result</code> values that …",null,null],[16,"Ok","","The type of successful values yielded by this future",10,null],[16,"Error","","The type of failures yielded by this future",10,null],[10,"try_poll_next","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.",10,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[3,"Chain","","Stream for the <code>chain</code> method.",null,null],[3,"Collect","","Future for the <code>collect</code> method.",null,null],[3,"Concat","","Future for the <code>concat</code> method.",null,null],[3,"Cycle","","Stream for the <code>cycle</code> method.",null,null],[3,"Enumerate","","Stream for the <code>enumerate</code> method.",null,null],[3,"Filter","","Stream for the <code>filter</code> method.",null,null],[3,"FilterMap","","Stream for the <code>filter_map</code> method.",null,null],[3,"FlatMap","","Stream for the <code>flat_map</code> method.",null,null],[3,"Flatten","","Stream for the <code>flatten</code> method.",null,null],[3,"Fold","","Future for the <code>fold</code> method.",null,null],[3,"ForEach","","Future for the <code>for_each</code> method.",null,null],[3,"Fuse","","Stream for the <code>fuse</code> method.",null,null],[3,"Inspect","","Stream for the <code>inspect</code> method.",null,null],[3,"Map","","Stream for the <code>map</code> method.",null,null],[3,"Next","","Future for the <code>next</code> method.",null,null],[3,"NextIf","","Future for the <code>Peekable::next_if</code> method.",null,null],[3,"NextIfEq","","Future for the <code>Peekable::next_if_eq</code> method.",null,null],[3,"Peek","","Future for the <code>Peekable::peek</code> method.",null,null],[3,"Peekable","","A <code>Stream</code> that implements a <code>peek</code> method.",null,null],[3,"Scan","","Stream for the <code>scan</code> method.",null,null],[3,"SelectNextSome","","Future for the <code>select_next_some</code> method.",null,null],[3,"Skip","","Stream for the <code>skip</code> method.",null,null],[3,"SkipWhile","","Stream for the <code>skip_while</code> method.",null,null],[8,"StreamExt","","An extension trait for <code>Stream</code>s that provides a variety of …",null,null],[11,"next","","Creates a future that resolves to the next item in the …",11,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",11,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",11,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",11,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",11,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",11,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",11,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",11,[[],[["extend",8],["collect",3],["default",8]]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",11,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",11,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",11,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",11,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",11,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",11,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",11,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",11,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",11,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",11,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",11,[[],["foreach",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",11,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",11,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",11,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",11,[[]]],[11,"zip","","An adapter for zipping two streams together.",11,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",11,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",11,[[],["peekable",3]]],[11,"inspect","","Do something with each item of this stream, afterwards …",11,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",11,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",11,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",11,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",11,[[],["selectnextsome",3]]],[3,"StreamFuture","","Future for the <code>into_future</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[3,"TakeUntil","","Stream for the <code>take_until</code> method.",null,null],[3,"TakeWhile","","Stream for the <code>take_while</code> method.",null,null],[3,"Then","","Stream for the <code>then</code> method.",null,null],[3,"Unzip","","Future for the <code>unzip</code> method.",null,null],[3,"Zip","","Stream for the <code>zip</code> method.",null,null],[5,"try_unfold","","Creates a <code>TryStream</code> from a seed and a closure returning a …",null,[[],["tryunfold",3]]],[3,"AndThen","","Stream for the <code>and_then</code> method.",null,null],[3,"ErrInto","","Stream for the <code>err_into</code> method.",null,null],[3,"InspectErr","","Stream for the <code>inspect_err</code> method.",null,null],[3,"InspectOk","","Stream for the <code>inspect_ok</code> method.",null,null],[3,"IntoStream","","Stream for the <code>into_stream</code> method.",null,null],[3,"MapErr","","Stream for the <code>map_err</code> method.",null,null],[3,"MapOk","","Stream for the <code>map_ok</code> method.",null,null],[3,"OrElse","","Stream for the <code>or_else</code> method.",null,null],[3,"TryCollect","","Future for the <code>try_collect</code> method.",null,null],[3,"TryConcat","","Future for the <code>try_concat</code> method.",null,null],[3,"TryFilter","","Stream for the <code>try_filter</code> method.",null,null],[3,"TryFilterMap","","Stream for the <code>try_filter_map</code> method.",null,null],[3,"TryFlatten","","Stream for the <code>try_flatten</code> method.",null,null],[3,"TryFold","","Future for the <code>try_fold</code> method.",null,null],[3,"TryForEach","","Future for the <code>try_for_each</code> method.",null,null],[3,"TryNext","","Future for the <code>try_next</code> method.",null,null],[3,"TrySkipWhile","","Stream for the <code>try_skip_while</code> method.",null,null],[8,"TryStreamExt","","Adapters specific to <code>Result</code>-returning streams",null,null],[11,"err_into","","Wraps the current stream in a new stream which converts …",12,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",12,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",12,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",12,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",12,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",12,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",12,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",12,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",12,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",12,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",12,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",12,[[],["trytakewhile",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",12,[[],[["default",8],["trycollect",3],["extend",8]]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",12,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",12,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",12,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",12,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",12,[[],["tryconcat",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",12,[[["context",3]],[["poll",4],["option",4]]]],[3,"TryTakeWhile","","Stream for the <code>try_take_while</code> method.",null,null],[3,"TryUnfold","","Stream for the [<code>try_unfold</code>] function.",null,null],[5,"iter","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …",null,[[],["iter",3]]],[3,"Iter","","Stream for the [<code>iter</code>] function.",null,null],[5,"repeat","","Create a stream which produces the same item repeatedly.",null,[[],["repeat",3]]],[3,"Repeat","","Stream for the [<code>repeat</code>] function.",null,null],[5,"repeat_with","","Creates a new stream that repeats elements of type <code>A</code> …",null,[[["fnmut",8]],[["fnmut",8],["repeatwith",3]]]],[3,"RepeatWith","","An stream that repeats elements of type <code>A</code> endlessly by …",null,null],[5,"empty","","Creates a stream which contains no elements.",null,[[],["empty",3]]],[3,"Empty","","Stream for the [<code>empty</code>] function.",null,null],[5,"once","","Creates a stream of a single element.",null,[[["future",8]],[["once",3],["future",8]]]],[3,"Once","","A stream which emits single element and then EOF.",null,null],[5,"pending","","Creates a stream which never returns any elements.",null,[[],["pending",3]]],[3,"Pending","","Stream for the [<code>pending()</code>] function.",null,null],[5,"poll_fn","","Creates a new stream wrapping a function returning …",null,[[],["pollfn",3]]],[3,"PollFn","","Stream for the [<code>poll_fn</code>] function.",null,null],[5,"select","","This function will attempt to pull items from both …",null,[[],["select",3]]],[3,"Select","","Stream for the [<code>select()</code>] function.",null,null],[5,"unfold","","Creates a <code>Stream</code> from a seed and a closure returning a …",null,[[],["unfold",3]]],[3,"Unfold","","Stream for the [<code>unfold</code>] function.",null,null],[0,"task","futures_util","Tools for working with tasks.",null,null],[3,"FutureObj","futures_util::task","A custom trait object for polling futures, roughly akin to…",null,null],[3,"LocalFutureObj","","A custom trait object for polling futures, roughly akin to…",null,null],[8,"LocalSpawn","","The <code>LocalSpawn</code> is similar to [<code>Spawn</code>], but allows spawning …",null,null],[10,"spawn_local_obj","","Spawns a future that will be run to completion.",13,[[["localfutureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status_local","","Determines whether the executor is able to spawn new …",13,[[],[["spawnerror",3],["result",4]]]],[8,"Spawn","","The <code>Spawn</code> trait allows for pushing futures onto an …",null,null],[10,"spawn_obj","","Spawns a future that will be run to completion.",14,[[["futureobj",3]],[["spawnerror",3],["result",4]]]],[11,"status","","Determines whether the executor is able to spawn new …",14,[[],[["spawnerror",3],["result",4]]]],[3,"SpawnError","","An error that occurred during spawning.",null,null],[8,"UnsafeFutureObj","","A custom implementation of a future trait object for …",null,null],[10,"into_raw","","Convert an owned instance into a (conceptually owned) fat …",2,[[]]],[10,"drop","","Drops the future represented by the given fat pointer.",2,[[]]],[5,"noop_waker","","Create a new [<code>Waker</code>] which does nothing when <code>wake()</code> is …",null,[[],["waker",3]]],[3,"AtomicWaker","","A synchronization primitive for task wakeup.",null,null],[8,"LocalSpawnExt","","Extension trait for <code>LocalSpawn</code>.",null,null],[8,"SpawnExt","","Extension trait for <code>Spawn</code>.",null,null],[0,"never","futures_util","This module contains the <code>Never</code> type.",null,null],[6,"Never","futures_util::never","A type with no possible values.",null,null],[14,"ready","futures_util","Extracts the successful type of a <code>Poll<T></code>.",null,null],[14,"pin_mut","","Pins a value on the stack.",null,null],[11,"from","futures_util::future","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_future","","",15,[[]]],[11,"try_poll","","",15,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_future","","",16,[[]]],[11,"try_poll","","",16,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"try_poll_next","","",17,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_future","","",18,[[]]],[11,"try_poll","","",18,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"try_poll_next","","",19,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_future","","",20,[[]]],[11,"try_poll","","",20,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_future","","",21,[[]]],[11,"try_poll","","",21,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_future","","",22,[[]]],[11,"try_poll","","",22,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_future","","",23,[[]]],[11,"try_poll","","",23,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_future","","",24,[[]]],[11,"try_poll","","",24,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_future","","",25,[[]]],[11,"try_poll","","",25,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_future","","",26,[[]]],[11,"try_poll","","",26,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"try_poll_next","","",27,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_future","","",28,[[]]],[11,"try_poll","","",28,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_future","","",29,[[]]],[11,"try_poll","","",29,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_future","","",30,[[]]],[11,"try_poll","","",30,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_future","","",31,[[]]],[11,"try_poll","","",31,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_future","","",32,[[]]],[11,"try_poll","","",32,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_future","","",33,[[]]],[11,"try_poll","","",33,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_future","","",34,[[]]],[11,"try_poll","","",34,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_future","","",35,[[]]],[11,"try_poll","","",35,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_future","","",36,[[]]],[11,"try_poll","","",36,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_future","","",37,[[]]],[11,"try_poll","","",37,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_future","","",38,[[]]],[11,"try_poll","","",38,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["context",3],["pin",3]],["poll",4]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"try_poll","","",6,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_future","","",41,[[]]],[11,"try_poll","","",41,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_future","","",42,[[]]],[11,"try_poll","","",42,[[["context",3],["pin",3]],["poll",4]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_future","","",43,[[]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_future","","",44,[[]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_future","","",45,[[]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"try_poll","","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"try_poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"try_poll","","",51,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_future","","",52,[[]]],[11,"try_poll","","",52,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["context",3],["pin",3]],["poll",4]]],[11,"try_poll_next","","",7,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","futures_util::task","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_future","","",53,[[]]],[11,"try_poll","","",53,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_future","","",54,[[]]],[11,"try_poll","","",54,[[["context",3],["pin",3]],["poll",4]]],[11,"from","futures_util::stream","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"try_poll_next","","",55,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_future","","",56,[[]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_future","","",57,[[]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_future","","",58,[[]]],[11,"try_poll","","",58,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"try_poll_next","","",59,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"try_poll_next","","",61,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"try_poll_next","","",62,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_future","","",63,[[]]],[11,"try_poll","","",63,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"try_poll_next","","",65,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_future","","",66,[[]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"try_poll_next","","",67,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_future","","",68,[[]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_future","","",69,[[]]],[11,"try_poll","","",69,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"try_poll_next","","",70,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_future","","",71,[[]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_future","","",72,[[]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_future","","",73,[[]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"try_poll_next","","",74,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"try_poll_next","","",75,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"try_poll_next","","",76,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"try_poll_next","","",77,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"try_poll_next","","",78,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"try_poll_next","","",79,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"try_poll_next","","",81,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"try_poll_next","","",82,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"try_poll_next","","",83,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"try_poll_next","","",84,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"try_poll_next","","",85,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"try_poll_next","","",86,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"try_poll_next","","",87,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_future","","",88,[[]]],[11,"try_poll","","",88,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_future","","",89,[[]]],[11,"try_poll","","",89,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"try_poll_next","","",90,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"try_poll_next","","",91,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"try_poll_next","","",92,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"into_future","","",93,[[]]],[11,"try_poll","","",93,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_future","","",94,[[]]],[11,"try_poll","","",94,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_future","","",95,[[]]],[11,"try_poll","","",95,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"try_poll_next","","",96,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"try_poll_next","","",97,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"try_poll_next","","",98,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"try_poll_next","","",99,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"try_poll_next","","",100,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"try_poll_next","","",101,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"try_poll_next","","",102,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"try_poll_next","","",103,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"try_poll_next","","",104,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"try_poll_next","","",105,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"try_poll_next","","",106,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"try_poll_next","","",107,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"try_poll_next","","",108,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"try_poll_next","","",109,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"try_poll_next","","",110,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"try_poll_next","","",111,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"try_poll_next","","",112,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"from","futures_util::task","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"to_string","","",113,[[],["string",3]]],[11,"from","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"into","","",114,[[]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"fmt","","",114,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",114,[[],["atomicwaker",3]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"poll","","",53,[[["context",3],["pin",3],["futureobj",3]],["poll",4]]],[11,"poll","","",54,[[["context",3],["pin",3],["localfutureobj",3]],["poll",4]]],[11,"drop","","",54,[[]]],[11,"from","","",54,[[["futureobj",3]],["localfutureobj",3]]],[11,"fmt","","",113,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",53,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from","futures_util::future","",40,[[["option",4]]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","futures_util::stream","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"clone","futures_util::future","",39,[[]]],[11,"clone","","",40,[[],["optionfuture",3]]],[11,"clone","","",42,[[],["ready",3]]],[11,"clone","","",7,[[],["either",4]]],[11,"clone","futures_util::stream","",104,[[],["iter",3]]],[11,"clone","","",105,[[],["repeat",3]]],[11,"clone","","",106,[[],["repeatwith",3]]],[11,"clone","","",107,[[]]],[11,"clone","","",109,[[]]],[11,"poll","futures_util::future","",15,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",16,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",18,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",20,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",22,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",23,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",24,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",25,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",26,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",28,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",29,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",30,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",31,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",32,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",33,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",34,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",35,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",36,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",37,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",38,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",39,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",40,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",41,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",42,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",43,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",44,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",45,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",46,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",47,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",48,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",49,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",50,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",51,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",52,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","futures_util::stream","",56,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",57,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",58,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",63,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",64,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",66,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",68,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",69,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",71,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",72,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",73,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",88,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",89,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",93,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",94,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",95,[[["pin",3],["context",3]],["poll",4]]],[11,"is_terminated","futures_util::future","",15,[[],["bool",15]]],[11,"is_terminated","","",16,[[],["bool",15]]],[11,"is_terminated","","",18,[[],["bool",15]]],[11,"is_terminated","","",20,[[],["bool",15]]],[11,"is_terminated","","",21,[[],["bool",15]]],[11,"is_terminated","","",22,[[],["bool",15]]],[11,"is_terminated","","",23,[[],["bool",15]]],[11,"is_terminated","","",24,[[],["bool",15]]],[11,"is_terminated","","",25,[[],["bool",15]]],[11,"is_terminated","","",26,[[],["bool",15]]],[11,"is_terminated","","",28,[[],["bool",15]]],[11,"is_terminated","","",29,[[],["bool",15]]],[11,"is_terminated","","",30,[[],["bool",15]]],[11,"is_terminated","","",31,[[],["bool",15]]],[11,"is_terminated","","",32,[[],["bool",15]]],[11,"is_terminated","","",33,[[],["bool",15]]],[11,"is_terminated","","",34,[[],["bool",15]]],[11,"is_terminated","","",35,[[],["bool",15]]],[11,"is_terminated","","",36,[[],["bool",15]]],[11,"is_terminated","","",37,[[],["bool",15]]],[11,"is_terminated","","",38,[[],["bool",15]]],[11,"is_terminated","","",39,[[],["bool",15]]],[11,"is_terminated","","",5,[[],["bool",15]]],[11,"is_terminated","","",6,[[],["bool",15]]],[11,"is_terminated","","",40,[[],["bool",15]]],[11,"is_terminated","","",42,[[],["bool",15]]],[11,"is_terminated","","",43,[[],["bool",15]]],[11,"is_terminated","","",44,[[],["bool",15]]],[11,"is_terminated","","",45,[[],["bool",15]]],[11,"is_terminated","","",46,[[],["bool",15]]],[11,"is_terminated","","",47,[[],["bool",15]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"is_terminated","futures_util::stream","",56,[[],["bool",15]]],[11,"is_terminated","","",57,[[],["bool",15]]],[11,"is_terminated","","",58,[[],["bool",15]]],[11,"is_terminated","","",63,[[],["bool",15]]],[11,"is_terminated","","",64,[[],["bool",15]]],[11,"is_terminated","","",66,[[],["bool",15]]],[11,"is_terminated","","",68,[[],["bool",15]]],[11,"is_terminated","","",69,[[],["bool",15]]],[11,"is_terminated","","",71,[[],["bool",15]]],[11,"is_terminated","","",72,[[],["bool",15]]],[11,"is_terminated","","",73,[[],["bool",15]]],[11,"is_terminated","","",88,[[],["bool",15]]],[11,"is_terminated","","",93,[[],["bool",15]]],[11,"is_terminated","","",95,[[],["bool",15]]],[11,"poll_next","futures_util::future","",17,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",17,[[]]],[11,"poll_next","","",19,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",19,[[]]],[11,"poll_next","","",27,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",27,[[]]],[11,"poll_next","","",7,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",7,[[]]],[11,"poll_next","futures_util::stream","",55,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",55,[[]]],[11,"poll_next","","",59,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",59,[[]]],[11,"poll_next","","",60,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",60,[[]]],[11,"poll_next","","",61,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",61,[[]]],[11,"poll_next","","",62,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",62,[[]]],[11,"poll_next","","",82,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",82,[[]]],[11,"poll_next","","",65,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"size_hint","","",65,[[]]],[11,"poll_next","","",83,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",83,[[]]],[11,"poll_next","","",67,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",67,[[]]],[11,"poll_next","","",84,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",84,[[]]],[11,"poll_next","","",70,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",70,[[]]],[11,"poll_next","","",74,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",74,[[]]],[11,"poll_next","","",75,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",75,[[]]],[11,"poll_next","","",76,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",76,[[]]],[11,"poll_next","","",77,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",77,[[]]],[11,"poll_next","","",78,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",78,[[]]],[11,"poll_next","","",79,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",79,[[]]],[11,"poll_next","","",80,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",80,[[]]],[11,"poll_next","","",81,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",81,[[]]],[11,"poll_next","","",85,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",85,[[]]],[11,"poll_next","","",99,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",99,[[]]],[11,"poll_next","","",100,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",100,[[]]],[11,"poll_next","","",101,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",101,[[]]],[11,"poll_next","","",86,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",86,[[]]],[11,"poll_next","","",102,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",102,[[]]],[11,"poll_next","","",103,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",103,[[]]],[11,"poll_next","","",87,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",87,[[]]],[11,"poll_next","","",90,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",90,[[]]],[11,"poll_next","","",91,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",91,[[]]],[11,"poll_next","","",92,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",96,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",97,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",97,[[]]],[11,"poll_next","","",98,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",98,[[]]],[11,"poll_next","","",104,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",104,[[]]],[11,"poll_next","","",105,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",105,[[]]],[11,"poll_next","","",106,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",106,[[]]],[11,"poll_next","","",107,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",107,[[]]],[11,"poll_next","","",108,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",108,[[]]],[11,"poll_next","","",109,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",109,[[]]],[11,"poll_next","","",110,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",111,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_next","","",112,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"is_terminated","futures_util::future","",17,[[],["bool",15]]],[11,"is_terminated","","",19,[[],["bool",15]]],[11,"is_terminated","","",27,[[],["bool",15]]],[11,"is_terminated","","",7,[[],["bool",15]]],[11,"is_terminated","futures_util::stream","",55,[[],["bool",15]]],[11,"is_terminated","","",59,[[],["bool",15]]],[11,"is_terminated","","",60,[[],["bool",15]]],[11,"is_terminated","","",61,[[],["bool",15]]],[11,"is_terminated","","",62,[[],["bool",15]]],[11,"is_terminated","","",82,[[],["bool",15]]],[11,"is_terminated","","",65,[[],["bool",15]]],[11,"is_terminated","","",83,[[],["bool",15]]],[11,"is_terminated","","",67,[[],["bool",15]]],[11,"is_terminated","","",84,[[],["bool",15]]],[11,"is_terminated","","",70,[[],["bool",15]]],[11,"is_terminated","","",74,[[],["bool",15]]],[11,"is_terminated","","",75,[[],["bool",15]]],[11,"is_terminated","","",76,[[],["bool",15]]],[11,"is_terminated","","",77,[[],["bool",15]]],[11,"is_terminated","","",78,[[],["bool",15]]],[11,"is_terminated","","",79,[[],["bool",15]]],[11,"is_terminated","","",80,[[],["bool",15]]],[11,"is_terminated","","",81,[[],["bool",15]]],[11,"is_terminated","","",85,[[],["bool",15]]],[11,"is_terminated","","",99,[[],["bool",15]]],[11,"is_terminated","","",100,[[],["bool",15]]],[11,"is_terminated","","",101,[[],["bool",15]]],[11,"is_terminated","","",86,[[],["bool",15]]],[11,"is_terminated","","",102,[[],["bool",15]]],[11,"is_terminated","","",103,[[],["bool",15]]],[11,"is_terminated","","",87,[[],["bool",15]]],[11,"is_terminated","","",90,[[],["bool",15]]],[11,"is_terminated","","",91,[[],["bool",15]]],[11,"is_terminated","","",92,[[],["bool",15]]],[11,"is_terminated","","",97,[[],["bool",15]]],[11,"is_terminated","","",98,[[],["bool",15]]],[11,"is_terminated","","",105,[[],["bool",15]]],[11,"is_terminated","","",106,[[],["bool",15]]],[11,"is_terminated","","",107,[[],["bool",15]]],[11,"is_terminated","","",108,[[],["bool",15]]],[11,"is_terminated","","",109,[[],["bool",15]]],[11,"is_terminated","","",111,[[],["bool",15]]],[11,"is_terminated","","",112,[[],["bool",15]]],[11,"terminated","futures_util::future","Creates a new <code>Fuse</code>-wrapped future which is already …",15,[[]]],[11,"map","","Map this future\'s output to a different type, returning a …",3,[[],["map",3]]],[11,"map_into","","Map this future\'s output to a different type, returning a …",3,[[],["mapinto",3]]],[11,"then","","Chain on a computation for when a future finished, …",3,[[],["then",3]]],[11,"left_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"right_future","","Wrap this future in an <code>Either</code> future, making it the …",3,[[],["either",4]]],[11,"into_stream","","Convert this future into a single element stream.",3,[[],["intostream",3]]],[11,"flatten","","Flatten the execution of this future when the output of …",3,[[],["flatten",3]]],[11,"flatten_stream","","Flatten the execution of this future when the successful …",3,[[],["flattenstream",3]]],[11,"fuse","","Fuse a future such that <code>poll</code> will never again be called …",3,[[],["fuse",3]]],[11,"inspect","","Do something with the output of a future before passing …",3,[[],["inspect",3]]],[11,"unit_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["uniterror",3]]],[11,"never_error","","Turns a <code>Future<Output = T></code> into a …",3,[[],["nevererror",3]]],[11,"poll_unpin","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …",3,[[["context",3]],["poll",4]]],[11,"now_or_never","","Evaluates and consumes the future, returning the …",3,[[],["option",4]]],[11,"map_ok","","Maps this future\'s success value to a different value.",4,[[],["mapok",3]]],[11,"map_ok_or_else","","Maps this future\'s success value to a different value, …",4,[[],["mapokorelse",3]]],[11,"map_err","","Maps this future\'s error value to a different value.",4,[[],["maperr",3]]],[11,"err_into","","Maps this future\'s <code>Error</code> to a new error type using the …",4,[[],["errinto",3]]],[11,"ok_into","","Maps this future\'s <code>Ok</code> to a new type using the <code>Into</code> trait.",4,[[],["okinto",3]]],[11,"and_then","","Executes another future after this one resolves …",4,[[],["andthen",3]]],[11,"or_else","","Executes another future if this one resolves to an error. …",4,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of a future before …",4,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of a future before …",4,[[],["inspecterr",3]]],[11,"try_flatten","","Flatten the execution of this future when the successful …",4,[[],["tryflatten",3]]],[11,"try_flatten_stream","","Flatten the execution of this future when the successful …",4,[[],["tryflattenstream",3]]],[11,"unwrap_or_else","","Unwraps this future\'s output, producing a future with …",4,[[],["unwraporelse",3]]],[11,"into_future","","Wraps a [<code>TryFuture</code>] into a type that implements <code>Future</code>.",4,[[],["intofuture",3]]],[11,"try_poll_unpin","","A convenience method for calling [<code>TryFuture::try_poll</code>] on …",4,[[["context",3]],[["result",4],["poll",4]]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",5,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>MaybeDone</code> without driving …",5,[[["pin",3]],["option",4]]],[11,"output_mut","","Returns an [<code>Option</code>] containing a mutable reference to the …",6,[[["pin",3]],["option",4]]],[11,"take_output","","Attempt to take the output of a <code>TryMaybeDone</code> without …",6,[[["pin",3]],["option",4]]],[11,"into_inner","","Unwraps the value from this immediately ready future.",42,[[]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",7,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",7,[[]]],[11,"new","futures_util::task","Create a <code>FutureObj</code> from a custom trait object …",53,[[],["futureobj",3]]],[11,"new","","Create a <code>LocalFutureObj</code> from a custom trait object …",54,[[],["localfutureobj",3]]],[11,"into_future_obj","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.",54,[[],["futureobj",3]]],[11,"get_ref","futures_util::stream","Acquires a reference to the underlying sink or stream …",60,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",60,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",60,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",60,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",61,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",61,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",61,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",61,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",62,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",62,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",62,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",62,[[]]],[11,"is_done","","Returns whether the underlying stream has finished or not.",65,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",65,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",65,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",65,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",65,[[]]],[11,"get_ref","","Acquires a reference to the underlying stream that this …",66,[[],["option",4]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream …",66,[[],["option",4]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",66,[[["pin",3]],[["option",4],["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",66,[[],["option",4]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",67,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",67,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",67,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",67,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",70,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",70,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",70,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",70,[[]]],[11,"peek","","Produces a <code>Peek</code> future which retrieves a reference to the …",70,[[["pin",3]],["peek",3]]],[11,"poll_peek","","Peek retrieves a reference to the next item in the stream.",70,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"next_if","","Creates a future which will consume and return the next …",70,[[["pin",3]],["nextif",3]]],[11,"next_if_eq","","Creates a future which will consume and return the next …",70,[[["pin",3]],["nextifeq",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",74,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",74,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",74,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",74,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",75,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",75,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",75,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",75,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",76,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",76,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",76,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",76,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",77,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",77,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",77,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",77,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",78,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",78,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",78,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",78,[[]]],[11,"take_future","","Extract the stopping future out of the combinator. The …",78,[[],["option",4]]],[11,"take_result","","Once the stopping future is resolved, this method can be …",78,[[],["option",4]]],[11,"is_stopped","","Whether the stream was stopped yet by the stopping future …",78,[[],["bool",15]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",79,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",79,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",79,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",79,[[]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",80,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",80,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",80,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",80,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",81,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",81,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",81,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",81,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",82,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",82,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",82,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",82,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",83,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",83,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",83,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",83,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",84,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",84,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",84,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",84,[[]]],[11,"next","","Creates a future that resolves to the next item in the …",11,[[],["next",3]]],[11,"into_future","","Converts this stream into a future of …",11,[[],["streamfuture",3]]],[11,"map","","Maps this stream\'s items to a different type, returning a …",11,[[],["map",3]]],[11,"enumerate","","Creates a stream which gives the current iteration count …",11,[[],["enumerate",3]]],[11,"filter","","Filters the values produced by this stream according to …",11,[[],["filter",3]]],[11,"filter_map","","Filters the values produced by this stream while …",11,[[],["filtermap",3]]],[11,"then","","Computes from this stream\'s items new items of a …",11,[[],["then",3]]],[11,"collect","","Transforms a stream into a collection, returning a future …",11,[[],[["extend",8],["collect",3],["default",8]]]],[11,"unzip","","Converts a stream of pairs into a future, which resolves …",11,[[],["unzip",3]]],[11,"concat","","Concatenate all items of a stream into a single extendable…",11,[[],["concat",3]]],[11,"cycle","","Repeats a stream endlessly.",11,[[],["cycle",3]]],[11,"fold","","Execute an accumulating asynchronous computation over a …",11,[[],["fold",3]]],[11,"flatten","","Flattens a stream of streams into just one continuous …",11,[[],["flatten",3]]],[11,"flat_map","","Maps a stream like [<code>StreamExt::map</code>] but flattens nested …",11,[[],["flatmap",3]]],[11,"scan","","Combinator similar to [<code>StreamExt::fold</code>] that holds …",11,[[],["scan",3]]],[11,"skip_while","","Skip elements on this stream while the provided …",11,[[],["skipwhile",3]]],[11,"take_while","","Take elements from this stream while the provided …",11,[[],["takewhile",3]]],[11,"take_until","","Take elements from this stream until the provided future …",11,[[],["takeuntil",3]]],[11,"for_each","","Runs this stream to completion, executing the provided …",11,[[],["foreach",3]]],[11,"take","","Creates a new stream of at most <code>n</code> items of the underlying …",11,[[["usize",15]],["take",3]]],[11,"skip","","Creates a new stream which skips <code>n</code> items of the …",11,[[["usize",15]],["skip",3]]],[11,"fuse","","Fuse a stream such that <code>poll_next</code> will never again be …",11,[[],["fuse",3]]],[11,"by_ref","","Borrows a stream, rather than consuming it.",11,[[]]],[11,"zip","","An adapter for zipping two streams together.",11,[[],["zip",3]]],[11,"chain","","Adapter for chaining two streams.",11,[[],["chain",3]]],[11,"peekable","","Creates a new stream which exposes a <code>peek</code> method.",11,[[],["peekable",3]]],[11,"inspect","","Do something with each item of this stream, afterwards …",11,[[],["inspect",3]]],[11,"left_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",11,[[],["either",4]]],[11,"right_stream","","Wrap this stream in an <code>Either</code> stream, making it the …",11,[[],["either",4]]],[11,"poll_next_unpin","","A convenience method for calling [<code>Stream::poll_next</code>] on […",11,[[["context",3]],[["option",4],["poll",4]]]],[11,"select_next_some","","Returns a [<code>Future</code>] that resolves when the next item in …",11,[[],["selectnextsome",3]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",85,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",85,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",85,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",85,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",86,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",86,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",86,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",86,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",87,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",87,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",87,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",87,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",90,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",90,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",90,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",90,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",91,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",91,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",91,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",91,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",92,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",92,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",92,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",92,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",97,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",97,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",97,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",97,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",98,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",98,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",98,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",98,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",99,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",99,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",99,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",99,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",100,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",100,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",100,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",100,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",101,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",101,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",101,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",101,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",102,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",102,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",102,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",102,[[]]],[11,"get_ref","","Acquires a reference to the underlying sink or stream …",103,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying sink or …",103,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",103,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this combinator, returning the underlying sink …",103,[[]]],[11,"err_into","","Wraps the current stream in a new stream which converts …",12,[[],["errinto",3]]],[11,"map_ok","","Wraps the current stream in a new stream which maps the …",12,[[],["mapok",3]]],[11,"map_err","","Wraps the current stream in a new stream which maps the …",12,[[],["maperr",3]]],[11,"and_then","","Chain on a computation for when a value is ready, passing …",12,[[],["andthen",3]]],[11,"or_else","","Chain on a computation for when an error happens, passing …",12,[[],["orelse",3]]],[11,"inspect_ok","","Do something with the success value of this stream, …",12,[[],["inspectok",3]]],[11,"inspect_err","","Do something with the error value of this stream, …",12,[[],["inspecterr",3]]],[11,"into_stream","","Wraps a [<code>TryStream</code>] into a type that implements <code>Stream</code>",12,[[],["intostream",3]]],[11,"try_next","","Creates a future that attempts to resolve the next item …",12,[[],["trynext",3]]],[11,"try_for_each","","Attempts to run this stream to completion, executing the …",12,[[],["tryforeach",3]]],[11,"try_skip_while","","Skip elements on this stream while the provided …",12,[[],["tryskipwhile",3]]],[11,"try_take_while","","Take elements on this stream while the provided …",12,[[],["trytakewhile",3]]],[11,"try_collect","","Attempt to transform a stream into a collection, …",12,[[],[["default",8],["trycollect",3],["extend",8]]]],[11,"try_filter","","Attempt to filter the values produced by this stream …",12,[[],["tryfilter",3]]],[11,"try_filter_map","","Attempt to filter the values produced by this stream while…",12,[[],["tryfiltermap",3]]],[11,"try_flatten","","Flattens a stream of streams into just one continuous …",12,[[],["tryflatten",3]]],[11,"try_fold","","Attempt to execute an accumulating asynchronous …",12,[[],["tryfold",3]]],[11,"try_concat","","Attempt to concatenate all items of a stream into a single…",12,[[],["tryconcat",3]]],[11,"try_poll_next_unpin","","A convenience method for calling [<code>TryStream::try_poll_next</code>…",12,[[["context",3]],[["poll",4],["option",4]]]],[11,"get_ref","","Acquires a reference to the underlying streams that this …",111,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying streams …",111,[[]]],[11,"get_pin_mut","","Acquires a pinned mutable reference to the underlying …",111,[[["pin",3]]]],[11,"into_inner","","Consumes this combinator, returning the underlying …",111,[[]]],[11,"shutdown","futures_util::task","Spawning failed because the executor has been shut down.",113,[[],["spawnerror",3]]],[11,"is_shutdown","","Check whether spawning failed to the executor being shut …",113,[[],["bool",15]]],[11,"new","","Create an <code>AtomicWaker</code>.",114,[[],["atomicwaker",3]]],[11,"register","","Registers the waker to be notified on calls to <code>wake</code>.",114,[[["waker",3]]]],[11,"wake","","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.",114,[[]]],[11,"take","","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …",114,[[],[["waker",3],["option",4]]]]],"p":[[8,"FusedFuture"],[8,"TryFuture"],[8,"UnsafeFutureObj"],[8,"FutureExt"],[8,"TryFutureExt"],[4,"MaybeDone"],[4,"TryMaybeDone"],[4,"Either"],[8,"FusedStream"],[8,"Stream"],[8,"TryStream"],[8,"StreamExt"],[8,"TryStreamExt"],[8,"LocalSpawn"],[8,"Spawn"],[3,"Fuse"],[3,"Flatten"],[3,"FlattenStream"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"AndThen"],[3,"OrElse"],[3,"ErrInto"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[3,"Pending"],[3,"OptionFuture"],[3,"PollFn"],[3,"Ready"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"FutureObj"],[3,"LocalFutureObj"],[3,"Chain"],[3,"Collect"],[3,"Unzip"],[3,"Concat"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"Fold"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"NextIf"],[3,"NextIfEq"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"Scan"],[3,"Flatten"],[3,"Inspect"],[3,"FlatMap"],[3,"AndThen"],[3,"IntoStream"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"ErrInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Once"],[3,"Pending"],[3,"PollFn"],[3,"Select"],[3,"Unfold"],[3,"SpawnError"],[3,"AtomicWaker"]]},\
"h2":{"doc":"An asynchronous, HTTP/2.0 server and client …","i":[[0,"client","h2","Client implementation of the HTTP/2.0 protocol.",null,null],[3,"SendRequest","h2::client","Initializes new HTTP/2.0 streams on a connection by …",null,null],[3,"ReadySendRequest","","Returns a <code>SendRequest</code> instance once it is ready to send …",null,null],[3,"Connection","","Manages all state associated with an HTTP/2.0 client …",null,null],[3,"ResponseFuture","","A future of an HTTP response.",null,null],[3,"PushedResponseFuture","","A future of a pushed HTTP response.",null,null],[3,"PushPromise","","A pushed response and corresponding request headers",null,null],[3,"PushPromises","","A stream of pushed responses and corresponding promised …",null,null],[3,"Builder","","Builds client connections with custom configuration …",null,null],[11,"poll_ready","","Returns <code>Ready</code> when the connection can initialize a new …",0,[[["context",3]],[["result",4],["poll",4]]]],[11,"ready","","Consumes <code>self</code>, returning a future that returns <code>self</code> back …",0,[[],["readysendrequest",3]]],[11,"send_request","","Sends a HTTP/2.0 request to the server.",0,[[["bool",15],["request",3]],[["error",3],["result",4]]]],[11,"new","","Returns a new client builder instance initialized with …",1,[[],["builder",3]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for …",1,[[["u32",15]]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for …",1,[[["u32",15]]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0 …",1,[[["u32",15]]]],[11,"max_header_list_size","","Sets the max size of received header frames.",1,[[["u32",15]]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",1,[[["u32",15]]]],[11,"initial_max_send_streams","","Sets the initial maximum of locally initiated (send) …",1,[[["usize",15]]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset …",1,[[["usize",15]]]],[11,"reset_stream_duration","","Sets the duration to remember locally reset streams.",1,[[["duration",3]]]],[11,"enable_push","","Enables or disables server push promises.",1,[[["bool",15]]]],[11,"handshake","","Creates a new configured HTTP/2.0 client backed by <code>io</code>.",1,[[]]],[5,"handshake","","Creates a new configured HTTP/2.0 client with default …",null,[[]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",2,[[["u32",15]]]],[11,"set_initial_window_size","","Set a new <code>INITIAL_WINDOW_SIZE</code> setting (in octets) for …",2,[[["u32",15]],[["error",3],["result",4]]]],[11,"ping_pong","","Takes a <code>PingPong</code> instance from the connection.",2,[[],[["option",4],["pingpong",3]]]],[11,"max_concurrent_send_streams","","Returns the maximum number of concurrent streams that may …",2,[[],["usize",15]]],[11,"max_concurrent_recv_streams","","Returns the maximum number of concurrent streams that may …",2,[[],["usize",15]]],[11,"stream_id","","Returns the stream ID of the response stream.",3,[[],["streamid",3]]],[11,"push_promises","","Returns a stream of PushPromises",3,[[],["pushpromises",3]]],[11,"push_promise","","Get the next <code>PushPromise</code>.",4,[[]]],[11,"request","","Returns a reference to the push promise\'s request headers.",5,[[],["request",3]]],[11,"request_mut","","Returns a mutable reference to the push promise\'s request …",5,[[],["request",3]]],[11,"into_parts","","Consumes <code>self</code>, returning the push promise\'s request …",5,[[]]],[11,"stream_id","","Returns the stream ID of the response stream.",6,[[],["streamid",3]]],[0,"server","h2","Server implementation of the HTTP/2.0 protocol.",null,null],[3,"Handshake","h2::server","In progress HTTP/2.0 connection handshake future.",null,null],[3,"Connection","","Accepts inbound HTTP/2.0 streams on a connection.",null,null],[3,"Builder","","Builds server connections with custom configuration …",null,null],[3,"SendResponse","","Send a response back to the client",null,null],[3,"SendPushedResponse","","Send a response to a promised request",null,null],[5,"handshake","","Creates a new configured HTTP/2.0 server with default …",null,[[],[["handshake",3],["bytes",3]]]],[11,"accept","","Accept the next incoming request on this connection.",7,[[]]],[11,"set_target_window_size","","Sets the target window size for the whole connection.",7,[[["u32",15]]]],[11,"set_initial_window_size","","Set a new <code>INITIAL_WINDOW_SIZE</code> setting (in octets) for …",7,[[["u32",15]],[["error",3],["result",4]]]],[11,"poll_closed","","Returns <code>Ready</code> when the underlying connection has closed.",7,[[["context",3]],[["result",4],["poll",4]]]],[11,"abrupt_shutdown","","Sets the connection to a GOAWAY state.",7,[[["reason",3]]]],[11,"graceful_shutdown","","Starts a graceful shutdown process.",7,[[]]],[11,"ping_pong","","Takes a <code>PingPong</code> instance from the connection.",7,[[],[["option",4],["pingpong",3]]]],[11,"max_concurrent_send_streams","","Returns the maximum number of concurrent streams that may …",7,[[],["usize",15]]],[11,"max_concurrent_recv_streams","","Returns the maximum number of concurrent streams that may …",7,[[],["usize",15]]],[11,"new","","Returns a new server builder instance initialized with …",8,[[],["builder",3]]],[11,"initial_window_size","","Indicates the initial window size (in octets) for …",8,[[["u32",15]]]],[11,"initial_connection_window_size","","Indicates the initial window size (in octets) for …",8,[[["u32",15]]]],[11,"max_frame_size","","Indicates the size (in octets) of the largest HTTP/2.0 …",8,[[["u32",15]]]],[11,"max_header_list_size","","Sets the max size of received header frames.",8,[[["u32",15]]]],[11,"max_concurrent_streams","","Sets the maximum number of concurrent streams.",8,[[["u32",15]]]],[11,"max_concurrent_reset_streams","","Sets the maximum number of concurrent locally reset …",8,[[["usize",15]]]],[11,"reset_stream_duration","","Sets the maximum number of concurrent locally reset …",8,[[["duration",3]]]],[11,"handshake","","Creates a new configured HTTP/2.0 server backed by <code>io</code>.",8,[[],["handshake",3]]],[11,"send_response","","Send a response to a client request.",9,[[["response",3],["bool",15]],[["result",4],["sendstream",3],["error",3]]]],[11,"push_request","","Push a request and response to the client",9,[[["request",3]],[["result",4],["sendpushedresponse",3],["error",3]]]],[11,"send_reset","","Send a stream reset to the peer.",9,[[["reason",3]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",9,[[["context",3]],[["result",4],["poll",4]]]],[11,"stream_id","","Returns the stream ID of the response stream.",9,[[],["streamid",3]]],[11,"send_response","","Send a response to a promised request.",10,[[["response",3],["bool",15]],[["result",4],["sendstream",3],["error",3]]]],[11,"send_reset","","Send a stream reset to the peer.",10,[[["reason",3]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",10,[[["context",3]],[["result",4],["poll",4]]]],[11,"stream_id","","Returns the stream ID of the response stream.",10,[[],["streamid",3]]],[3,"Error","h2","Represents HTTP/2.0 operation errors.",null,null],[3,"Reason","","HTTP/2.0 error codes.",null,null],[3,"FlowControl","","A handle to release window capacity to a remote stream.",null,null],[3,"Ping","","Sent via <code>PingPong</code> to send a PING frame to a peer.",null,null],[3,"PingPong","","A handle to send and receive PING frames with the peer.",null,null],[3,"Pong","","Received via <code>PingPong</code> when a peer acknowledges a <code>Ping</code>.",null,null],[3,"RecvStream","","Receives the body stream and trailers from the remote …",null,null],[3,"SendStream","","Sends the body stream and trailers to the remote peer.",null,null],[3,"StreamId","","A stream identifier, as described in Section 5.1.1 of RFC …",null,null],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[],["bool",15]]],[11,"from","h2::client","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_future","","",13,[[]]],[11,"try_poll","","",13,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_future","","",2,[[]]],[11,"try_poll","","",2,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_future","","",3,[[]]],[11,"try_poll","","",3,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"try_poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","h2::server","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_future","","",14,[[]]],[11,"try_poll","","",14,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","h2","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[],["bool",15]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"drop","","",17,[[]]],[11,"from","","",11,[[["reason",3]],["error",3]]],[11,"from","","",12,[[["u32",15]],["reason",3]]],[11,"clone","","",12,[[],["reason",3]]],[11,"clone","h2::client","",1,[[],["builder",3]]],[11,"clone","","",0,[[]]],[11,"clone","h2::server","",8,[[],["builder",3]]],[11,"clone","h2","",16,[[],["streamid",3]]],[11,"clone","","",18,[[],["flowcontrol",3]]],[11,"default","h2::client","",1,[[],["builder",3]]],[11,"default","h2::server","",8,[[],["builder",3]]],[11,"eq","h2","",12,[[["reason",3]],["bool",15]]],[11,"ne","","",12,[[["reason",3]],["bool",15]]],[11,"eq","","",16,[[["streamid",3]],["bool",15]]],[11,"ne","","",16,[[["streamid",3]],["bool",15]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","h2::client","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","h2::server","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","h2","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"hash","","",16,[[]]],[11,"poll","h2::client","",13,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",2,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",3,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",6,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","h2::server","",14,[[["pin",3],["context",3]],["poll",4]]],[11,"reason","h2","If the error was caused by the remote peer, the error …",11,[[],[["option",4],["reason",3]]]],[11,"is_io","","Returns the true if the error is an io::Error",11,[[],["bool",15]]],[11,"get_io","","Returns the error if the error is an io::Error",11,[[],[["option",4],["error",3]]]],[11,"into_io","","Returns the error if the error is an io::Error",11,[[],[["option",4],["error",3]]]],[18,"NO_ERROR","","The associated condition is not a result of an error.",12,null],[18,"PROTOCOL_ERROR","","The endpoint detected an unspecific protocol error.",12,null],[18,"INTERNAL_ERROR","","The endpoint encountered an unexpected internal error.",12,null],[18,"FLOW_CONTROL_ERROR","","The endpoint detected that its peer violated the …",12,null],[18,"SETTINGS_TIMEOUT","","The endpoint sent a SETTINGS frame but did not receive a …",12,null],[18,"STREAM_CLOSED","","The endpoint received a frame after a stream was …",12,null],[18,"FRAME_SIZE_ERROR","","The endpoint received a frame with an invalid size.",12,null],[18,"REFUSED_STREAM","","The endpoint refused the stream prior to performing any …",12,null],[18,"CANCEL","","Used by the endpoint to indicate that the stream is no …",12,null],[18,"COMPRESSION_ERROR","","The endpoint is unable to maintain the header compression …",12,null],[18,"CONNECT_ERROR","","The connection established in response to a CONNECT …",12,null],[18,"ENHANCE_YOUR_CALM","","The endpoint detected that its peer is exhibiting a …",12,null],[18,"INADEQUATE_SECURITY","","The underlying transport has properties that do not meet …",12,null],[18,"HTTP_1_1_REQUIRED","","The endpoint requires that HTTP/1.1 be used instead of …",12,null],[11,"description","","Get a string description of the error code.",12,[[],["str",15]]],[11,"reserve_capacity","","Requests capacity to send data.",15,[[["usize",15]]]],[11,"capacity","","Returns the stream\'s current send capacity.",15,[[],["usize",15]]],[11,"poll_capacity","","Requests to be notified when the stream\'s capacity …",15,[[["context",3]],[["poll",4],["option",4]]]],[11,"send_data","","Sends a single data frame to the remote peer.",15,[[["bool",15]],[["error",3],["result",4]]]],[11,"send_trailers","","Sends trailers to the remote peer.",15,[[["headermap",3]],[["error",3],["result",4]]]],[11,"send_reset","","Resets the stream.",15,[[["reason",3]]]],[11,"poll_reset","","Polls to be notified when the client resets this stream.",15,[[["context",3]],[["result",4],["poll",4]]]],[11,"stream_id","","Returns the stream ID of this <code>SendStream</code>.",15,[[],["streamid",3]]],[11,"data","","Get the next data frame.",17,[[]]],[11,"trailers","","Get optional trailers for this stream.",17,[[]]],[11,"poll_data","","Poll for the next data frame.",17,[[["context",3]],[["poll",4],["option",4]]]],[11,"is_end_stream","","Returns true if the receive half has reached the end of …",17,[[],["bool",15]]],[11,"flow_control","","Get a mutable reference to this stream\'s <code>FlowControl</code>.",17,[[],["flowcontrol",3]]],[11,"stream_id","","Returns the stream ID of this stream.",17,[[],["streamid",3]]],[11,"stream_id","","Returns the stream ID of the stream whose capacity will …",18,[[],["streamid",3]]],[11,"available_capacity","","Get the current available capacity of data this stream <em>…",18,[[],["isize",15]]],[11,"used_capacity","","Get the currently <em>used</em> capacity for this stream.",18,[[],["usize",15]]],[11,"release_capacity","","Release window capacity back to remote stream.",18,[[["usize",15]],[["error",3],["result",4]]]],[11,"ping","","Send a PING frame and wait for the peer to send the pong.",19,[[["ping",3]]]],[11,"opaque","","Creates a new opaque <code>Ping</code> to be sent via a <code>PingPong</code>.",20,[[],["ping",3]]]],"p":[[3,"SendRequest"],[3,"Builder"],[3,"Connection"],[3,"ResponseFuture"],[3,"PushPromises"],[3,"PushPromise"],[3,"PushedResponseFuture"],[3,"Connection"],[3,"Builder"],[3,"SendResponse"],[3,"SendPushedResponse"],[3,"Error"],[3,"Reason"],[3,"ReadySendRequest"],[3,"Handshake"],[3,"SendStream"],[3,"StreamId"],[3,"RecvStream"],[3,"FlowControl"],[3,"PingPong"],[3,"Ping"],[3,"Pong"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google\'s high-performance …","i":[[0,"raw","hashbrown","Experimental and unsafe <code>RawTable</code> API. This module is only …",null,null],[3,"Bucket","hashbrown::raw","A reference to a hash table bucket containing a <code>T</code>.",null,null],[3,"RawTable","","A raw hash table with an unsafe API.",null,null],[3,"RawIter","","Iterator which returns a raw pointer to every full bucket …",null,null],[3,"RawIntoIter","","Iterator which consumes a table and returns elements.",null,null],[3,"RawDrain","","Iterator which consumes elements without freeing the …",null,null],[3,"RawIterHash","","Iterator over occupied buckets that could match a given …",null,null],[0,"hash_map","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[4,"DefaultHashBuilder","hashbrown::hash_map","Dummy default hasher for <code>HashMap</code>.",null,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"Iter","","An iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>HashMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HashMap</code>.",null,null],[3,"Keys","","An iterator over the keys of a <code>HashMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>HashMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>HashMap</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashMap</code> which don\'t …",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>HashMap</code>.",null,null],[3,"RawEntryBuilderMut","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",0,null],[13,"Vacant","","A vacant entry.",0,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[3,"RawEntryBuilder","","A builder for computing where in a [<code>HashMap</code>] a key-value …",null,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",1,null],[13,"Vacant","","A vacant entry.",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[0,"hash_set","hashbrown","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"HashSet","hashbrown::hash_set","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>HashSet</code>.",null,null],[3,"IntoIter","","An owning iterator over the items of a <code>HashSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>HashSet</code>.",null,null],[3,"DrainFilter","","A draining iterator over entries of a <code>HashSet</code> which don\'t …",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of <code>HashSet</code>…",null,null],[3,"HashMap","hashbrown","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"HashSet","","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[4,"TryReserveError","","The error type for <code>try_reserve</code> methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the …",2,null],[13,"AllocError","","The memory allocator returned an error",2,null],[12,"layout","hashbrown::TryReserveError","The layout of the allocation request that failed.",3,null],[11,"from","hashbrown::raw","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_iter","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","hashbrown::hash_map","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","hashbrown::hash_set","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"into_iter","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"into_iter","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"into_iter","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"into_iter","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"into_iter","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"into_iter","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"into_iter","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"into_iter","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"from","hashbrown","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","hashbrown::hash_map","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown::hash_set","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","hashbrown","",2,[[["formatter",3]],["result",6]]],[11,"eq","hashbrown::hash_map","",11,[[],["bool",15]]],[11,"eq","hashbrown::hash_set","",26,[[],["bool",15]]],[11,"eq","hashbrown","",2,[[["tryreserveerror",4]],["bool",15]]],[11,"ne","","",2,[[["tryreserveerror",4]],["bool",15]]],[11,"drop","hashbrown::raw","",5,[[]]],[11,"drop","","",7,[[]]],[11,"drop","","",8,[[]]],[11,"drop","hashbrown::hash_map","",18,[[]]],[11,"drop","hashbrown::hash_set","",30,[[]]],[11,"index","hashbrown::hash_map","Returns a reference to the value corresponding to the …",11,[[]]],[11,"len","","",12,[[],["usize",15]]],[11,"len","","",13,[[],["usize",15]]],[11,"len","","",14,[[],["usize",15]]],[11,"len","","",15,[[],["usize",15]]],[11,"len","","",16,[[],["usize",15]]],[11,"len","","",19,[[],["usize",15]]],[11,"len","","",17,[[],["usize",15]]],[11,"len","hashbrown::hash_set","",27,[[],["usize",15]]],[11,"len","","",28,[[],["usize",15]]],[11,"len","","",29,[[],["usize",15]]],[11,"from_iter","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"from_iter","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"next","hashbrown::raw","",6,[[],[["option",4],["bucket",3]]]],[11,"size_hint","","",6,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",9,[[],[["option",4],["bucket",3]]]],[11,"next","hashbrown::hash_map","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","hashbrown::hash_set","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"into_iter","hashbrown::raw","",5,[[],["rawintoiter",3]]],[11,"into_iter","hashbrown::hash_map","Creates a consuming iterator, that is, one that moves …",11,[[],["intoiter",3]]],[11,"into_iter","hashbrown::hash_set","Creates a consuming iterator, that is, one that moves …",26,[[],["intoiter",3]]],[11,"extend","hashbrown::hash_map","",11,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","hashbrown::hash_set","",26,[[["intoiterator",8]]]],[11,"extend","","",26,[[["intoiterator",8]]]],[11,"clone","hashbrown::raw","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone_from","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","hashbrown::hash_map","",11,[[]]],[11,"clone_from","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","hashbrown::hash_set","",26,[[]]],[11,"clone_from","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","hashbrown","",2,[[],["tryreserveerror",4]]],[11,"default","hashbrown::hash_map","Creates an empty <code>HashMap<K, V, S></code>, with the <code>Default</code> value …",11,[[]]],[11,"default","hashbrown::hash_set","Creates an empty <code>HashSet<T, S></code> with the <code>Default</code> value for …",26,[[]]],[11,"as_ptr","hashbrown::raw","",4,[[]]],[11,"drop","","",4,[[]]],[11,"read","","",4,[[]]],[11,"write","","",4,[[]]],[11,"as_ref","","",4,[[]]],[11,"as_mut","","",4,[[]]],[11,"copy_from_nonoverlapping","","",4,[[]]],[11,"new","","Creates a new empty hash table without allocating any …",5,[[]]],[11,"try_with_capacity","","Attempts to allocate a new hash table with at least …",5,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"with_capacity","","Allocates a new hash table with at least enough capacity …",5,[[["usize",15]]]],[11,"data_end","","Returns pointer to one past last element of data table.",5,[[],["nonnull",3]]],[11,"bucket_index","","Returns the index of a bucket from a <code>Bucket</code>.",5,[[["bucket",3]],["usize",15]]],[11,"bucket","","Returns a pointer to an element in the table.",5,[[["usize",15]],["bucket",3]]],[11,"erase_no_drop","","Erases an element from the table without dropping it.",5,[[["bucket",3]]]],[11,"erase","","Erases an element from the table, dropping it in place.",5,[[["bucket",3]]]],[11,"erase_entry","","Finds and erases an element from the table, dropping it …",5,[[["u64",15]],["bool",15]]],[11,"remove","","Removes an element from the table, returning it.",5,[[["bucket",3]]]],[11,"remove_entry","","Finds and removes an element from the table, returning it.",5,[[["u64",15]],["option",4]]],[11,"clear_no_drop","","Marks all table buckets as empty without dropping their …",5,[[]]],[11,"clear","","Removes all elements from the table without freeing the …",5,[[]]],[11,"shrink_to","","Shrinks the table to fit <code>max(self.len(), min_size)</code> …",5,[[["usize",15]]]],[11,"reserve","","Ensures that at least <code>additional</code> items can be inserted …",5,[[["usize",15]]]],[11,"try_reserve","","Tries to ensure that at least <code>additional</code> items can be …",5,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"insert","","Inserts a new element into the table, and returns its raw …",5,[[["u64",15]],["bucket",3]]],[11,"insert_entry","","Inserts a new element into the table, and returns a …",5,[[["u64",15]]]],[11,"insert_no_grow","","Inserts a new element into the table, without growing the …",5,[[["u64",15]],["bucket",3]]],[11,"replace_bucket_with","","Temporary removes a bucket, applying the given function …",5,[[["bucket",3]],["bool",15]]],[11,"find","","Searches for an element in the table.",5,[[["u64",15]],[["option",4],["bucket",3]]]],[11,"get","","Gets a reference to an element in the table.",5,[[["u64",15]],["option",4]]],[11,"get_mut","","Gets a mutable reference to an element in the table.",5,[[["u64",15]],["option",4]]],[11,"capacity","","Returns the number of elements the map can hold without …",5,[[],["usize",15]]],[11,"len","","Returns the number of elements in the table.",5,[[],["usize",15]]],[11,"buckets","","Returns the number of buckets in the table.",5,[[],["usize",15]]],[11,"iter","","Returns an iterator over every element in the table. It …",5,[[],["rawiter",3]]],[11,"iter_hash","","Returns an iterator over occupied buckets that could …",5,[[["u64",15]],["rawiterhash",3]]],[11,"drain","","Returns an iterator which removes all elements from the …",5,[[],["rawdrain",3]]],[11,"drain_iter_from","","Returns an iterator which removes all elements from the …",5,[[["rawiter",3]],["rawdrain",3]]],[11,"into_iter_from","","Returns an iterator which consumes all elements from the …",5,[[["rawiter",3]],["rawintoiter",3]]],[11,"clone_from_with_hasher","","Variant of <code>clone_from</code> to use when a hasher is available.",5,[[]]],[11,"reflect_remove","","Refresh the iterator so that it reflects a removal from …",6,[[["bucket",3]]]],[11,"reflect_insert","","Refresh the iterator so that it reflects an insertion …",6,[[["bucket",3]]]],[11,"iter","","",7,[[],["rawiter",3]]],[11,"iter","","",8,[[],["rawiter",3]]],[11,"with_hasher","hashbrown::hash_map","Creates an empty <code>HashMap</code> which will use the given hash …",11,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashMap</code> with the specified capacity, …",11,[[["usize",15]]]],[11,"hasher","","Returns a reference to the map\'s <code>BuildHasher</code>.",11,[[]]],[11,"capacity","","Returns the number of elements the map can hold without …",11,[[],["usize",15]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The …",11,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The …",11,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",11,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary …",11,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary …",11,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",11,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",11,[[],["bool",15]]],[11,"drain","","Clears the map, returning all key-value pairs as an …",11,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",11,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",11,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",11,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",11,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",11,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It …",11,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It …",11,[[["usize",15]]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",11,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",11,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",11,[[],["option",4]]],[11,"get_key_value_mut","","Returns the key-value pair corresponding to the supplied …",11,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",11,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",11,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",11,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",11,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",11,[[],["option",4]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",11,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",11,[[],["rawentrybuilder",3]]],[11,"from_key","","Creates a <code>RawEntryMut</code> from the given key.",20,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a <code>RawEntryMut</code> from the given key and its hash.",20,[[["u64",15]],["rawentrymut",4]]],[11,"from_hash","","Creates a <code>RawEntryMut</code> from the given hash.",20,[[["u64",15]],["rawentrymut",4]]],[11,"from_key","","Access an entry by key.",23,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",23,[[["u64",15]],["option",4]]],[11,"from_hash","","Access an entry by hash.",23,[[["u64",15]],["option",4]]],[11,"insert","","Sets the value of the entry, and returns a …",0,[[],["rawoccupiedentrymut",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",0,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",0,[[]]],[11,"key","","Gets a reference to the key in the entry.",21,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",21,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in …",21,[[]]],[11,"get","","Gets a reference to the value in the entry.",21,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",21,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",21,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",21,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the …",21,[[]]],[11,"into_key_value","","Converts the OccupiedEntry into a mutable reference to …",21,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",21,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old …",21,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",21,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",21,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",21,[[],["rawentrymut",4]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",22,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key, …",22,[[["u64",15]]]],[11,"insert_with_hasher","","Set the value of an entry with a custom hasher function.",22,[[["u64",15]]]],[11,"insert","","Sets the value of the entry, and returns an OccupiedEntry.",1,[[],["occupiedentry",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",1,[[["fnonce",8]]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty, …",1,[[["fnonce",8]]]],[11,"key","","Returns a reference to this entry\'s key.",1,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",1,[[]]],[11,"and_replace_entry_with","","Provides shared access to the key and owned access to the …",1,[[]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",1,[[]]],[11,"key","","Gets a reference to the key in the entry.",24,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",24,[[]]],[11,"get","","Gets a reference to the value in the entry.",24,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",24,[[]]],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to …",24,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",24,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",24,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The …",24,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to …",24,[[]]],[11,"replace_entry_with","","Provides shared access to the key and owned access to the …",24,[[],["entry",4]]],[11,"key","","Gets a reference to the key that would be used when …",25,[[]]],[11,"into_key","","Take ownership of the key.",25,[[]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",25,[[]]],[11,"with_hasher","hashbrown::hash_set","Creates a new empty hash set which will use the given …",26,[[]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashSet</code> with the specified capacity, …",26,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the set can hold without …",26,[[],["usize",15]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The …",26,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",26,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no elements.",26,[[],["bool",15]]],[11,"drain","","Clears the set, returning all elements in an iterator.",26,[[],["drain",3]]],[11,"retain","","Retains only the elements specified by the predicate.",26,[[]]],[11,"drain_filter","","Drains elements which are true under the given predicate, …",26,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",26,[[]]],[11,"hasher","","Returns a reference to the set\'s <code>BuildHasher</code>.",26,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",26,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",26,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It …",26,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It …",26,[[["usize",15]]]],[11,"difference","","Visits the values representing the difference, i.e., the …",26,[[],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference, …",26,[[],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., …",26,[[],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the …",26,[[],["union",3]]],[11,"contains","","Returns <code>true</code> if the set contains a value.",26,[[],["bool",15]]],[11,"get","","Returns a reference to the value in the set, if any, that …",26,[[],["option",4]]],[11,"get_or_insert","","Inserts the given <code>value</code> into the set if it is not …",26,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given <code>value</code> into the set if …",26,[[]]],[11,"get_or_insert_with","","Inserts a value computed from <code>f</code> into the set if the given …",26,[[]]],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…",26,[[],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if the set is a subset of another, i.e., …",26,[[],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if the set is a superset of another, i.e., …",26,[[],["bool",15]]],[11,"insert","","Adds a value to the set.",26,[[],["bool",15]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",26,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value …",26,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",26,[[],["option",4]]]],"p":[[4,"RawEntryMut"],[4,"Entry"],[4,"TryReserveError"],[13,"AllocError"],[3,"Bucket"],[3,"RawTable"],[3,"RawIter"],[3,"RawIntoIter"],[3,"RawDrain"],[3,"RawIterHash"],[4,"DefaultHashBuilder"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"]]},\
"http":{"doc":"A general purpose library of common HTTP types","i":[[0,"header","http","HTTP header types",null,null],[8,"AsHeaderName","http::header","A marker trait used to identify values that can be used …",null,null],[3,"Drain","","A drain iterator for <code>HeaderMap</code>.",null,null],[4,"Entry","","A view into a single location in a <code>HeaderMap</code>, which may …",null,null],[13,"Occupied","","An occupied entry",0,null],[13,"Vacant","","A vacant entry",0,null],[3,"GetAll","","A view to all values stored in a single entry.",null,null],[3,"HeaderMap","","A set of HTTP headers",null,null],[8,"IntoHeaderName","","A marker trait used to identify values that can be used …",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HeaderMap</code>.",null,null],[3,"Iter","","<code>HeaderMap</code> entry iterator.",null,null],[3,"IterMut","","<code>HeaderMap</code> mutable entry iterator",null,null],[3,"Keys","","An iterator over <code>HeaderMap</code> keys.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a <code>HeaderMap</code>.",null,null],[3,"VacantEntry","","A view into a single empty location in a <code>HeaderMap</code>.",null,null],[3,"ValueDrain","","An drain iterator of all values associated with a single …",null,null],[3,"ValueIter","","An iterator of all values associated with a single header …",null,null],[3,"ValueIterMut","","A mutable iterator of all values associated with a single …",null,null],[3,"Values","","<code>HeaderMap</code> value iterator.",null,null],[3,"ValuesMut","","<code>HeaderMap</code> mutable value iterator",null,null],[3,"HeaderName","","Represents an HTTP header field name",null,null],[3,"InvalidHeaderName","","A possible error when converting a <code>HeaderName</code> from …",null,null],[3,"HeaderValue","","Represents an HTTP header field value.",null,null],[3,"InvalidHeaderValue","","A possible error when converting a <code>HeaderValue</code> from a …",null,null],[3,"ToStrError","","A possible error when converting a <code>HeaderValue</code> to a …",null,null],[17,"ACCEPT","","Advertises which content types the client is able to …",null,null],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to …",null,null],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to …",null,null],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to …",null,null],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request …",null,null],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the …",null,null],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",null,null],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access …",null,null],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with …",null,null],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the …",null,null],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can …",null,null],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when …",null,null],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used …",null,null],[17,"AGE","","Indicates the time in seconds the object has been in a …",null,null],[17,"ALLOW","","Lists the set of methods support by a resource.",null,null],[17,"ALT_SVC","","Advertises the availability of alternate services to …",null,null],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent …",null,null],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both …",null,null],[17,"CONNECTION","","Controls whether or not the network connection stays open …",null,null],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed …",null,null],[17,"CONTENT_ENCODING","","Used to compress the media-type.",null,null],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",null,null],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",null,null],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",null,null],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message …",null,null],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to …",null,null],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their …",null,null],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",null,null],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the …",null,null],[17,"DNT","","Indicates the client\'s tracking preference.",null,null],[17,"DATE","","Contains the date and time at which the message was …",null,null],[17,"ETAG","","Identifier for a specific version of a resource.",null,null],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the …",null,null],[17,"EXPIRES","","Contains the date/time after which the response is …",null,null],[17,"FORWARDED","","Contains information from the client-facing side of proxy …",null,null],[17,"FROM","","Contains an Internet email address for a human user who …",null,null],[17,"HOST","","Specifies the domain name of the server and (optionally) …",null,null],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification …",null,null],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_RANGE","","Makes a request conditional based on range.",null,null],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last …",null,null],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",null,null],[17,"LINK","","Allows the server to point an interested client to …",null,null],[17,"LOCATION","","Indicates the URL to redirect a page to.",null,null],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request …",null,null],[17,"ORIGIN","","Indicates where a fetch originates from.",null,null],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",null,null],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to …",null,null],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to …",null,null],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a …",null,null],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri …",null,null],[17,"RANGE","","Indicates the part of a document that the server should …",null,null],[17,"REFERER","","Contains the address of the previous web page from which …",null,null],[17,"REFERRER_POLICY","","Governs which referrer information should be included …",null,null],[17,"REFRESH","","Informs the web browser that the current page or frame …",null,null],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long …",null,null],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in …",null,null],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the …",null,null],[17,"SERVER","","Contains information about the software used by the …",null,null],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",null,null],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of …",null,null],[17,"TE","","Informs the server of transfer encodings willing to be …",null,null],[17,"TRAILER","","Allows the sender to include additional fields at the end …",null,null],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer …",null,null],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",null,null],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s …",null,null],[17,"USER_AGENT","","Contains a string that allows identifying the requesting …",null,null],[17,"VARY","","Determines how to match future requests with cached …",null,null],[17,"VIA","","Added by proxies to track routing.",null,null],[17,"WARNING","","General HTTP header contains information about possible …",null,null],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to …",null,null],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types …",null,null],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",null,null],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to …",null,null],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",null,null],[0,"method","http","The HTTP request method",null,null],[3,"Method","http::method","The Request Method (VERB)",null,null],[3,"InvalidMethod","","A possible error value when converting <code>Method</code> from bytes.",null,null],[18,"GET","","GET",1,null],[18,"POST","","POST",1,null],[18,"PUT","","PUT",1,null],[18,"DELETE","","DELETE",1,null],[18,"HEAD","","HEAD",1,null],[18,"OPTIONS","","OPTIONS",1,null],[18,"CONNECT","","CONNECT",1,null],[18,"PATCH","","PATCH",1,null],[18,"TRACE","","TRACE",1,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",1,[[],[["method",3],["result",4],["invalidmethod",3]]]],[11,"is_safe","","Whether a method is considered \\\"safe\\\", meaning the …",1,[[],["bool",15]]],[11,"is_idempotent","","Whether a method is considered \\\"idempotent\\\", meaning the …",1,[[],["bool",15]]],[11,"as_str","","Return a &str representation of the HTTP method",1,[[],["str",15]]],[0,"request","http","HTTP request types.",null,null],[3,"Request","http::request","Represents an HTTP request.",null,null],[3,"Parts","","Component parts of an HTTP <code>Request</code>",null,null],[12,"method","","The request\'s method",2,null],[12,"uri","","The request\'s URI",2,null],[12,"version","","The request\'s version",2,null],[12,"headers","","The request\'s headers",2,null],[12,"extensions","","The request\'s extensions",2,null],[3,"Builder","","An HTTP request builder",null,null],[11,"builder","","Creates a new builder-style object to manufacture a …",3,[[],["builder",3]]],[11,"get","","Creates a new <code>Builder</code> initialized with a GET method and …",3,[[],["builder",3]]],[11,"put","","Creates a new <code>Builder</code> initialized with a PUT method and …",3,[[],["builder",3]]],[11,"post","","Creates a new <code>Builder</code> initialized with a POST method and …",3,[[],["builder",3]]],[11,"delete","","Creates a new <code>Builder</code> initialized with a DELETE method …",3,[[],["builder",3]]],[11,"options","","Creates a new <code>Builder</code> initialized with an OPTIONS method …",3,[[],["builder",3]]],[11,"head","","Creates a new <code>Builder</code> initialized with a HEAD method and …",3,[[],["builder",3]]],[11,"connect","","Creates a new <code>Builder</code> initialized with a CONNECT method …",3,[[],["builder",3]]],[11,"patch","","Creates a new <code>Builder</code> initialized with a PATCH method and …",3,[[],["builder",3]]],[11,"trace","","Creates a new <code>Builder</code> initialized with a TRACE method and …",3,[[],["builder",3]]],[11,"new","","Creates a new blank <code>Request</code> with the body",3,[[],["request",3]]],[11,"from_parts","","Creates a new <code>Request</code> with the given components parts and …",3,[[["parts",3]],["request",3]]],[11,"method","","Returns a reference to the associated HTTP method.",3,[[],["method",3]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",3,[[],["method",3]]],[11,"uri","","Returns a reference to the associated URI.",3,[[],["uri",3]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",3,[[],["uri",3]]],[11,"version","","Returns the associated version.",3,[[],["version",3]]],[11,"version_mut","","Returns a mutable reference to the associated version.",3,[[],["version",3]]],[11,"headers","","Returns a reference to the associated header field map.",3,[[],["headermap",3]]],[11,"headers_mut","","Returns a mutable reference to the associated header …",3,[[],["headermap",3]]],[11,"extensions","","Returns a reference to the associated extensions.",3,[[],["extensions",3]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",3,[[],["extensions",3]]],[11,"body","","Returns a reference to the associated HTTP body.",3,[[]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",3,[[]]],[11,"into_body","","Consumes the request, returning just the body.",3,[[]]],[11,"into_parts","","Consumes the request returning the head and body parts.",3,[[]]],[11,"map","","Consumes the request returning a new request with body …",3,[[],["request",3]]],[11,"new","","Creates a new default instance of <code>Builder</code> to construct a …",4,[[],["builder",3]]],[11,"method","","Set the HTTP method for this request.",4,[[],["builder",3]]],[11,"method_ref","","Get the HTTP Method for this request.",4,[[],[["option",4],["method",3]]]],[11,"uri","","Set the URI for this request.",4,[[],["builder",3]]],[11,"uri_ref","","Get the URI for this request",4,[[],[["option",4],["uri",3]]]],[11,"version","","Set the HTTP version for this request.",4,[[["version",3]],["builder",3]]],[11,"header","","Appends a header to this request builder.",4,[[],["builder",3]]],[11,"headers_ref","","Get header on this request builder. when builder has …",4,[[],[["option",4],["headermap",3]]]],[11,"headers_mut","","Get headers on this request builder.",4,[[],[["headermap",3],["option",4]]]],[11,"extension","","Adds an extension to this builder",4,[[],["builder",3]]],[11,"extensions_ref","","Get a reference to the extensions for this request …",4,[[],[["extensions",3],["option",4]]]],[11,"extensions_mut","","Get a mutable reference to the extensions for this …",4,[[],[["option",4],["extensions",3]]]],[11,"body","","\\\"Consumes\\\" this builder, using the provided <code>body</code> to …",4,[[],[["request",3],["result",6]]]],[0,"response","http","HTTP response types.",null,null],[3,"Response","http::response","Represents an HTTP response",null,null],[3,"Parts","","Component parts of an HTTP <code>Response</code>",null,null],[12,"status","","The response\'s status",5,null],[12,"version","","The response\'s version",5,null],[12,"headers","","The response\'s headers",5,null],[12,"extensions","","The response\'s extensions",5,null],[3,"Builder","","An HTTP response builder",null,null],[11,"builder","","Creates a new builder-style object to manufacture a …",6,[[],["builder",3]]],[11,"new","","Creates a new blank <code>Response</code> with the body",6,[[],["response",3]]],[11,"from_parts","","Creates a new <code>Response</code> with the given head and body",6,[[["parts",3]],["response",3]]],[11,"status","","Returns the <code>StatusCode</code>.",6,[[],["statuscode",3]]],[11,"status_mut","","Returns a mutable reference to the associated <code>StatusCode</code>.",6,[[],["statuscode",3]]],[11,"version","","Returns a reference to the associated version.",6,[[],["version",3]]],[11,"version_mut","","Returns a mutable reference to the associated version.",6,[[],["version",3]]],[11,"headers","","Returns a reference to the associated header field map.",6,[[],["headermap",3]]],[11,"headers_mut","","Returns a mutable reference to the associated header …",6,[[],["headermap",3]]],[11,"extensions","","Returns a reference to the associated extensions.",6,[[],["extensions",3]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",6,[[],["extensions",3]]],[11,"body","","Returns a reference to the associated HTTP body.",6,[[]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",6,[[]]],[11,"into_body","","Consumes the response, returning just the body.",6,[[]]],[11,"into_parts","","Consumes the response returning the head and body parts.",6,[[]]],[11,"map","","Consumes the response returning a new response with body …",6,[[],["response",3]]],[11,"new","","Creates a new default instance of <code>Builder</code> to construct …",7,[[],["builder",3]]],[11,"status","","Set the HTTP status for this response.",7,[[],["builder",3]]],[11,"version","","Set the HTTP version for this response.",7,[[["version",3]],["builder",3]]],[11,"header","","Appends a header to this response builder.",7,[[],["builder",3]]],[11,"headers_ref","","Get header on this response builder.",7,[[],[["option",4],["headermap",3]]]],[11,"headers_mut","","Get header on this response builder. when builder has …",7,[[],[["headermap",3],["option",4]]]],[11,"extension","","Adds an extension to this builder",7,[[],["builder",3]]],[11,"extensions_ref","","Get a reference to the extensions for this response …",7,[[],[["extensions",3],["option",4]]]],[11,"extensions_mut","","Get a mutable reference to the extensions for this …",7,[[],[["option",4],["extensions",3]]]],[11,"body","","\\\"Consumes\\\" this builder, using the provided <code>body</code> to …",7,[[],[["response",3],["result",6]]]],[0,"status","http","HTTP status codes",null,null],[3,"StatusCode","http::status","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).",null,null],[3,"InvalidStatusCode","","A possible error value when converting a <code>StatusCode</code> from …",null,null],[11,"from_u16","","Converts a u16 to a status code.",8,[[["u16",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]]],[11,"from_bytes","","Converts a &[u8] to a status code",8,[[],[["result",4],["statuscode",3],["invalidstatuscode",3]]]],[11,"as_u16","","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.",8,[[],["u16",15]]],[11,"as_str","","Returns a &str representation of the <code>StatusCode</code>",8,[[],["str",15]]],[11,"canonical_reason","","Get the standardised <code>reason-phrase</code> for this status code.",8,[[],[["str",15],["option",4]]]],[11,"is_informational","","Check if status is within 100-199.",8,[[],["bool",15]]],[11,"is_success","","Check if status is within 200-299.",8,[[],["bool",15]]],[11,"is_redirection","","Check if status is within 300-399.",8,[[],["bool",15]]],[11,"is_client_error","","Check if status is within 400-499.",8,[[],["bool",15]]],[11,"is_server_error","","Check if status is within 500-599.",8,[[],["bool",15]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",8,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",8,null],[18,"PROCESSING","","102 Processing [RFC2518]",8,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",8,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",8,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",8,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",8,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",8,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",8,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",8,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",8,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",8,null],[18,"IM_USED","","226 IM Used [RFC3229]",8,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",8,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",8,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",8,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",8,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",8,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",8,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",8,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",8,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",8,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",8,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",8,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",8,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",8,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",8,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",8,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",8,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",8,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",8,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",8,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",8,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",8,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",8,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",8,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",8,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",8,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",8,null],[18,"IM_A_TEAPOT","","418 I\'m a teapot [curiously not registered by IANA but …",8,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",8,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",8,null],[18,"LOCKED","","423 Locked [RFC4918]",8,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",8,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",8,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",8,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",8,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",8,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",8,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",8,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",8,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",8,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",8,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",8,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",8,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",8,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",8,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",8,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",8,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",8,null],[0,"uri","http","URI component of request and response lines",null,null],[3,"Authority","http::uri","Represents the authority component of a URI.",null,null],[3,"Builder","","A builder for <code>Uri</code>s.",null,null],[3,"PathAndQuery","","Represents the path component of a URI",null,null],[3,"Port","","The port component of a URI.",null,null],[3,"Scheme","","Represents the scheme component of a URI",null,null],[3,"Uri","","The URI component of a request.",null,null],[3,"Parts","","The various parts of a URI.",null,null],[12,"scheme","","The scheme component of a URI",9,null],[12,"authority","","The authority component of a URI",9,null],[12,"path_and_query","","The origin-form component of a URI",9,null],[3,"InvalidUri","","An error resulting from a failed attempt to construct a …",null,null],[3,"InvalidUriParts","","An error resulting from a failed attempt to construct a …",null,null],[11,"builder","","Creates a new builder-style object to manufacture a <code>Uri</code>.",10,[[],["builder",3]]],[11,"from_parts","","Attempt to convert a <code>Uri</code> from <code>Parts</code>",10,[[["parts",3]],[["result",4],["invaliduriparts",3],["uri",3]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.",10,[[],[["result",4],["invaliduri",3]]]],[11,"from_static","","Convert a <code>Uri</code> from a static string.",10,[[["str",15]]]],[11,"into_parts","","Convert a <code>Uri</code> into <code>Parts</code>.",10,[[],["parts",3]]],[11,"path_and_query","","Returns the path & query components of the Uri",10,[[],[["pathandquery",3],["option",4]]]],[11,"path","","Get the path of this <code>Uri</code>.",10,[[],["str",15]]],[11,"scheme","","Get the scheme of this <code>Uri</code>.",10,[[],[["option",4],["scheme",3]]]],[11,"scheme_str","","Get the scheme of this <code>Uri</code> as a <code>&str</code>.",10,[[],[["option",4],["str",15]]]],[11,"authority","","Get the authority of this <code>Uri</code>.",10,[[],[["option",4],["authority",3]]]],[11,"host","","Get the host of this <code>Uri</code>.",10,[[],[["option",4],["str",15]]]],[11,"port","","Get the port part of this <code>Uri</code>.",10,[[],[["option",4],["port",3]]]],[11,"port_u16","","Get the port of this <code>Uri</code> as a <code>u16</code>.",10,[[],[["option",4],["u16",15]]]],[11,"query","","Get the query string of this <code>Uri</code>, starting after the <code>?</code>.",10,[[],[["option",4],["str",15]]]],[0,"version","http","HTTP version",null,null],[3,"Version","http::version","Represents a version of the HTTP spec.",null,null],[18,"HTTP_09","","<code>HTTP/0.9</code>",11,null],[18,"HTTP_10","","<code>HTTP/1.0</code>",11,null],[18,"HTTP_11","","<code>HTTP/1.1</code>",11,null],[18,"HTTP_2","","<code>HTTP/2.0</code>",11,null],[18,"HTTP_3","","<code>HTTP/3.0</code>",11,null],[3,"Error","http","A generic \\\"error\\\" for HTTP connections",null,null],[6,"Result","","A <code>Result</code> typedef to use with the <code>http::Error</code> type",null,null],[3,"Extensions","","A type map of protocol extensions.",null,null],[11,"from","http::header","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"into_iter","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","http::method","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","http::request","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","http::response","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","http::status","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","http::uri","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","http::version","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","http","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"drop","http::header","",19,[[]]],[11,"drop","","",15,[[]]],[11,"drop","","",25,[[]]],[11,"as_ref","","",26,[[],["str",15]]],[11,"as_ref","","",26,[[]]],[11,"as_ref","","",28,[[]]],[11,"as_ref","http::method","",1,[[],["str",15]]],[11,"as_ref","http::uri","",33,[[],["str",15]]],[11,"as_ref","","",36,[[],["str",15]]],[11,"as_ref","","",37,[[],["str",15]]],[11,"from","http::header","",26,[[["headername",3]],["headername",3]]],[11,"from","","",28,[[["headername",3]],["headervalue",3]]],[11,"from","","",28,[[["u16",15]],["headervalue",3]]],[11,"from","","",28,[[["i16",15]],["headervalue",3]]],[11,"from","","",28,[[["u32",15]],["headervalue",3]]],[11,"from","","",28,[[["i32",15]],["headervalue",3]]],[11,"from","","",28,[[["u64",15]],["headervalue",3]]],[11,"from","","",28,[[["i64",15]],["headervalue",3]]],[11,"from","","",28,[[["usize",15]],["headervalue",3]]],[11,"from","","",28,[[["isize",15]],["headervalue",3]]],[11,"from","","",28,[[["headervalue",3]]]],[11,"from","http::method","",1,[[["method",3]]]],[11,"from","http::status","",8,[[["statuscode",3]]]],[11,"from","http::uri","",9,[[["uri",3]]]],[11,"from","http","",40,[[["invalidstatuscode",3]],["error",3]]],[11,"from","","",40,[[["invalidmethod",3]],["error",3]]],[11,"from","","",40,[[["invaliduri",3]],["error",3]]],[11,"from","","",40,[[["invaliduriparts",3]],["error",3]]],[11,"from","","",40,[[["invalidheadername",3]],["error",3]]],[11,"from","","",40,[[["invalidheadervalue",3]],["error",3]]],[11,"from","","",40,[[["infallible",4]],["error",3]]],[11,"next_back","http::header","",23,[[],["option",4]]],[11,"next_back","","",24,[[],["option",4]]],[11,"extend","","Extend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.",12,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves …",12,[[],["intoiter",3]]],[11,"into_iter","","",20,[[],["valueiter",3]]],[11,"into_iter","","",22,[[],["valueitermut",3]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",23,[[],["option",4]]],[11,"size_hint","","",23,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"clone","","",12,[[],["headermap",3]]],[11,"clone","","",26,[[],["headername",3]]],[11,"clone","","",28,[[],["headervalue",3]]],[11,"clone","http::method","",1,[[],["method",3]]],[11,"clone","http::status","",8,[[],["statuscode",3]]],[11,"clone","http::uri","",33,[[],["authority",3]]],[11,"clone","","",35,[[],["pathandquery",3]]],[11,"clone","","",37,[[],["scheme",3]]],[11,"clone","","",10,[[],["uri",3]]],[11,"clone","http::version","",11,[[],["version",3]]],[11,"default","http::header","",12,[[]]],[11,"default","http::method","",1,[[],["method",3]]],[11,"default","http::request","",3,[[],["request",3]]],[11,"default","","",4,[[],["builder",3]]],[11,"default","http::response","",6,[[],["response",3]]],[11,"default","","",7,[[],["builder",3]]],[11,"default","http::status","",8,[[],["statuscode",3]]],[11,"default","http::uri","",34,[[],["builder",3]]],[11,"default","","",9,[[],["parts",3]]],[11,"default","","",10,[[],["uri",3]]],[11,"default","http::version","",11,[[],["version",3]]],[11,"default","http","",41,[[],["extensions",3]]],[11,"cmp","http::header","",28,[[],["ordering",4]]],[11,"cmp","http::status","",8,[[["statuscode",3]],["ordering",4]]],[11,"cmp","http::version","",11,[[["version",3]],["ordering",4]]],[11,"eq","http::header","",12,[[["headermap",3]],["bool",15]]],[11,"eq","","",20,[[],["bool",15]]],[11,"eq","","",26,[[["headername",3]],["bool",15]]],[11,"ne","","",26,[[["headername",3]],["bool",15]]],[11,"eq","","",26,[[["headername",3]],["bool",15]]],[11,"eq","","Performs a case-insensitive comparison of the string …",26,[[["str",15]],["bool",15]]],[11,"eq","","Performs a case-insensitive comparison of the string …",26,[[["str",15]],["bool",15]]],[11,"eq","","",28,[[["headervalue",3]],["bool",15]]],[11,"eq","","",28,[[["str",15]],["bool",15]]],[11,"eq","","",28,[[],["bool",15]]],[11,"eq","","",28,[[["string",3]],["bool",15]]],[11,"eq","","",28,[[],["bool",15]]],[11,"eq","http::method","",1,[[["method",3]],["bool",15]]],[11,"ne","","",1,[[["method",3]],["bool",15]]],[11,"eq","","",1,[[["method",3]],["bool",15]]],[11,"eq","","",1,[[["str",15]],["bool",15]]],[11,"eq","","",1,[[["str",15]],["bool",15]]],[11,"eq","http::status","",8,[[["statuscode",3]],["bool",15]]],[11,"ne","","",8,[[["statuscode",3]],["bool",15]]],[11,"eq","","",8,[[["u16",15]],["bool",15]]],[11,"eq","http::uri","",33,[[["authority",3]],["bool",15]]],[11,"eq","","",33,[[["str",15]],["bool",15]]],[11,"eq","","",33,[[["str",15]],["bool",15]]],[11,"eq","","",33,[[["string",3]],["bool",15]]],[11,"eq","","",35,[[["pathandquery",3]],["bool",15]]],[11,"eq","","",35,[[["str",15]],["bool",15]]],[11,"eq","","",35,[[["str",15]],["bool",15]]],[11,"eq","","",35,[[["string",3]],["bool",15]]],[11,"eq","","",36,[[["port",3]],["bool",15]]],[11,"eq","","",36,[[["u16",15]],["bool",15]]],[11,"eq","","",37,[[["scheme",3]],["bool",15]]],[11,"eq","","",37,[[["str",15]],["bool",15]]],[11,"eq","","",10,[[["uri",3]],["bool",15]]],[11,"eq","","",10,[[["str",15]],["bool",15]]],[11,"eq","","",10,[[["str",15]],["bool",15]]],[11,"eq","http::version","",11,[[["version",3]],["bool",15]]],[11,"ne","","",11,[[["version",3]],["bool",15]]],[11,"partial_cmp","http::header","",28,[[["headervalue",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",28,[[["str",15]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",28,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",28,[[["string",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",28,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","http::status","",8,[[["statuscode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["statuscode",3]],["bool",15]]],[11,"le","","",8,[[["statuscode",3]],["bool",15]]],[11,"gt","","",8,[[["statuscode",3]],["bool",15]]],[11,"ge","","",8,[[["statuscode",3]],["bool",15]]],[11,"partial_cmp","http::uri","",33,[[["authority",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",33,[[["str",15]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",33,[[["str",15]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",33,[[["string",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",35,[[["pathandquery",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",35,[[["str",15]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",35,[[["str",15]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",35,[[["string",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","http::version","",11,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["version",3]],["bool",15]]],[11,"le","","",11,[[["version",3]],["bool",15]]],[11,"gt","","",11,[[["version",3]],["bool",15]]],[11,"ge","","",11,[[["version",3]],["bool",15]]],[11,"fmt","http::header","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","http::method","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","http::request","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","http::response","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","http::status","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","http::uri","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","http::version","",11,[[["formatter",3]],["result",6]]],[11,"fmt","http","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","http::header","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","http::method","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","http::status","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","http::uri","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","http","",40,[[["formatter",3]],["result",6]]],[11,"index","http::header","PanicsUsing the index operator will cause a panic if the …",12,[[]]],[11,"hash","","",26,[[]]],[11,"hash","","",28,[[]]],[11,"hash","http::method","",1,[[]]],[11,"hash","http::status","",8,[[]]],[11,"hash","http::uri","",33,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",10,[[]]],[11,"hash","http::version","",11,[[]]],[11,"borrow","http::header","",26,[[],["str",15]]],[11,"try_from","","",12,[[["hashmap",3]],["result",4]]],[11,"try_from","","",26,[[["str",15]],["result",4]]],[11,"try_from","","",26,[[["string",3]],["result",4]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_from","","",28,[[["str",15]],["result",4]]],[11,"try_from","","",28,[[["string",3]],["result",4]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_from","","",28,[[["string",3]],["result",4]]],[11,"try_from","","",28,[[["vec",3],["u8",15]],["result",4]]],[11,"try_from","http::method","",1,[[],["result",4]]],[11,"try_from","","",1,[[["str",15]],["result",4]]],[11,"try_from","http::status","",8,[[],["result",4]]],[11,"try_from","","",8,[[["str",15]],["result",4]]],[11,"try_from","","",8,[[["u16",15]],["result",4]]],[11,"try_from","http::uri","",33,[[],["result",4]]],[11,"try_from","","",33,[[["str",15]],["result",4]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_from","","",35,[[["str",15]],["result",4]]],[11,"try_from","","",35,[[["string",3]],["result",4]]],[11,"try_from","","",35,[[["string",3]],["result",4]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_from","","",37,[[["str",15]],["result",4]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_from","","",10,[[["str",15]],["result",4]]],[11,"try_from","","",10,[[["string",3]],["result",4]]],[11,"try_from","","",10,[[["string",3]],["result",4]]],[11,"try_from","","",10,[[["parts",3]],["result",4]]],[11,"try_from","","",10,[[["uri",3]],["result",4]]],[11,"from_str","http::header","",26,[[["str",15]],[["result",4],["headername",3],["invalidheadername",3]]]],[11,"from_str","","",28,[[["str",15]],[["headervalue",3],["result",4]]]],[11,"from_str","http::method","",1,[[["str",15]],["result",4]]],[11,"from_str","http::status","",8,[[["str",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]]],[11,"from_str","http::uri","",33,[[["str",15]],[["result",4],["invaliduri",3]]]],[11,"from_str","","",35,[[["str",15]],[["result",4],["invaliduri",3]]]],[11,"from_str","","",37,[[["str",15]],["result",4]]],[11,"from_str","","",10,[[["str",15]],[["invaliduri",3],["uri",3],["result",4]]]],[11,"from_iter","http::header","",12,[[]]],[11,"source","http","",40,[[],[["error",8],["option",4]]]],[11,"new","http::header","Create an empty <code>HeaderMap</code>.",12,[[]]],[11,"with_capacity","","Create an empty <code>HeaderMap</code> with the specified capacity.",12,[[["usize",15]],["headermap",3]]],[11,"len","","Returns the number of headers stored in the map.",12,[[],["usize",15]]],[11,"keys_len","","Returns the number of keys stored in the map.",12,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",12,[[],["bool",15]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",12,[[]]],[11,"capacity","","Returns the number of headers the map can hold without …",12,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more headers to …",12,[[["usize",15]]]],[11,"get","","Returns a reference to the value associated with the key.",12,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the value associated with …",12,[[],["option",4]]],[11,"get_all","","Returns a view of all values associated with a key.",12,[[],["getall",3]]],[11,"contains_key","","Returns true if the map contains a value for the …",12,[[],["bool",15]]],[11,"iter","","An iterator visiting all key-value pairs.",12,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable …",12,[[],["itermut",3]]],[11,"keys","","An iterator visiting all keys.",12,[[],["keys",3]]],[11,"values","","An iterator visiting all values.",12,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably.",12,[[],["valuesmut",3]]],[11,"drain","","Clears the map, returning all entries as an iterator.",12,[[],["drain",3]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",12,[[],["entry",4]]],[11,"try_entry","","Gets the given key\'s corresponding entry in the map for …",12,[[],[["entry",4],["invalidheadername",3],["result",4]]]],[11,"insert","","Inserts a key-value pair into the map.",12,[[],["option",4]]],[11,"append","","Inserts a key-value pair into the map.",12,[[],["bool",15]]],[11,"remove","","Removes a key from the map, returning the value …",12,[[],["option",4]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",0,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",0,[[["fnonce",8]]]],[11,"key","","Returns a reference to the entry\'s key",0,[[],["headername",3]]],[11,"key","","Returns a reference to the entry\'s key",21,[[],["headername",3]]],[11,"into_key","","Take ownership of the key",21,[[],["headername",3]]],[11,"insert","","Insert the value into the entry.",21,[[]]],[11,"insert_entry","","Insert the value into the entry.",21,[[],["occupiedentry",3]]],[11,"iter","","Returns an iterator visiting all values associated with …",20,[[],["valueiter",3]]],[11,"key","","Returns a reference to the entry\'s key.",22,[[],["headername",3]]],[11,"get","","Get a reference to the first value in the entry.",22,[[]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",22,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",22,[[]]],[11,"insert","","Sets the value of the entry.",22,[[]]],[11,"insert_mult","","Sets the value of the entry.",22,[[],["valuedrain",3]]],[11,"append","","Insert the value into the entry.",22,[[]]],[11,"remove","","Remove the entry from the map.",22,[[]]],[11,"remove_entry","","Remove the entry from the map.",22,[[]]],[11,"remove_entry_mult","","Remove the entry from the map.",22,[[]]],[11,"iter","","Returns an iterator visiting all values associated with …",22,[[],["valueiter",3]]],[11,"iter_mut","","Returns an iterator mutably visiting all values …",22,[[],["valueitermut",3]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",26,[[],[["result",4],["headername",3],["invalidheadername",3]]]],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",26,[[],[["result",4],["headername",3],["invalidheadername",3]]]],[11,"from_static","","Converts a static string to a HTTP header name.",26,[[["str",15]],["headername",3]]],[11,"as_str","","Returns a <code>str</code> representation of the header.",26,[[],["str",15]]],[11,"from_static","","Convert a static string to a <code>HeaderValue</code>.",28,[[["str",15]],["headervalue",3]]],[11,"from_str","","Attempt to convert a string to a <code>HeaderValue</code>.",28,[[["str",15]],[["headervalue",3],["invalidheadervalue",3],["result",4]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",28,[[["headername",3]],["headervalue",3]]],[11,"from_bytes","","Attempt to convert a byte slice to a <code>HeaderValue</code>.",28,[[],[["headervalue",3],["invalidheadervalue",3],["result",4]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.",28,[[],[["headervalue",3],["invalidheadervalue",3],["result",4]]]],[11,"from_maybe_shared_unchecked","","Convert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …",28,[[],["headervalue",3]]],[11,"to_str","","Yields a <code>&str</code> slice if the <code>HeaderValue</code> only contains …",28,[[],[["tostrerror",3],["result",4],["str",15]]]],[11,"len","","Returns the length of <code>self</code>.",28,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>HeaderValue</code> has a length of zero …",28,[[],["bool",15]]],[11,"as_bytes","","Converts a <code>HeaderValue</code> to a byte slice.",28,[[]]],[11,"set_sensitive","","Mark that the header value represents sensitive …",28,[[["bool",15]]]],[11,"is_sensitive","","Returns <code>true</code> if the value represents sensitive data.",28,[[],["bool",15]]],[11,"from_static","http::uri","Attempt to convert an <code>Authority</code> from a static string.",33,[[["str",15]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.",33,[[],[["result",4],["invaliduri",3]]]],[11,"host","","Get the host of this <code>Authority</code>.",33,[[],["str",15]]],[11,"port","","Get the port part of this <code>Authority</code>.",33,[[],[["option",4],["port",3]]]],[11,"port_u16","","Get the port of this <code>Authority</code> as a <code>u16</code>.",33,[[],[["option",4],["u16",15]]]],[11,"as_str","","Return a str representation of the authority",33,[[],["str",15]]],[11,"new","","Creates a new default instance of <code>Builder</code> to construct a …",34,[[],["builder",3]]],[11,"scheme","","Set the <code>Scheme</code> for this URI.",34,[[]]],[11,"authority","","Set the <code>Authority</code> for this URI.",34,[[]]],[11,"path_and_query","","Set the <code>PathAndQuery</code> for this URI.",34,[[]]],[11,"build","","Consumes this builder, and tries to construct a valid <code>Uri</code> …",34,[[],[["error",3],["result",4],["uri",3]]]],[11,"from_static","","Convert a <code>PathAndQuery</code> from a static string.",35,[[["str",15]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.",35,[[],[["result",4],["invaliduri",3]]]],[11,"path","","Returns the path component",35,[[],["str",15]]],[11,"query","","Returns the query string component",35,[[],[["option",4],["str",15]]]],[11,"as_str","","Returns the path and query as a string component.",35,[[],["str",15]]],[11,"as_u16","","Returns the port number as a <code>u16</code>.",36,[[],["u16",15]]],[11,"as_str","","Returns the port number as a <code>str</code>.",36,[[],["str",15]]],[18,"HTTP","","HTTP protocol scheme",37,null],[18,"HTTPS","","HTTP protocol over TLS.",37,null],[11,"as_str","","Return a str representation of the scheme",37,[[],["str",15]]],[11,"is","http","Return true if the underlying error has the same type as …",40,[[],["bool",15]]],[11,"get_ref","","Return a reference to the lower level, inner error.",40,[[],["error",8]]],[11,"new","","Create an empty <code>Extensions</code>.",41,[[],["extensions",3]]],[11,"insert","","Insert a type into this <code>Extensions</code>.",41,[[["send",8],["sync",8]],[["send",8],["option",4],["sync",8]]]],[11,"get","","Get a reference to a type previously inserted on this …",41,[[],["option",4]]],[11,"get_mut","","Get a mutable reference to a type previously inserted on …",41,[[],["option",4]]],[11,"remove","","Remove a type from this <code>Extensions</code>.",41,[[],[["send",8],["option",4],["sync",8]]]],[11,"clear","","Clear the <code>Extensions</code> of all inserted extensions.",41,[[]]]],"p":[[4,"Entry"],[3,"Method"],[3,"Parts"],[3,"Request"],[3,"Builder"],[3,"Parts"],[3,"Response"],[3,"Builder"],[3,"StatusCode"],[3,"Parts"],[3,"Uri"],[3,"Version"],[3,"HeaderMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Drain"],[3,"GetAll"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"ValueDrain"],[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"HeaderValue"],[3,"InvalidHeaderValue"],[3,"ToStrError"],[3,"InvalidMethod"],[3,"InvalidStatusCode"],[3,"Authority"],[3,"Builder"],[3,"PathAndQuery"],[3,"Port"],[3,"Scheme"],[3,"InvalidUri"],[3,"InvalidUriParts"],[3,"Error"],[3,"Extensions"]]},\
"http_body":{"doc":"Asynchronous HTTP request or response body.","i":[[0,"combinators","http_body","Combinators for the <code>Body</code> trait.",null,null],[3,"BoxBody","http_body::combinators","A boxed [<code>Body</code>] trait object.",null,null],[3,"MapData","","Body returned by the <code>map_data</code> combinator.",null,null],[3,"MapErr","","Body returned by the <code>map_err</code> combinator.",null,null],[3,"Empty","http_body","A body that is always empty.",null,null],[3,"Full","","A body that consists of a single chunk.",null,null],[3,"Data","","Future that resolves to the next data chunk from <code>Body</code>",null,null],[3,"Trailers","","Future that resolves to the optional trailers from <code>Body</code>",null,null],[3,"SizeHint","","A <code>Body</code> size hint",null,null],[8,"Body","","Trait representing a streaming body of a Request or …",null,null],[16,"Data","","Values yielded by the <code>Body</code>.",0,null],[16,"Error","","The error type this <code>Body</code> might generate.",0,null],[10,"poll_data","","Attempt to pull out the next data buffer of this stream.",0,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[10,"poll_trailers","","Poll for an optional <strong>single</strong> <code>HeaderMap</code> of trailers.",0,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"is_end_stream","","Returns <code>true</code> when the end of stream has been reached.",0,[[],["bool",15]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",0,[[],["sizehint",3]]],[11,"data","","Returns future that resolves to next data chunk, if any.",0,[[],["data",3]]],[11,"trailers","","Returns future that resolves to trailers, if any.",0,[[],["trailers",3]]],[11,"map_data","","Maps this body\'s data value to a different value.",0,[[],["mapdata",3]]],[11,"map_err","","Maps this body\'s error value to a different value.",0,[[],["maperr",3]]],[11,"boxed","","Turn this body into a boxed trait object.",0,[[],["boxbody",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_future","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_future","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","http_body::combinators","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"poll_data","http_body","",1,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",1,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"is_end_stream","","",1,[[],["bool",15]]],[11,"size_hint","","",1,[[],["sizehint",3]]],[11,"poll_data","","",2,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[11,"poll_trailers","","",2,[[["pin",3],["context",3]],[["result",4],["poll",4]]]],[11,"is_end_stream","","",2,[[],["bool",15]]],[11,"size_hint","","",2,[[],["sizehint",3]]],[11,"poll_data","http_body::combinators","",6,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",6,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","",6,[[],["bool",15]]],[11,"size_hint","","",6,[[],["sizehint",3]]],[11,"poll_data","","",7,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",7,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","",7,[[],["bool",15]]],[11,"poll_data","","",8,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",8,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","",8,[[],["bool",15]]],[11,"size_hint","","",8,[[],["sizehint",3]]],[11,"from","http_body","",2,[[["bytes",3]]]],[11,"from","","",2,[[["vec",3],["u8",15]]]],[11,"from","","",2,[[]]],[11,"from","","",2,[[["cow",4]]]],[11,"from","","",2,[[["string",3]]]],[11,"from","","",2,[[["str",15]]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[],["full",3]]],[11,"clone","","",5,[[],["sizehint",3]]],[11,"clone","http_body::combinators","",7,[[],["mapdata",3]]],[11,"clone","","",8,[[],["maperr",3]]],[11,"default","http_body","",1,[[]]],[11,"default","","Create an empty <code>Full</code>.",2,[[]]],[11,"default","","",5,[[],["sizehint",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","http_body::combinators","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"poll","http_body","",3,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",4,[[["pin",3],["context",3]],["poll",4]]],[11,"new","","Create a new <code>Empty</code>.",1,[[]]],[11,"new","","Create a new <code>Full</code>.",2,[[]]],[11,"new","","Returns a new <code>SizeHint</code> with default values",5,[[],["sizehint",3]]],[11,"with_exact","","Returns a new <code>SizeHint</code> with both upper and lower bounds …",5,[[["u64",15]],["sizehint",3]]],[11,"lower","","Returns the lower bound of data that the <code>Body</code> will yield …",5,[[],["u64",15]]],[11,"set_lower","","Set the value of the <code>lower</code> hint.",5,[[["u64",15]]]],[11,"upper","","Returns the upper bound of data the <code>Body</code> will yield before…",5,[[],[["option",4],["u64",15]]]],[11,"set_upper","","Set the value of the <code>upper</code> hint value.",5,[[["u64",15]]]],[11,"exact","","Returns the exact size of data that will be yielded <strong>if</strong> the…",5,[[],[["option",4],["u64",15]]]],[11,"set_exact","","Set the value of the <code>lower</code> and <code>upper</code> bounds to exactly …",5,[[["u64",15]]]],[11,"new","http_body::combinators","Create a new <code>BoxBody</code>.",6,[[]]],[11,"get_ref","","Get a reference to the inner body",7,[[]]],[11,"get_mut","","Get a mutable reference to the inner body",7,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner body",7,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consume <code>self</code>, returning the inner body",7,[[]]],[11,"get_ref","","Get a reference to the inner body",8,[[]]],[11,"get_mut","","Get a mutable reference to the inner body",8,[[]]],[11,"get_pin_mut","","Get a pinned mutable reference to the inner body",8,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consume <code>self</code>, returning the inner body",8,[[]]]],"p":[[8,"Body"],[3,"Empty"],[3,"Full"],[3,"Data"],[3,"Trailers"],[3,"SizeHint"],[3,"BoxBody"],[3,"MapData"],[3,"MapErr"]]},\
"httparse":{"doc":"httparseA push library for parsing HTTP/1.x requests and …","i":[[4,"Error","httparse","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",0,null],[13,"HeaderValue","","Invalid byte in header value.",0,null],[13,"NewLine","","Invalid byte in new line.",0,null],[13,"Status","","Invalid byte in Response status.",0,null],[13,"Token","","Invalid byte where token is required.",0,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",0,null],[13,"Version","","Invalid byte in HTTP version.",0,null],[3,"InvalidChunkSize","","An error in parsing a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",1,null],[13,"Partial","","A partial result.",1,null],[11,"is_complete","","Convenience method to check if status is complete.",1,[[],["bool",15]]],[11,"is_partial","","Convenience method to check if status is partial.",1,[[],["bool",15]]],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if …",1,[[]]],[3,"ParserConfig","","Parser configuration.",null,null],[11,"allow_spaces_after_header_name_in_responses","","Sets whether spaces should be allowed after header name.",2,[[["bool",15]]]],[11,"parse_response","","Parses a response with the given config.",2,[[["response",3]],[["usize",15],["result",6]]]],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as <code>GET</code>.",3,null],[12,"path","","The request path, such as <code>/about-us</code>.",3,null],[12,"version","","The request version, such as <code>HTTP/1.1</code>.",3,null],[12,"headers","","The request headers.",3,null],[11,"new","","Creates a new Request, using a slice of headers you …",3,[[],["request",3]]],[11,"parse","","Try to parse a buffer of bytes into the Request.",3,[[],[["usize",15],["result",6]]]],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as <code>HTTP/1.1</code>.",4,null],[12,"code","","The response code, such as <code>200</code>.",4,null],[12,"reason","","The response reason-phrase, such as <code>OK</code>.",4,null],[12,"headers","","The response headers.",4,null],[11,"new","","Creates a new <code>Response</code> using a slice of <code>Header</code>s you have …",4,[[],["response",3]]],[11,"parse","","Try to parse a buffer of bytes into this <code>Response</code>.",4,[[],[["usize",15],["result",6]]]],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",5,null],[12,"value","","The value portion of a header.",5,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a <code>Header</code> array …",null,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,[[],["result",6]]],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,[[],[["status",4],["result",4],["invalidchunksize",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"clone","","",0,[[],["error",4]]],[11,"clone","","",1,[[],["status",4]]],[11,"clone","","",2,[[],["parserconfig",3]]],[11,"clone","","",5,[[],["header",3]]],[11,"default","","",2,[[],["parserconfig",3]]],[11,"eq","","",0,[[["error",4]],["bool",15]]],[11,"eq","","",6,[[["invalidchunksize",3]],["bool",15]]],[11,"eq","","",1,[[["status",4]],["bool",15]]],[11,"ne","","",1,[[["status",4]],["bool",15]]],[11,"eq","","",3,[[["request",3]],["bool",15]]],[11,"ne","","",3,[[["request",3]],["bool",15]]],[11,"eq","","",4,[[["response",3]],["bool",15]]],[11,"ne","","",4,[[["response",3]],["bool",15]]],[11,"eq","","",5,[[["header",3]],["bool",15]]],[11,"ne","","",5,[[["header",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"description","","",0,[[],["str",15]]]],"p":[[4,"Error"],[4,"Status"],[3,"ParserConfig"],[3,"Request"],[3,"Response"],[3,"Header"],[3,"InvalidChunkSize"]]},\
"httpdate":{"doc":"Date and time utils for HTTP.","i":[[3,"HttpDate","httpdate","HTTP timestamp type.",null,null],[3,"Error","","An opaque error type for all parsing errors.",null,null],[5,"parse_http_date","","Parse a date from an HTTP header field.",null,[[["str",15]],[["systemtime",3],["result",4],["error",3]]]],[5,"fmt_http_date","","Format a date to be used in a HTTP header field.",null,[[["systemtime",3]],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[["systemtime",3]],["httpdate",3]]],[11,"clone","","",0,[[],["httpdate",3]]],[11,"cmp","","",0,[[["httpdate",3]],["ordering",4]]],[11,"eq","","",0,[[["httpdate",3]],["bool",15]]],[11,"ne","","",0,[[["httpdate",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["httpdate",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",0,[[]]],[11,"from_str","","",0,[[["str",15]],[["httpdate",3],["error",3],["result",4]]]]],"p":[[3,"HttpDate"],[3,"Error"]]},\
"hyper":{"doc":"hyperhyper is a <strong>fast</strong> and <strong>correct</strong> HTTP implementation …","i":[[0,"body","hyper","Streaming bodies for Requests and Responses",null,null],[8,"Buf","hyper::body","Read bytes from a buffer.",null,null],[10,"remaining","","Returns the number of bytes between the current position …",0,[[],["usize",15]]],[10,"chunk","","Returns a slice starting at the current position and of …",0,[[]]],[11,"chunks_vectored","","Fills <code>dst</code> with potentially multiple slices starting at …",0,[[],["usize",15]]],[10,"advance","","Advance the internal cursor of the Buf",0,[[["usize",15]]]],[11,"has_remaining","","Returns true if there are any more bytes to consume",0,[[],["bool",15]]],[11,"copy_to_slice","","Copies bytes from <code>self</code> into <code>dst</code>.",0,[[]]],[11,"get_u8","","Gets an unsigned 8 bit integer from <code>self</code>.",0,[[],["u8",15]]],[11,"get_i8","","Gets a signed 8 bit integer from <code>self</code>.",0,[[],["i8",15]]],[11,"get_u16","","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …",0,[[],["u16",15]]],[11,"get_u16_le","","Gets an unsigned 16 bit integer from <code>self</code> in …",0,[[],["u16",15]]],[11,"get_i16","","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …",0,[[],["i16",15]]],[11,"get_i16_le","","Gets a signed 16 bit integer from <code>self</code> in little-endian …",0,[[],["i16",15]]],[11,"get_u32","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_u32_le","","Gets an unsigned 32 bit integer from <code>self</code> in the …",0,[[],["u32",15]]],[11,"get_i32","","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …",0,[[],["i32",15]]],[11,"get_i32_le","","Gets a signed 32 bit integer from <code>self</code> in little-endian …",0,[[],["i32",15]]],[11,"get_u64","","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …",0,[[],["u64",15]]],[11,"get_u64_le","","Gets an unsigned 64 bit integer from <code>self</code> in …",0,[[],["u64",15]]],[11,"get_i64","","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …",0,[[],["i64",15]]],[11,"get_i64_le","","Gets a signed 64 bit integer from <code>self</code> in little-endian …",0,[[],["i64",15]]],[11,"get_u128","","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …",0,[[],["u128",15]]],[11,"get_u128_le","","Gets an unsigned 128 bit integer from <code>self</code> in …",0,[[],["u128",15]]],[11,"get_i128","","Gets a signed 128 bit integer from <code>self</code> in big-endian …",0,[[],["i128",15]]],[11,"get_i128_le","","Gets a signed 128 bit integer from <code>self</code> in little-endian …",0,[[],["i128",15]]],[11,"get_uint","","Gets an unsigned n-byte integer from <code>self</code> in big-endian …",0,[[["usize",15]],["u64",15]]],[11,"get_uint_le","","Gets an unsigned n-byte integer from <code>self</code> in …",0,[[["usize",15]],["u64",15]]],[11,"get_int","","Gets a signed n-byte integer from <code>self</code> in big-endian byte …",0,[[["usize",15]],["i64",15]]],[11,"get_int_le","","Gets a signed n-byte integer from <code>self</code> in little-endian …",0,[[["usize",15]],["i64",15]]],[11,"get_f32","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f32_le","","Gets an IEEE754 single-precision (4 bytes) floating point …",0,[[],["f32",15]]],[11,"get_f64","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"get_f64_le","","Gets an IEEE754 double-precision (8 bytes) floating point …",0,[[],["f64",15]]],[11,"copy_to_bytes","","Consumes <code>len</code> bytes inside self and returns new instance …",0,[[["usize",15]],["bytes",3]]],[11,"take","","Creates an adaptor which will read at most <code>limit</code> bytes …",0,[[["usize",15]],["take",3]]],[11,"chain","","Creates an adaptor which will chain this buffer with …",0,[[],["chain",3]]],[11,"reader","","Creates an adaptor which implements the <code>Read</code> trait for …",0,[[],["reader",3]]],[3,"Bytes","","A cheaply cloneable and sliceable chunk of contiguous …",null,null],[8,"HttpBody","","Trait representing a streaming body of a Request or …",null,null],[16,"Data","","Values yielded by the <code>Body</code>.",1,null],[16,"Error","","The error type this <code>Body</code> might generate.",1,null],[10,"poll_data","","Attempt to pull out the next data buffer of this stream.",1,[[["pin",3],["context",3]],[["poll",4],["option",4]]]],[10,"poll_trailers","","Poll for an optional <strong>single</strong> <code>HeaderMap</code> of trailers.",1,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","Returns <code>true</code> when the end of stream has been reached.",1,[[],["bool",15]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",1,[[],["sizehint",3]]],[11,"data","","Returns future that resolves to next data chunk, if any.",1,[[],["data",3]]],[11,"trailers","","Returns future that resolves to trailers, if any.",1,[[],["trailers",3]]],[11,"map_data","","Maps this body\'s data value to a different value.",1,[[],["mapdata",3]]],[11,"map_err","","Maps this body\'s error value to a different value.",1,[[],["maperr",3]]],[11,"boxed","","Turn this body into a boxed trait object.",1,[[],["boxbody",3]]],[3,"SizeHint","","A <code>Body</code> size hint",null,null],[5,"aggregate","","Aggregate the data buffers from a body asynchronously.",null,[[]]],[3,"Body","","A stream of <code>Bytes</code>, used when receiving bodies.",null,null],[3,"Sender","","A sender half created through <code>Body::channel()</code>.",null,null],[5,"to_bytes","","Concatenate the buffers from a body into a single <code>Bytes</code> …",null,[[]]],[0,"rt","hyper","Runtime components",null,null],[8,"Executor","hyper::rt","An executor of futures.",null,null],[10,"execute","","Place the future into the executor to be run.",2,[[]]],[0,"service","hyper","Asynchronous Services",null,null],[8,"Service","hyper::service","An asynchronous function from a <code>Request</code> to a <code>Response</code>.",null,null],[16,"Response","","Responses given by the service.",3,null],[16,"Error","","Errors produced by the service.",3,null],[16,"Future","","The future response value.",3,null],[10,"poll_ready","","Returns <code>Poll::Ready(Ok(()))</code> when the service is able to …",3,[[["context",3]],[["poll",4],["result",4]]]],[10,"call","","Process the request and return the response …",3,[[]]],[5,"make_service_fn","","Create a <code>MakeService</code> from a function.",null,[[],["makeservicefn",3]]],[5,"service_fn","","Create a <code>Service</code> from a function.",null,[[],["servicefn",3]]],[0,"upgrade","hyper","HTTP Upgrades",null,null],[3,"Upgraded","hyper::upgrade","An upgraded HTTP connection.",null,null],[3,"OnUpgrade","","A future for a possible HTTP upgrade.",null,null],[3,"Parts","","The deconstructed parts of an <code>Upgraded</code> type.",null,null],[12,"io","","The original IO object used before the upgrade.",4,null],[12,"read_buf","","A buffer of bytes that have been read but not processed …",4,null],[5,"on","","Gets a pending HTTP upgrade from this message.",null,[[["canupgrade",8]],["onupgrade",3]]],[11,"downcast","","Tries to downcast the internal trait object to the type …",5,[[],[["parts",3],["result",4]]]],[0,"client","hyper","HTTP Client",null,null],[0,"connect","hyper::client","Connectors used by the <code>Client</code>.",null,null],[0,"dns","hyper::client::connect","DNS Resolution used by the <code>HttpConnector</code>.",null,null],[3,"Name","hyper::client::connect::dns","A domain name to resolve into IP addresses.",null,null],[3,"GaiResolver","","A resolver using blocking <code>getaddrinfo</code> calls in a …",null,null],[3,"GaiAddrs","","An iterator of IP addresses returned from <code>getaddrinfo</code>.",null,null],[3,"GaiFuture","","A future to resolve a name returned by <code>GaiResolver</code>.",null,null],[11,"as_str","","View the hostname as a string slice.",6,[[],["str",15]]],[3,"InvalidNameError","","Error indicating a given string was not a valid domain …",null,null],[11,"new","","Construct a new <code>GaiResolver</code>.",7,[[]]],[3,"HttpConnector","hyper::client::connect","A connector for the <code>http</code> scheme.",null,null],[3,"HttpInfo","","Extra information about the transport when an …",null,null],[8,"Connect","","Connect to a destination, returning an IO transport.",null,null],[8,"Connection","","Describes a type returned by a connector.",null,null],[10,"connected","","Return metadata describing the connection.",8,[[],["connected",3]]],[3,"Connected","","Extra information about the connected transport.",null,null],[11,"new","","Create new <code>Connected</code> type with empty metadata.",9,[[],["connected",3]]],[11,"proxy","","Set whether the connected transport is to an HTTP proxy.",9,[[["bool",15]],["connected",3]]],[11,"is_proxied","","Determines if the connected transport is to an HTTP proxy.",9,[[],["bool",15]]],[11,"extra","","Set extra connection information to be set in the …",9,[[["sync",8],["clone",8],["send",8]],["connected",3]]],[11,"get_extras","","Copies the extra connection information into an <code>Extensions</code>…",9,[[["extensions",3]]]],[11,"negotiated_h2","","Set that the connected transport negotiated HTTP/2 as its …",9,[[],["connected",3]]],[11,"is_negotiated_h2","","Determines if the connected transport negotiated HTTP/2 …",9,[[],["bool",15]]],[0,"conn","hyper::client","Lower-level client connection API.",null,null],[5,"handshake","hyper::client::conn","Returns a handshake future over some IO.",null,[[]]],[3,"SendRequest","","The sender side of an established connection.",null,null],[3,"Connection","","A future that processes all HTTP state for the IO object.",null,null],[3,"Builder","","A builder to configure an HTTP connection.",null,null],[3,"ResponseFuture","","A future returned by <code>SendRequest::send_request</code>.",null,null],[3,"Parts","","Deconstructed parts of a <code>Connection</code>.",null,null],[12,"io","","The original IO object used in the handshake.",10,null],[12,"read_buf","","A buffer of bytes that have been read but not processed …",10,null],[11,"poll_ready","","Polls to determine whether this sender can be used yet …",11,[[["context",3]],[["result",6],["poll",4]]]],[11,"send_request","","Sends a <code>Request</code> on the associated connection.",11,[[["request",3]],["responsefuture",3]]],[11,"into_parts","","Return the inner IO object, and additional information.",12,[[],["parts",3]]],[11,"poll_without_shutdown","","Poll the connection for completion, but without calling …",12,[[["context",3]],[["result",6],["poll",4]]]],[11,"without_shutdown","","Prevent shutdown of the underlying IO object at the end …",12,[[]]],[11,"new","","Creates a new connection builder.",13,[[],["builder",3]]],[11,"executor","","Provide an executor to execute background HTTP2 tasks.",13,[[],["builder",3]]],[11,"http2_only","","Sets whether HTTP2 is required.",13,[[["bool",15]],["builder",3]]],[11,"http2_initial_stream_window_size","","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …",13,[[]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",13,[[]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",13,[[["bool",15]]]],[11,"http2_max_frame_size","","Sets the maximum frame size to use for HTTP2.",13,[[]]],[11,"http2_keep_alive_interval","","Sets an interval for HTTP2 Ping frames should be sent to …",13,[[]]],[11,"http2_keep_alive_timeout","","Sets a timeout for receiving an acknowledgement of the …",13,[[["duration",3]]]],[11,"http2_keep_alive_while_idle","","Sets whether HTTP2 keep-alive should apply while the …",13,[[["bool",15]]]],[11,"handshake","","Constructs a connection with the configured options and …",13,[[]]],[0,"service","hyper::client","Utilities used to interact with the Tower ecosystem.",null,null],[3,"Connect","hyper::client::service","Creates a connection via <code>SendRequest</code>.",null,null],[11,"new","","Create a new <code>Connect</code> with some inner connector <code>C</code> and a …",14,[[["builder",3]]]],[3,"HttpConnector","hyper::client","A connector for the <code>http</code> scheme.",null,null],[3,"Builder","","A builder to configure a new <code>Client</code>.",null,null],[3,"Client","","A Client to make outgoing HTTP requests.",null,null],[3,"ResponseFuture","","A <code>Future</code> that will resolve to an HTTP Response.",null,null],[0,"header","hyper","HTTP header types",null,null],[8,"AsHeaderName","hyper::header","A marker trait used to identify values that can be used …",null,null],[3,"Drain","","A drain iterator for <code>HeaderMap</code>.",null,null],[4,"Entry","","A view into a single location in a <code>HeaderMap</code>, which may …",null,null],[13,"Occupied","","An occupied entry",15,null],[13,"Vacant","","A vacant entry",15,null],[3,"GetAll","","A view to all values stored in a single entry.",null,null],[3,"HeaderMap","","A set of HTTP headers",null,null],[8,"IntoHeaderName","","A marker trait used to identify values that can be used …",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HeaderMap</code>.",null,null],[3,"Iter","","<code>HeaderMap</code> entry iterator.",null,null],[3,"IterMut","","<code>HeaderMap</code> mutable entry iterator",null,null],[3,"Keys","","An iterator over <code>HeaderMap</code> keys.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a <code>HeaderMap</code>.",null,null],[3,"VacantEntry","","A view into a single empty location in a <code>HeaderMap</code>.",null,null],[3,"ValueDrain","","An drain iterator of all values associated with a single …",null,null],[3,"ValueIter","","An iterator of all values associated with a single header …",null,null],[3,"ValueIterMut","","A mutable iterator of all values associated with a single …",null,null],[3,"Values","","<code>HeaderMap</code> value iterator.",null,null],[3,"ValuesMut","","<code>HeaderMap</code> mutable value iterator",null,null],[3,"HeaderName","","Represents an HTTP header field name",null,null],[3,"InvalidHeaderName","","A possible error when converting a <code>HeaderName</code> from …",null,null],[3,"HeaderValue","","Represents an HTTP header field value.",null,null],[3,"InvalidHeaderValue","","A possible error when converting a <code>HeaderValue</code> from a …",null,null],[3,"ToStrError","","A possible error when converting a <code>HeaderValue</code> to a …",null,null],[17,"ACCEPT","","Advertises which content types the client is able to …",null,null],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to …",null,null],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to …",null,null],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to …",null,null],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request …",null,null],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the …",null,null],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",null,null],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access …",null,null],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with …",null,null],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the …",null,null],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can …",null,null],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when …",null,null],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used …",null,null],[17,"AGE","","Indicates the time in seconds the object has been in a …",null,null],[17,"ALLOW","","Lists the set of methods support by a resource.",null,null],[17,"ALT_SVC","","Advertises the availability of alternate services to …",null,null],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent …",null,null],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both …",null,null],[17,"CONNECTION","","Controls whether or not the network connection stays open …",null,null],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed …",null,null],[17,"CONTENT_ENCODING","","Used to compress the media-type.",null,null],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",null,null],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",null,null],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",null,null],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message …",null,null],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to …",null,null],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their …",null,null],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",null,null],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the …",null,null],[17,"DNT","","Indicates the client\'s tracking preference.",null,null],[17,"DATE","","Contains the date and time at which the message was …",null,null],[17,"ETAG","","Identifier for a specific version of a resource.",null,null],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the …",null,null],[17,"EXPIRES","","Contains the date/time after which the response is …",null,null],[17,"FORWARDED","","Contains information from the client-facing side of proxy …",null,null],[17,"FROM","","Contains an Internet email address for a human user who …",null,null],[17,"HOST","","Specifies the domain name of the server and (optionally) …",null,null],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification …",null,null],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_RANGE","","Makes a request conditional based on range.",null,null],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last …",null,null],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",null,null],[17,"LINK","","Allows the server to point an interested client to …",null,null],[17,"LOCATION","","Indicates the URL to redirect a page to.",null,null],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request …",null,null],[17,"ORIGIN","","Indicates where a fetch originates from.",null,null],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",null,null],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to …",null,null],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to …",null,null],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a …",null,null],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri …",null,null],[17,"RANGE","","Indicates the part of a document that the server should …",null,null],[17,"REFERER","","Contains the address of the previous web page from which …",null,null],[17,"REFERRER_POLICY","","Governs which referrer information should be included …",null,null],[17,"REFRESH","","Informs the web browser that the current page or frame …",null,null],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long …",null,null],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in …",null,null],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the …",null,null],[17,"SERVER","","Contains information about the software used by the …",null,null],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",null,null],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of …",null,null],[17,"TE","","Informs the server of transfer encodings willing to be …",null,null],[17,"TRAILER","","Allows the sender to include additional fields at the end …",null,null],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer …",null,null],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",null,null],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s …",null,null],[17,"USER_AGENT","","Contains a string that allows identifying the requesting …",null,null],[17,"VARY","","Determines how to match future requests with cached …",null,null],[17,"VIA","","Added by proxies to track routing.",null,null],[17,"WARNING","","General HTTP header contains information about possible …",null,null],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to …",null,null],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types …",null,null],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",null,null],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to …",null,null],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",null,null],[3,"HeaderMap","hyper","A set of HTTP headers",null,null],[3,"Method","","The Request Method (VERB)",null,null],[3,"Request","","Represents an HTTP request.",null,null],[3,"Response","","Represents an HTTP response",null,null],[3,"StatusCode","","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).",null,null],[3,"Uri","","The URI component of a request.",null,null],[3,"Version","","Represents a version of the HTTP spec.",null,null],[3,"Body","","A stream of <code>Bytes</code>, used when receiving bodies.",null,null],[3,"Error","","Represents errors that can occur handling HTTP streams.",null,null],[6,"Result","","Result type often returned from methods that can have …",null,null],[11,"from","hyper::body","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[],["bool",15]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","hyper","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","hyper::upgrade","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_future","","",21,[[]]],[11,"try_poll","","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","hyper::client::connect::dns","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_future","","",23,[[]]],[11,"try_poll","","",23,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","hyper::client::connect","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","hyper::client","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_future","","",28,[[]]],[11,"try_poll","","",28,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","hyper::client::conn","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_future","","",12,[[]]],[11,"try_poll","","",12,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_future","","",30,[[]]],[11,"try_poll","","",30,[[["pin",3],["context",3]],["poll",4]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","hyper::client::service","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","hyper::header","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","hyper","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[],["bool",15]]],[11,"from","hyper::header","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"into_iter","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"into_iter","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"into_iter","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","hyper","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"equivalent","","",50,[[],["bool",15]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[],["bool",15]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"equivalent","","",54,[[],["bool",15]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"equivalent","","",55,[[],["bool",15]]],[11,"borrow","hyper::header","",45,[[],["str",15]]],[11,"try_from","hyper","",33,[[["hashmap",3]],[["headermap",3],["result",4]]]],[11,"try_from","hyper::header","",45,[[],[["result",4],["headername",3]]]],[11,"try_from","","",47,[[["string",3]],[["result",4],["headervalue",3]]]],[11,"try_from","","",47,[[["str",15]],[["result",4],["headervalue",3]]]],[11,"try_from","hyper","",50,[[],[["result",4],["method",3]]]],[11,"try_from","hyper::header","",45,[[["string",3]],[["result",4],["headername",3]]]],[11,"try_from","hyper","",53,[[],[["result",4],["statuscode",3]]]],[11,"try_from","","",53,[[["str",15]],[["statuscode",3],["result",4]]]],[11,"try_from","","",50,[[["str",15]],[["method",3],["result",4]]]],[11,"try_from","hyper::header","",45,[[["str",15]],[["headername",3],["result",4]]]],[11,"try_from","hyper","",54,[[["parts",3]],[["uri",3],["result",4]]]],[11,"try_from","","",54,[[["string",3]],[["uri",3],["result",4]]]],[11,"try_from","","",54,[[["uri",3]],[["uri",3],["result",4]]]],[11,"try_from","","",54,[[["str",15]],[["result",4],["uri",3]]]],[11,"try_from","hyper::header","",47,[[["vec",3],["u8",15],["global",3]],[["headervalue",3],["result",4]]]],[11,"try_from","hyper","",54,[[],[["uri",3],["result",4]]]],[11,"try_from","hyper::header","",47,[[["string",3]],[["result",4],["headervalue",3]]]],[11,"try_from","","",47,[[],[["result",4],["headervalue",3]]]],[11,"try_from","hyper","",54,[[["string",3]],[["uri",3],["result",4]]]],[11,"try_from","","",53,[[["u16",15]],[["statuscode",3],["result",4]]]],[11,"fmt","hyper::header","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","hyper::header","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",45,[[]]],[11,"hash","hyper","",54,[[]]],[11,"hash","","",53,[[]]],[11,"hash","hyper::header","",47,[[]]],[11,"hash","hyper","",55,[[]]],[11,"hash","","",50,[[]]],[11,"index","","PanicsUsing the index operator will cause a panic if the …",33,[[]]],[11,"partial_cmp","hyper::header","",47,[[["str",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",47,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",47,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","hyper","",55,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["version",3]],["bool",15]]],[11,"le","","",55,[[["version",3]],["bool",15]]],[11,"gt","","",55,[[["version",3]],["bool",15]]],[11,"ge","","",55,[[["version",3]],["bool",15]]],[11,"partial_cmp","","",53,[[["statuscode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",53,[[["statuscode",3]],["bool",15]]],[11,"le","","",53,[[["statuscode",3]],["bool",15]]],[11,"gt","","",53,[[["statuscode",3]],["bool",15]]],[11,"ge","","",53,[[["statuscode",3]],["bool",15]]],[11,"partial_cmp","hyper::header","",47,[[["headervalue",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",47,[[["string",3]],[["option",4],["ordering",4]]]],[11,"from","","",47,[[["i16",15]],["headervalue",3]]],[11,"from","","",47,[[["u16",15]],["headervalue",3]]],[11,"from","","",47,[[["i64",15]],["headervalue",3]]],[11,"from","","",47,[[["usize",15]],["headervalue",3]]],[11,"from","hyper","",53,[[["statuscode",3]],["statuscode",3]]],[11,"from","hyper::body","",18,[[["custom",3]],["bytes",3]]],[11,"from","hyper","",50,[[["method",3]],["method",3]]],[11,"from","hyper::header","",47,[[["headername",3]],["headervalue",3]]],[11,"from","","",47,[[["u64",15]],["headervalue",3]]],[11,"from","hyper::body","",18,[[["bytestr",3]],["bytes",3]]],[11,"from","hyper::header","",45,[[["headername",3]],["headername",3]]],[11,"from","","",47,[[["headervalue",3]],["headervalue",3]]],[11,"from","","",47,[[["i32",15]],["headervalue",3]]],[11,"from","","",47,[[["u32",15]],["headervalue",3]]],[11,"from","","",47,[[["isize",15]],["headervalue",3]]],[11,"as_ref","hyper","",50,[[],["str",15]]],[11,"as_ref","hyper::header","",45,[[]]],[11,"as_ref","","",47,[[]]],[11,"as_ref","","",45,[[],["str",15]]],[11,"into_iter","hyper","Creates a consuming iterator, that is, one that moves …",33,[[],["intoiter",3]]],[11,"into_iter","hyper::header","",32,[[],["valueiter",3]]],[11,"into_iter","","",38,[[],["valueitermut",3]]],[11,"default","hyper","",51,[[],["request",3]]],[11,"default","","",52,[[],["response",3]]],[11,"default","","",54,[[],["uri",3]]],[11,"default","","",33,[[],["headermap",3]]],[11,"default","","",50,[[],["method",3]]],[11,"default","","",53,[[],["statuscode",3]]],[11,"default","","",55,[[],["version",3]]],[11,"clone","","",53,[[],["statuscode",3]]],[11,"clone","hyper::header","",47,[[],["headervalue",3]]],[11,"clone","","",45,[[],["headername",3]]],[11,"clone","hyper","",33,[[],["headermap",3]]],[11,"clone","","",55,[[],["version",3]]],[11,"clone","","",54,[[],["uri",3]]],[11,"clone","","",50,[[],["method",3]]],[11,"from_iter","","",33,[[],["headermap",3]]],[11,"cmp","","",55,[[["version",3]],["ordering",4]]],[11,"cmp","","",53,[[["statuscode",3]],["ordering",4]]],[11,"cmp","hyper::header","",47,[[["headervalue",3]],["ordering",4]]],[11,"from_str","","",47,[[["str",15]],[["result",4],["headervalue",3]]]],[11,"from_str","hyper","",53,[[["str",15]],[["statuscode",3],["invalidstatuscode",3],["result",4]]]],[11,"from_str","","",54,[[["str",15]],[["uri",3],["result",4],["invaliduri",3]]]],[11,"from_str","","",50,[[["str",15]],[["method",3],["result",4]]]],[11,"from_str","hyper::header","",45,[[["str",15]],[["invalidheadername",3],["result",4],["headername",3]]]],[11,"extend","hyper","",33,[[]]],[11,"extend","","Extend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.",33,[[]]],[11,"next","hyper::header","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","","",43,[[],["option",4]]],[11,"size_hint","","",43,[[]]],[11,"next","","",40,[[],["option",4]]],[11,"size_hint","","",40,[[]]],[11,"next","","",35,[[],["option",4]]],[11,"size_hint","","",35,[[]]],[11,"next","","",44,[[],["option",4]]],[11,"size_hint","","",44,[[]]],[11,"next","","",36,[[],["option",4]]],[11,"size_hint","","",36,[[]]],[11,"next","","",37,[[],["option",4]]],[11,"size_hint","","",37,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"next","","",41,[[],["option",4]]],[11,"size_hint","","",41,[[]]],[11,"next","","",42,[[],["option",4]]],[11,"next_back","","",41,[[],["option",4]]],[11,"next_back","","",42,[[],["option",4]]],[11,"drop","","",40,[[]]],[11,"drop","","",34,[[]]],[11,"drop","","",31,[[]]],[11,"eq","","",45,[[["headername",3]],["bool",15]]],[11,"ne","","",45,[[["headername",3]],["bool",15]]],[11,"eq","","",47,[[],["bool",15]]],[11,"eq","","",45,[[["headername",3]],["bool",15]]],[11,"eq","hyper","",53,[[["statuscode",3]],["bool",15]]],[11,"ne","","",53,[[["statuscode",3]],["bool",15]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string …",45,[[["str",15]],["bool",15]]],[11,"eq","hyper","",33,[[["headermap",3]],["bool",15]]],[11,"eq","hyper::header","",47,[[["str",15]],["bool",15]]],[11,"eq","hyper","",50,[[["method",3]],["bool",15]]],[11,"ne","","",50,[[["method",3]],["bool",15]]],[11,"eq","hyper::header","",32,[[["getall",3]],["bool",15]]],[11,"eq","","",47,[[["headervalue",3]],["bool",15]]],[11,"eq","hyper","",55,[[["version",3]],["bool",15]]],[11,"ne","","",55,[[["version",3]],["bool",15]]],[11,"eq","hyper::header","",47,[[],["bool",15]]],[11,"eq","hyper","",54,[[["str",15]],["bool",15]]],[11,"eq","","",50,[[["str",15]],["bool",15]]],[11,"eq","","",54,[[["uri",3]],["bool",15]]],[11,"eq","hyper::header","",47,[[["string",3]],["bool",15]]],[11,"eq","hyper","",50,[[["method",3]],["bool",15]]],[11,"eq","","",50,[[["str",15]],["bool",15]]],[11,"eq","","",53,[[["u16",15]],["bool",15]]],[11,"eq","","",54,[[["str",15]],["bool",15]]],[11,"eq","hyper::header","Performs a case-insensitive comparison of the string …",45,[[["str",15]],["bool",15]]],[11,"clone","hyper::body","",18,[[],["bytes",3]]],[11,"deref","","",18,[[]]],[11,"as_ref","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"remaining","","",18,[[],["usize",15]]],[11,"chunk","","",18,[[]]],[11,"advance","","",18,[[["usize",15]]]],[11,"copy_to_bytes","","",18,[[["usize",15]],["bytes",3]]],[11,"borrow","","",18,[[]]],[11,"eq","","",18,[[],["bool",15]]],[11,"eq","","",18,[[["bytesmut",3]],["bool",15]]],[11,"eq","","",18,[[["str",15]],["bool",15]]],[11,"eq","","",18,[[["vec",3]],["bool",15]]],[11,"eq","","",18,[[["bytes",3]],["bool",15]]],[11,"eq","","",18,[[["string",3]],["bool",15]]],[11,"eq","","",18,[[],["bool",15]]],[11,"default","","",18,[[],["bytes",3]]],[11,"from_iter","","",18,[[],["bytes",3]]],[11,"into_iter","","",18,[[]]],[11,"from","","",18,[[["str",15]],["bytes",3]]],[11,"from","","",18,[[["vec",3],["u8",15],["global",3]],["bytes",3]]],[11,"from","","",18,[[],["bytes",3]]],[11,"from","","",18,[[["bytesmut",3]],["bytes",3]]],[11,"from","","",18,[[["string",3]],["bytes",3]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",18,[[["bytes",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[["string",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[["str",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",18,[[],[["option",4],["ordering",4]]]],[11,"hash","","",18,[[]]],[11,"cmp","","",18,[[["bytes",3]],["ordering",4]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",19,[[],["sizehint",3]]],[11,"clone","","",19,[[],["sizehint",3]]],[11,"poll_data","hyper","",52,[[["pin",3],["response",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",52,[[["pin",3],["response",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","",52,[[],["bool",15]]],[11,"size_hint","","",52,[[],["sizehint",3]]],[11,"poll_data","","",51,[[["pin",3],["context",3],["request",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",51,[[["pin",3],["context",3],["request",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","",51,[[],["bool",15]]],[11,"size_hint","","",51,[[],["sizehint",3]]],[11,"from","hyper::body","",16,[[["bytes",3]],["body",3]]],[11,"from","","",16,[[["vec",3],["u8",15]],["body",3]]],[11,"from","","",16,[[],["body",3]]],[11,"from","","",16,[[["cow",4]],["body",3]]],[11,"from","","",16,[[["string",3]],["body",3]]],[11,"from","","",16,[[["str",15]],["body",3]]],[11,"from","","",16,[[["str",15],["cow",4]],["body",3]]],[11,"next","hyper::client::connect::dns","",22,[[],["option",4]]],[11,"clone","","",6,[[],["name",3]]],[11,"clone","","",7,[[],["gairesolver",3]]],[11,"clone","hyper::client::connect","",25,[[],["httpconnector",3]]],[11,"clone","","",26,[[],["httpinfo",3]]],[11,"clone","hyper::client","",27,[[],["client",3]]],[11,"clone","","",29,[[],["builder",3]]],[11,"clone","hyper::client::conn","",13,[[],["builder",3]]],[11,"default","hyper::body","Returns <code>Body::empty()</code>.",16,[[],["body",3]]],[11,"default","hyper::client","",27,[[],[["client",3],["httpconnector",3],["body",3]]]],[11,"default","","",29,[[]]],[11,"eq","hyper::client::connect::dns","",6,[[["name",3]],["bool",15]]],[11,"ne","","",6,[[["name",3]],["bool",15]]],[11,"fmt","hyper::body","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","hyper","",20,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::upgrade","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::client::connect::dns","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::client::connect","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::client","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::client::conn","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::client::service","",14,[[["formatter",3]],["result",6]]],[11,"fmt","hyper","",20,[[["formatter",3]],["result",6]]],[11,"fmt","hyper::client::connect::dns","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"hash","","",6,[[]]],[11,"from_str","","",6,[[["str",15]],["result",4]]],[11,"source","hyper","",20,[[],[["option",4],["stderror",8]]]],[11,"poll","hyper::upgrade","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","hyper::client::connect::dns","",23,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","hyper::client","",28,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","hyper::client::conn","",12,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",30,[[["pin",3],["context",3]],["poll",4]]],[11,"poll_read","hyper::upgrade","",5,[[["pin",3],["context",3],["readbuf",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",5,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_vectored","","",5,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",5,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",5,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",5,[[],["bool",15]]],[11,"poll_data","hyper::body","",16,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_trailers","","",16,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_end_stream","","",16,[[],["bool",15]]],[11,"size_hint","","",16,[[],["sizehint",3]]],[11,"poll_ready","hyper::client::connect::dns","",7,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",7,[[["name",3]]]],[11,"poll_ready","hyper::client::connect","",25,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",25,[[["uri",3]]]],[11,"poll_ready","hyper::client","",27,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",27,[[["request",3]]]],[11,"poll_ready","hyper::client::conn","",11,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",11,[[["request",3]]]],[11,"poll_ready","hyper::client::service","",14,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",14,[[]]],[11,"empty","hyper::body","Create an empty <code>Body</code> stream.",16,[[],["body",3]]],[11,"channel","","Create a <code>Body</code> stream with an associated sender half.",16,[[]]],[11,"poll_ready","","Check to see if this <code>Sender</code> can send more data.",17,[[["context",3]],[["result",6],["poll",4]]]],[11,"send_data","","Send data on data channel when it is ready.",17,[[["bytes",3]]]],[11,"send_trailers","","Send trailers on trailers channel.",17,[[["headermap",3]]]],[11,"try_send_data","","Try to send data on this channel.",17,[[["bytes",3]],[["bytes",3],["result",4]]]],[11,"abort","","Aborts the body in an abnormal fashion.",17,[[]]],[11,"new","","Creates a new empty <code>Bytes</code>.",18,[[],["bytes",3]]],[11,"from_static","","Creates a new <code>Bytes</code> from a static slice.",18,[[],["bytes",3]]],[11,"len","","Returns the number of bytes contained in this <code>Bytes</code>.",18,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>Bytes</code> has a length of 0.",18,[[],["bool",15]]],[11,"copy_from_slice","","Creates <code>Bytes</code> instance from slice, by copying it.",18,[[],["bytes",3]]],[11,"slice","","Returns a slice of self for the provided range.",18,[[],["bytes",3]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given …",18,[[],["bytes",3]]],[11,"split_off","","Splits the bytes into two at the given index.",18,[[["usize",15]],["bytes",3]]],[11,"split_to","","Splits the bytes into two at the given index.",18,[[["usize",15]],["bytes",3]]],[11,"truncate","","Shortens the buffer, keeping the first <code>len</code> bytes and …",18,[[["usize",15]]]],[11,"clear","","Clears the buffer, removing all data.",18,[[]]],[11,"new","","Returns a new <code>SizeHint</code> with default values",19,[[],["sizehint",3]]],[11,"with_exact","","Returns a new <code>SizeHint</code> with both upper and lower bounds …",19,[[["u64",15]],["sizehint",3]]],[11,"lower","","Returns the lower bound of data that the <code>Body</code> will yield …",19,[[],["u64",15]]],[11,"set_lower","","Set the value of the <code>lower</code> hint.",19,[[["u64",15]]]],[11,"upper","","Returns the upper bound of data the <code>Body</code> will yield before…",19,[[],[["option",4],["u64",15]]]],[11,"set_upper","","Set the value of the <code>upper</code> hint value.",19,[[["u64",15]]]],[11,"exact","","Returns the exact size of data that will be yielded <strong>if</strong> the…",19,[[],[["option",4],["u64",15]]]],[11,"set_exact","","Set the value of the <code>lower</code> and <code>upper</code> bounds to exactly …",19,[[["u64",15]]]],[11,"is_parse","hyper","Returns true if this was an HTTP parse error.",20,[[],["bool",15]]],[11,"is_user","","Returns true if this error was caused by user code.",20,[[],["bool",15]]],[11,"is_canceled","","Returns true if this was about a <code>Request</code> that was …",20,[[],["bool",15]]],[11,"is_closed","","Returns true if a sender\'s channel is closed.",20,[[],["bool",15]]],[11,"is_connect","","Returns true if this was an error from <code>Connect</code>.",20,[[],["bool",15]]],[11,"is_incomplete_message","","Returns true if the connection closed before a message …",20,[[],["bool",15]]],[11,"is_body_write_aborted","","Returns true if the body write was aborted.",20,[[],["bool",15]]],[11,"is_timeout","","Returns true if the error was caused by a timeout.",20,[[],["bool",15]]],[11,"into_cause","","Consumes the error, returning its cause.",20,[[],[["box",3],["option",4]]]],[11,"new","hyper::client::connect","Construct a new HttpConnector.",25,[[],["httpconnector",3]]],[11,"new_with_resolver","","Construct a new HttpConnector.",25,[[],["httpconnector",3]]],[11,"enforce_http","","Option to enforce all <code>Uri</code>s have the <code>http</code> scheme.",25,[[["bool",15]]]],[11,"set_keepalive","","Set that all sockets have <code>SO_KEEPALIVE</code> set with the …",25,[[["duration",3],["option",4]]]],[11,"set_nodelay","","Set that all sockets have <code>SO_NODELAY</code> set to the supplied …",25,[[["bool",15]]]],[11,"set_send_buffer_size","","Sets the value of the SO_SNDBUF option on the socket.",25,[[["usize",15],["option",4]]]],[11,"set_recv_buffer_size","","Sets the value of the SO_RCVBUF option on the socket.",25,[[["usize",15],["option",4]]]],[11,"set_local_address","","Set that all sockets are bound to the configured address …",25,[[["option",4],["ipaddr",4]]]],[11,"set_local_addresses","","Set that all sockets are bound to the configured IPv4 or …",25,[[["ipv4addr",3],["ipv6addr",3]]]],[11,"set_connect_timeout","","Set the connect timeout.",25,[[["duration",3],["option",4]]]],[11,"set_happy_eyeballs_timeout","","Set timeout for RFC 6555 (Happy Eyeballs) algorithm.",25,[[["duration",3],["option",4]]]],[11,"set_reuse_address","","Set that all socket have <code>SO_REUSEADDR</code> set to the supplied …",25,[[["bool",15]]]],[11,"remote_addr","","Get the remote address of the transport used.",26,[[],["socketaddr",4]]],[11,"new","hyper::client","Create a new Client with the default config.",27,[[],[["client",3],["httpconnector",3],["body",3]]]],[11,"builder","","Create a builder to configure a new <code>Client</code>.",27,[[],["builder",3]]],[11,"get","","Send a <code>GET</code> request to the supplied <code>Uri</code>.",27,[[["uri",3]],["responsefuture",3]]],[11,"request","","Send a constructed <code>Request</code> using this <code>Client</code>.",27,[[["request",3]],["responsefuture",3]]],[11,"pool_idle_timeout","","Set an optional timeout for idle sockets being kept-alive.",29,[[]]],[11,"pool_max_idle_per_host","","Sets the maximum idle connection per host allowed in the …",29,[[["usize",15]]]],[11,"http1_read_buf_exact_size","","Sets the exact size of the read buffer to <em>always</em> use.",29,[[["usize",15]]]],[11,"http1_max_buf_size","","Set the maximum buffer size for the connection.",29,[[["usize",15]]]],[11,"http1_allow_spaces_after_header_name_in_responses","","Set whether HTTP/1 connections will accept spaces between …",29,[[["bool",15]]]],[11,"http1_title_case_headers","","Set whether HTTP/1 connections will write header names as …",29,[[["bool",15]]]],[11,"http1_preserve_header_case","","Set whether HTTP/1 connections will write header names as …",29,[[["bool",15]]]],[11,"http09_responses","","Set whether HTTP/0.9 responses should be tolerated.",29,[[["bool",15]]]],[11,"http2_only","","Set whether the connection <strong>must</strong> use HTTP/2.",29,[[["bool",15]]]],[11,"http2_initial_stream_window_size","","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …",29,[[]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",29,[[]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",29,[[["bool",15]]]],[11,"http2_max_frame_size","","Sets the maximum frame size to use for HTTP2.",29,[[]]],[11,"http2_keep_alive_interval","","Sets an interval for HTTP2 Ping frames should be sent to …",29,[[]]],[11,"http2_keep_alive_timeout","","Sets a timeout for receiving an acknowledgement of the …",29,[[["duration",3]]]],[11,"http2_keep_alive_while_idle","","Sets whether HTTP2 keep-alive should apply while the …",29,[[["bool",15]]]],[11,"retry_canceled_requests","","Set whether to retry requests that get disrupted before …",29,[[["bool",15]]]],[11,"set_host","","Set whether to automatically add the <code>Host</code> header to …",29,[[["bool",15]]]],[11,"executor","","Provide an executor to execute background <code>Connection</code> …",29,[[]]],[11,"build_http","","Builder a client with this configuration and the default …",29,[[],[["client",3],["httpconnector",3]]]],[11,"build","","Combine the configuration of this builder with a …",29,[[],["client",3]]],[11,"or_insert","hyper::header","Ensures a value is in the entry by inserting the default …",15,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",15,[[]]],[11,"key","","Returns a reference to the entry\'s key",15,[[],["headername",3]]],[11,"iter","","Returns an iterator visiting all values associated with …",32,[[],["valueiter",3]]],[11,"new","hyper","Create an empty <code>HeaderMap</code>.",33,[[],[["headermap",3],["headervalue",3]]]],[11,"with_capacity","","Create an empty <code>HeaderMap</code> with the specified capacity.",33,[[["usize",15]],["headermap",3]]],[11,"len","","Returns the number of headers stored in the map.",33,[[],["usize",15]]],[11,"keys_len","","Returns the number of keys stored in the map.",33,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",33,[[],["bool",15]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",33,[[]]],[11,"capacity","","Returns the number of headers the map can hold without …",33,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more headers to …",33,[[["usize",15]]]],[11,"get","","Returns a reference to the value associated with the key.",33,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the value associated with …",33,[[],["option",4]]],[11,"get_all","","Returns a view of all values associated with a key.",33,[[],["getall",3]]],[11,"contains_key","","Returns true if the map contains a value for the …",33,[[],["bool",15]]],[11,"iter","","An iterator visiting all key-value pairs.",33,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable …",33,[[],["itermut",3]]],[11,"keys","","An iterator visiting all keys.",33,[[],["keys",3]]],[11,"values","","An iterator visiting all values.",33,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably.",33,[[],["valuesmut",3]]],[11,"drain","","Clears the map, returning all entries as an iterator.",33,[[],["drain",3]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",33,[[],["entry",4]]],[11,"try_entry","","Gets the given key\'s corresponding entry in the map for …",33,[[],[["result",4],["entry",4],["invalidheadername",3]]]],[11,"insert","","Inserts a key-value pair into the map.",33,[[],["option",4]]],[11,"append","","Inserts a key-value pair into the map.",33,[[],["bool",15]]],[11,"remove","","Removes a key from the map, returning the value …",33,[[],["option",4]]],[11,"key","hyper::header","Returns a reference to the entry\'s key.",38,[[],["headername",3]]],[11,"get","","Get a reference to the first value in the entry.",38,[[]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",38,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",38,[[]]],[11,"insert","","Sets the value of the entry.",38,[[]]],[11,"insert_mult","","Sets the value of the entry.",38,[[],["valuedrain",3]]],[11,"append","","Insert the value into the entry.",38,[[]]],[11,"remove","","Remove the entry from the map.",38,[[]]],[11,"remove_entry","","Remove the entry from the map.",38,[[]]],[11,"remove_entry_mult","","Remove the entry from the map.",38,[[]]],[11,"iter","","Returns an iterator visiting all values associated with …",38,[[],["valueiter",3]]],[11,"iter_mut","","Returns an iterator mutably visiting all values …",38,[[],["valueitermut",3]]],[11,"key","","Returns a reference to the entry\'s key",39,[[],["headername",3]]],[11,"into_key","","Take ownership of the key",39,[[],["headername",3]]],[11,"insert","","Insert the value into the entry.",39,[[]]],[11,"insert_entry","","Insert the value into the entry.",39,[[],["occupiedentry",3]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",45,[[],[["invalidheadername",3],["result",4],["headername",3]]]],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",45,[[],[["invalidheadername",3],["result",4],["headername",3]]]],[11,"from_static","","Converts a static string to a HTTP header name.",45,[[["str",15]],["headername",3]]],[11,"as_str","","Returns a <code>str</code> representation of the header.",45,[[],["str",15]]],[11,"from_static","","Convert a static string to a <code>HeaderValue</code>.",47,[[["str",15]],["headervalue",3]]],[11,"from_str","","Attempt to convert a string to a <code>HeaderValue</code>.",47,[[["str",15]],[["result",4],["headervalue",3],["invalidheadervalue",3]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",47,[[["headername",3]],["headervalue",3]]],[11,"from_bytes","","Attempt to convert a byte slice to a <code>HeaderValue</code>.",47,[[],[["result",4],["headervalue",3],["invalidheadervalue",3]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.",47,[[],[["result",4],["headervalue",3],["invalidheadervalue",3]]]],[11,"from_maybe_shared_unchecked","","Convert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …",47,[[],["headervalue",3]]],[11,"to_str","","Yields a <code>&str</code> slice if the <code>HeaderValue</code> only contains …",47,[[],[["tostrerror",3],["result",4],["str",15]]]],[11,"len","","Returns the length of <code>self</code>.",47,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>HeaderValue</code> has a length of zero …",47,[[],["bool",15]]],[11,"as_bytes","","Converts a <code>HeaderValue</code> to a byte slice.",47,[[]]],[11,"set_sensitive","","Mark that the header value represents sensitive …",47,[[["bool",15]]]],[11,"is_sensitive","","Returns <code>true</code> if the value represents sensitive data.",47,[[],["bool",15]]],[18,"GET","hyper","GET",50,null],[18,"POST","","POST",50,null],[18,"PUT","","PUT",50,null],[18,"DELETE","","DELETE",50,null],[18,"HEAD","","HEAD",50,null],[18,"OPTIONS","","OPTIONS",50,null],[18,"CONNECT","","CONNECT",50,null],[18,"PATCH","","PATCH",50,null],[18,"TRACE","","TRACE",50,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",50,[[],[["result",4],["invalidmethod",3],["method",3]]]],[11,"is_safe","","Whether a method is considered \\\"safe\\\", meaning the …",50,[[],["bool",15]]],[11,"is_idempotent","","Whether a method is considered \\\"idempotent\\\", meaning the …",50,[[],["bool",15]]],[11,"as_str","","Return a &str representation of the HTTP method",50,[[],["str",15]]],[11,"builder","","Creates a new builder-style object to manufacture a …",51,[[],["builder",3]]],[11,"get","","Creates a new <code>Builder</code> initialized with a GET method and …",51,[[],["builder",3]]],[11,"put","","Creates a new <code>Builder</code> initialized with a PUT method and …",51,[[],["builder",3]]],[11,"post","","Creates a new <code>Builder</code> initialized with a POST method and …",51,[[],["builder",3]]],[11,"delete","","Creates a new <code>Builder</code> initialized with a DELETE method …",51,[[],["builder",3]]],[11,"options","","Creates a new <code>Builder</code> initialized with an OPTIONS method …",51,[[],["builder",3]]],[11,"head","","Creates a new <code>Builder</code> initialized with a HEAD method and …",51,[[],["builder",3]]],[11,"connect","","Creates a new <code>Builder</code> initialized with a CONNECT method …",51,[[],["builder",3]]],[11,"patch","","Creates a new <code>Builder</code> initialized with a PATCH method and …",51,[[],["builder",3]]],[11,"trace","","Creates a new <code>Builder</code> initialized with a TRACE method and …",51,[[],["builder",3]]],[11,"new","","Creates a new blank <code>Request</code> with the body",51,[[],["request",3]]],[11,"from_parts","","Creates a new <code>Request</code> with the given components parts and …",51,[[["parts",3]],["request",3]]],[11,"method","","Returns a reference to the associated HTTP method.",51,[[],["method",3]]],[11,"method_mut","","Returns a mutable reference to the associated HTTP method.",51,[[],["method",3]]],[11,"uri","","Returns a reference to the associated URI.",51,[[],["uri",3]]],[11,"uri_mut","","Returns a mutable reference to the associated URI.",51,[[],["uri",3]]],[11,"version","","Returns the associated version.",51,[[],["version",3]]],[11,"version_mut","","Returns a mutable reference to the associated version.",51,[[],["version",3]]],[11,"headers","","Returns a reference to the associated header field map.",51,[[],["headermap",3]]],[11,"headers_mut","","Returns a mutable reference to the associated header …",51,[[],["headermap",3]]],[11,"extensions","","Returns a reference to the associated extensions.",51,[[],["extensions",3]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",51,[[],["extensions",3]]],[11,"body","","Returns a reference to the associated HTTP body.",51,[[]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",51,[[]]],[11,"into_body","","Consumes the request, returning just the body.",51,[[]]],[11,"into_parts","","Consumes the request returning the head and body parts.",51,[[]]],[11,"map","","Consumes the request returning a new request with body …",51,[[],["request",3]]],[11,"builder","","Creates a new builder-style object to manufacture a …",52,[[],["builder",3]]],[11,"new","","Creates a new blank <code>Response</code> with the body",52,[[],["response",3]]],[11,"from_parts","","Creates a new <code>Response</code> with the given head and body",52,[[["parts",3]],["response",3]]],[11,"status","","Returns the <code>StatusCode</code>.",52,[[],["statuscode",3]]],[11,"status_mut","","Returns a mutable reference to the associated <code>StatusCode</code>.",52,[[],["statuscode",3]]],[11,"version","","Returns a reference to the associated version.",52,[[],["version",3]]],[11,"version_mut","","Returns a mutable reference to the associated version.",52,[[],["version",3]]],[11,"headers","","Returns a reference to the associated header field map.",52,[[],["headermap",3]]],[11,"headers_mut","","Returns a mutable reference to the associated header …",52,[[],["headermap",3]]],[11,"extensions","","Returns a reference to the associated extensions.",52,[[],["extensions",3]]],[11,"extensions_mut","","Returns a mutable reference to the associated extensions.",52,[[],["extensions",3]]],[11,"body","","Returns a reference to the associated HTTP body.",52,[[]]],[11,"body_mut","","Returns a mutable reference to the associated HTTP body.",52,[[]]],[11,"into_body","","Consumes the response, returning just the body.",52,[[]]],[11,"into_parts","","Consumes the response returning the head and body parts.",52,[[]]],[11,"map","","Consumes the response returning a new response with body …",52,[[],["response",3]]],[11,"from_u16","","Converts a u16 to a status code.",53,[[["u16",15]],[["statuscode",3],["invalidstatuscode",3],["result",4]]]],[11,"from_bytes","","Converts a &[u8] to a status code",53,[[],[["statuscode",3],["invalidstatuscode",3],["result",4]]]],[11,"as_u16","","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.",53,[[],["u16",15]]],[11,"as_str","","Returns a &str representation of the <code>StatusCode</code>",53,[[],["str",15]]],[11,"canonical_reason","","Get the standardised <code>reason-phrase</code> for this status code.",53,[[],[["option",4],["str",15]]]],[11,"is_informational","","Check if status is within 100-199.",53,[[],["bool",15]]],[11,"is_success","","Check if status is within 200-299.",53,[[],["bool",15]]],[11,"is_redirection","","Check if status is within 300-399.",53,[[],["bool",15]]],[11,"is_client_error","","Check if status is within 400-499.",53,[[],["bool",15]]],[11,"is_server_error","","Check if status is within 500-599.",53,[[],["bool",15]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",53,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",53,null],[18,"PROCESSING","","102 Processing [RFC2518]",53,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",53,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",53,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",53,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",53,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",53,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",53,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",53,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",53,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",53,null],[18,"IM_USED","","226 IM Used [RFC3229]",53,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",53,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",53,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",53,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",53,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",53,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",53,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",53,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",53,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",53,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",53,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",53,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",53,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",53,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",53,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",53,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",53,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",53,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",53,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",53,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",53,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",53,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",53,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",53,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",53,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",53,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",53,null],[18,"IM_A_TEAPOT","","418 I\'m a teapot [curiously not registered by IANA but …",53,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",53,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",53,null],[18,"LOCKED","","423 Locked [RFC4918]",53,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",53,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",53,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",53,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",53,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",53,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",53,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",53,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",53,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",53,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",53,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",53,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",53,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",53,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",53,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",53,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",53,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",53,null],[11,"builder","","Creates a new builder-style object to manufacture a <code>Uri</code>.",54,[[],["builder",3]]],[11,"from_parts","","Attempt to convert a <code>Uri</code> from <code>Parts</code>",54,[[["parts",3]],[["uri",3],["invaliduriparts",3],["result",4]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.",54,[[],[["uri",3],["result",4],["invaliduri",3]]]],[11,"from_static","","Convert a <code>Uri</code> from a static string.",54,[[["str",15]],["uri",3]]],[11,"into_parts","","Convert a <code>Uri</code> into <code>Parts</code>.",54,[[],["parts",3]]],[11,"path_and_query","","Returns the path & query components of the Uri",54,[[],[["pathandquery",3],["option",4]]]],[11,"path","","Get the path of this <code>Uri</code>.",54,[[],["str",15]]],[11,"scheme","","Get the scheme of this <code>Uri</code>.",54,[[],[["scheme",3],["option",4]]]],[11,"scheme_str","","Get the scheme of this <code>Uri</code> as a <code>&str</code>.",54,[[],[["str",15],["option",4]]]],[11,"authority","","Get the authority of this <code>Uri</code>.",54,[[],[["authority",3],["option",4]]]],[11,"host","","Get the host of this <code>Uri</code>.",54,[[],[["str",15],["option",4]]]],[11,"port","","Get the port part of this <code>Uri</code>.",54,[[],[["port",3],["option",4]]]],[11,"port_u16","","Get the port of this <code>Uri</code> as a <code>u16</code>.",54,[[],[["option",4],["u16",15]]]],[11,"query","","Get the query string of this <code>Uri</code>, starting after the <code>?</code>.",54,[[],[["str",15],["option",4]]]],[18,"HTTP_09","","<code>HTTP/0.9</code>",55,null],[18,"HTTP_10","","<code>HTTP/1.0</code>",55,null],[18,"HTTP_11","","<code>HTTP/1.1</code>",55,null],[18,"HTTP_2","","<code>HTTP/2.0</code>",55,null],[18,"HTTP_3","","<code>HTTP/3.0</code>",55,null]],"p":[[8,"Buf"],[8,"HttpBody"],[8,"Executor"],[8,"Service"],[3,"Parts"],[3,"Upgraded"],[3,"Name"],[3,"GaiResolver"],[8,"Connection"],[3,"Connected"],[3,"Parts"],[3,"SendRequest"],[3,"Connection"],[3,"Builder"],[3,"Connect"],[4,"Entry"],[3,"Body"],[3,"Sender"],[3,"Bytes"],[3,"SizeHint"],[3,"Error"],[3,"OnUpgrade"],[3,"GaiAddrs"],[3,"GaiFuture"],[3,"InvalidNameError"],[3,"HttpConnector"],[3,"HttpInfo"],[3,"Client"],[3,"ResponseFuture"],[3,"Builder"],[3,"ResponseFuture"],[3,"Drain"],[3,"GetAll"],[3,"HeaderMap"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"ValueDrain"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"Values"],[3,"ValuesMut"],[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"HeaderValue"],[3,"InvalidHeaderValue"],[3,"ToStrError"],[3,"Method"],[3,"Request"],[3,"Response"],[3,"StatusCode"],[3,"Uri"],[3,"Version"]]},\
"idna":{"doc":"This Rust crate implements IDNA per the WHATWG URL …","i":[[0,"punycode","idna","Punycode (RFC 3492) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode <code>String</code>.",null,[[["str",15]],[["option",4],["string",3]]]],[5,"decode","","Convert Punycode to Unicode.",null,[[["str",15]],[["vec",3],["option",4]]]],[5,"encode_str","","Convert an Unicode <code>str</code> to Punycode.",null,[[["str",15]],[["option",4],["string",3]]]],[5,"encode","","Convert Unicode to Punycode.",null,[[],[["option",4],["string",3]]]],[3,"Config","idna","",null,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[3,"Idna","","",null,null],[5,"domain_to_ascii","","The domain to ASCII algorithm.",null,[[["str",15]],[["string",3],["errors",3],["result",4]]]],[5,"domain_to_ascii_strict","","The domain to ASCII algorithm, with the <code>beStrict</code> flag set.",null,[[["str",15]],[["string",3],["errors",3],["result",4]]]],[5,"domain_to_unicode","","The domain to Unicode algorithm.",null,[[["str",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"clone","","",1,[[],["config",3]]],[11,"default","","",0,[[],["idna",3]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[],["errors",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"new","","",0,[[["config",3]]]],[11,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",0,[[["string",3],["str",15]],[["errors",3],["result",4]]]],[11,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",0,[[["string",3],["str",15]],[["errors",3],["result",4]]]],[11,"use_std3_ascii_rules","","",1,[[["bool",15]]]],[11,"transitional_processing","","",1,[[["bool",15]]]],[11,"verify_dns_length","","",1,[[["bool",15]]]],[11,"check_hyphens","","",1,[[["bool",15]]]],[11,"use_idna_2008_rules","","",1,[[["bool",15]]]],[11,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",1,[[["str",15]],[["errors",3],["result",4],["string",3]]]],[11,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",1,[[["str",15]]]]],"p":[[3,"Idna"],[3,"Config"],[3,"Errors"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","i":[[0,"map","indexmap","<code>IndexMap</code> is a hash table where the iteration order of the …",null,null],[8,"MutableKeys","indexmap::map","Opt-in mutable access to keys.",null,null],[16,"Key","","",0,null],[16,"Value","","",0,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",0,[[],["option",4]]],[10,"retain2","","Scan through each key-value pair in the map and keep …",0,[[]]],[10,"__private_marker","","This method is not useful in itself – it is there to …",0,[[],["privatemarker",3]]],[4,"Entry","","Entry for an existing key-value pair or a vacant location …",null,null],[13,"Occupied","","Existing slot with equivalent key.",1,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",1,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>IndexMap</code>. It is part …",null,null],[3,"VacantEntry","","A view into a vacant entry in a <code>IndexMap</code>. It is part of …",null,null],[3,"IndexMap","","A hash table where the iteration order of the key-value …",null,null],[11,"new","","Create a new map. (Does not allocate.)",2,[[]]],[11,"with_capacity","","Create a new map with capacity for <code>n</code> key-value pairs. …",2,[[["usize",15]]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for <code>n</code> key-value pairs. …",2,[[["usize",15]]]],[11,"with_hasher","","Create a new map with <code>hash_builder</code>",2,[[]]],[11,"capacity","","Computes in <strong>O(1)</strong> time.",2,[[],["usize",15]]],[11,"hasher","","Return a reference to the map\'s <code>BuildHasher</code>.",2,[[]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[],["bool",15]]],[11,"iter","","Return an iterator over the key-value pairs of the map, …",2,[[],["iter",3]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, …",2,[[],["itermut",3]]],[11,"keys","","Return an iterator over the keys of the map, in their …",2,[[],["keys",3]]],[11,"values","","Return an iterator over the values of the map, in their …",2,[[],["values",3]]],[11,"values_mut","","Return an iterator over mutable references to the the …",2,[[],["valuesmut",3]]],[11,"clear","","Remove all key-value pairs in the map, while preserving …",2,[[]]],[11,"truncate","","Shortens the map, keeping the first <code>len</code> elements and …",2,[[["usize",15]]]],[11,"drain","","Clears the <code>IndexMap</code> in the given index range, returning …",2,[[],["drain",3]]],[11,"split_off","","Splits the collection into two at the given index.",2,[[["usize",15]]]],[11,"reserve","","Reserve capacity for <code>additional</code> more key-value pairs.",2,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the map as much as possible.",2,[[]]],[11,"insert","","Insert a key-value pair in the map.",2,[[],["option",4]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[]]],[11,"entry","","Get the given key’s corresponding entry in the map for …",2,[[],["entry",4]]],[11,"contains_key","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.",2,[[],["bool",15]]],[11,"get","","Return a reference to the value stored for <code>key</code>, if it is …",2,[[],["option",4]]],[11,"get_key_value","","Return references to the key-value pair stored for <code>key</code>, …",2,[[],["option",4]]],[11,"get_full","","Return item index, key and value",2,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the map",2,[[],[["option",4],["usize",15]]]],[11,"get_mut","","",2,[[],["option",4]]],[11,"get_full_mut","","",2,[[],["option",4]]],[11,"remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"swap_remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"swap_remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to <code>key</code> and return it …",2,[[],["option",4]]],[11,"shift_remove","","Remove the key-value pair equivalent to <code>key</code> and return …",2,[[],["option",4]]],[11,"shift_remove_entry","","Remove and return the key-value pair equivalent to <code>key</code>.",2,[[],["option",4]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to <code>key</code> and return it …",2,[[],["option",4]]],[11,"pop","","Remove the last key-value pair",2,[[],["option",4]]],[11,"retain","","Scan through each key-value pair in the map and keep …",2,[[]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering …",2,[[]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the …",2,[[]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value …",2,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the map’s key-value pairs in …",2,[[]]],[11,"get_index","","Get a key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"first","","Get the first key-value pair",2,[[],["option",4]]],[11,"first_mut","","Get the first key-value pair, with mutable access to the …",2,[[],["option",4]]],[11,"last","","Get the last key-value pair",2,[[],["option",4]]],[11,"last_mut","","Get the last key-value pair, with mutable access to the …",2,[[],["option",4]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[["usize",15]],["option",4]]],[11,"swap_indices","","Swaps the position of two key-value pairs in the map.",2,[[["usize",15]]]],[3,"Keys","","An iterator over the keys of a <code>IndexMap</code>.",null,null],[3,"Values","","An iterator over the values of a <code>IndexMap</code>.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>IndexMap</code>.",null,null],[3,"Iter","","An iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"IterMut","","A mutable iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>IndexMap</code>.",null,null],[3,"Drain","","A draining iterator over the entries of a <code>IndexMap</code>.",null,null],[0,"set","indexmap","A hash set implemented using <code>IndexMap</code>",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is …",null,null],[11,"new","","Create a new set. (Does not allocate.)",3,[[]]],[11,"with_capacity","","Create a new set with capacity for <code>n</code> elements. (Does not …",3,[[["usize",15]]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for <code>n</code> elements. (Does not …",3,[[["usize",15]]]],[11,"with_hasher","","Create a new set with <code>hash_builder</code>",3,[[]]],[11,"capacity","","Computes in <strong>O(1)</strong> time.",3,[[],["usize",15]]],[11,"hasher","","Return a reference to the set\'s <code>BuildHasher</code>.",3,[[]]],[11,"len","","Return the number of elements in the set.",3,[[],["usize",15]]],[11,"is_empty","","Returns true if the set contains no elements.",3,[[],["bool",15]]],[11,"iter","","Return an iterator over the values of the set, in their …",3,[[],["iter",3]]],[11,"clear","","Remove all elements in the set, while preserving its …",3,[[]]],[11,"truncate","","Shortens the set, keeping the first <code>len</code> elements and …",3,[[["usize",15]]]],[11,"drain","","Clears the <code>IndexSet</code> in the given index range, returning …",3,[[],["drain",3]]],[11,"split_off","","Splits the collection into two at the given index.",3,[[["usize",15]]]],[11,"reserve","","Reserve capacity for <code>additional</code> more values.",3,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the set as much as possible.",3,[[]]],[11,"insert","","Insert the value into the set.",3,[[],["bool",15]]],[11,"insert_full","","Insert the value into the set, and get its index.",3,[[]]],[11,"difference","","Return an iterator over the values that are in <code>self</code> but …",3,[[["indexset",3]],["difference",3]]],[11,"symmetric_difference","","Return an iterator over the values that are in <code>self</code> or …",3,[[["indexset",3]],["symmetricdifference",3]]],[11,"intersection","","Return an iterator over the values that are in both <code>self</code> …",3,[[["indexset",3]],["intersection",3]]],[11,"union","","Return an iterator over all values that are in <code>self</code> or …",3,[[["indexset",3]],["union",3]]],[11,"contains","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.",3,[[],["bool",15]]],[11,"get","","Return a reference to the value stored in the set, if it …",3,[[],["option",4]]],[11,"get_full","","Return item index and value",3,[[],["option",4]]],[11,"get_index_of","","Return item index, if it exists in the set",3,[[],[["option",4],["usize",15]]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",3,[[],["option",4]]],[11,"remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[],["bool",15]]],[11,"swap_remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[],["bool",15]]],[11,"shift_remove","","Remove the value from the set, and return <code>true</code> if it was …",3,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is …",3,[[],["option",4]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it …",3,[[],["option",4]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it …",3,[[],["option",4]]],[11,"pop","","Remove the last value",3,[[],["option",4]]],[11,"retain","","Scan through each value in the set and keep those where …",3,[[]]],[11,"sort","","Sort the set’s values by their default ordering.",3,[[]]],[11,"sort_by","","Sort the set’s values in place using the comparison …",3,[[]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator …",3,[[],["intoiter",3]]],[11,"reverse","","Reverses the order of the set’s values in place.",3,[[]]],[11,"get_index","","Get a value by index",3,[[["usize",15]],["option",4]]],[11,"first","","Get the first value",3,[[],["option",4]]],[11,"last","","Get the last value",3,[[],["option",4]]],[11,"swap_remove_index","","Remove the value by index",3,[[["usize",15]],["option",4]]],[11,"shift_remove_index","","Remove the value by index",3,[[["usize",15]],["option",4]]],[11,"swap_indices","","Swaps the position of two values in the set.",3,[[["usize",15]]]],[3,"IntoIter","","An owning iterator over the items of a <code>IndexSet</code>.",null,null],[3,"Iter","","An iterator over the items of a <code>IndexSet</code>.",null,null],[3,"Drain","","A draining iterator over the items of a <code>IndexSet</code>.",null,null],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.",3,[[["indexset",3]],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if all elements of <code>self</code> are contained in …",3,[[["indexset",3]],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if all elements of <code>other</code> are contained in …",3,[[["indexset",3]],["bool",15]]],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[3,"Union","","A lazy iterator producing elements in the union of …",null,null],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to <code>key</code> and return <code>true</code> if they are equal.",4,[[],["bool",15]]],[14,"indexmap","","Create an <code>IndexMap</code> from a list of key-value pairs",null,null],[14,"indexset","","Create an <code>IndexSet</code> from a list of values",null,null],[11,"from","indexmap::map","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"into_iter","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"into_iter","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"into_iter","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","indexmap::set","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"into_iter","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"into_iter","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"into_iter","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"into_iter","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"into_iter","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"into_iter","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"into_iter","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"get_full_mut2","indexmap::map","",2,[[],["option",4]]],[11,"retain2","","",2,[[]]],[11,"__private_marker","","",2,[[],["privatemarker",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","indexmap::set","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"eq","indexmap::map","",2,[[["indexmap",3]],["bool",15]]],[11,"eq","indexmap::set","",3,[[["indexset",3]],["bool",15]]],[11,"index","indexmap::map","Returns a reference to the value corresponding to the …",2,[[]]],[11,"index","","Returns a reference to the value at the supplied <code>index</code>.",2,[[["usize",15]]]],[11,"index","indexmap::set","Returns a reference to the value at the supplied <code>index</code>.",3,[[["usize",15]]]],[11,"index_mut","indexmap::map","Returns a mutable reference to the value corresponding to …",2,[[]]],[11,"index_mut","","Returns a mutable reference to the value at the supplied …",2,[[["usize",15]]]],[11,"len","","",7,[[],["usize",15]]],[11,"len","","",8,[[],["usize",15]]],[11,"len","","",9,[[],["usize",15]]],[11,"len","","",10,[[],["usize",15]]],[11,"len","","",11,[[],["usize",15]]],[11,"len","","",12,[[],["usize",15]]],[11,"len","indexmap::set","",14,[[],["usize",15]]],[11,"len","","",15,[[],["usize",15]]],[11,"from_iter","indexmap::map","Create an <code>IndexMap</code> from the sequence of key-value pairs …",2,[[["intoiterator",8]]]],[11,"from_iter","indexmap::set","",3,[[["intoiterator",8]]]],[11,"next_back","indexmap::map","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",9,[[],["option",4]]],[11,"next_back","","",10,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next_back","","",12,[[],["option",4]]],[11,"next_back","","",13,[[],["option",4]]],[11,"next_back","indexmap::set","",14,[[],["option",4]]],[11,"next_back","","",15,[[],["option",4]]],[11,"next_back","","",16,[[],["option",4]]],[11,"next_back","","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next","indexmap::map","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[],["usize",15]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"last","","",7,[[],["option",4]]],[11,"collect","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"count","","",8,[[],["usize",15]]],[11,"nth","","",8,[[["usize",15]],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"collect","","",8,[[]]],[11,"next","","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"count","","",9,[[],["usize",15]]],[11,"nth","","",9,[[["usize",15]],["option",4]]],[11,"last","","",9,[[],["option",4]]],[11,"collect","","",9,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"count","","",10,[[],["usize",15]]],[11,"nth","","",10,[[["usize",15]],["option",4]]],[11,"last","","",10,[[],["option",4]]],[11,"collect","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"count","","",11,[[],["usize",15]]],[11,"nth","","",11,[[["usize",15]],["option",4]]],[11,"last","","",11,[[],["option",4]]],[11,"collect","","",11,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"count","","",12,[[],["usize",15]]],[11,"nth","","",12,[[["usize",15]],["option",4]]],[11,"last","","",12,[[],["option",4]]],[11,"collect","","",12,[[]]],[11,"next","","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"count","","",13,[[],["usize",15]]],[11,"nth","","",13,[[["usize",15]],["option",4]]],[11,"last","","",13,[[],["option",4]]],[11,"collect","","",13,[[]]],[11,"next","indexmap::set","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"count","","",14,[[],["usize",15]]],[11,"nth","","",14,[[["usize",15]],["option",4]]],[11,"last","","",14,[[],["option",4]]],[11,"collect","","",14,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"count","","",15,[[],["usize",15]]],[11,"nth","","",15,[[["usize",15]],["option",4]]],[11,"last","","",15,[[],["option",4]]],[11,"collect","","",15,[[]]],[11,"next","","",16,[[],["option",4]]],[11,"size_hint","","",16,[[]]],[11,"count","","",16,[[],["usize",15]]],[11,"nth","","",16,[[["usize",15]],["option",4]]],[11,"last","","",16,[[],["option",4]]],[11,"collect","","",16,[[]]],[11,"next","","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"fold","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"fold","","",20,[[]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",3,[[]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator",8]]]],[11,"extend","indexmap::set","",3,[[["intoiterator",8]]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","indexmap::map","",2,[[]]],[11,"clone_from","","",2,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",10,[[]]],[11,"clone","indexmap::set","",3,[[]]],[11,"clone_from","","",3,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"default","indexmap::map","Return an empty <code>IndexMap</code>",2,[[]]],[11,"default","indexmap::set","Return an empty <code>IndexSet</code>",3,[[]]],[11,"key","indexmap::map","Gets a reference to the entry\'s key in the map.",5,[[]]],[11,"get","","Gets a reference to the entry\'s value in the map.",5,[[]]],[11,"get_mut","","Gets a mutable reference to the entry\'s value in the map.",5,[[]]],[11,"index","","Return the index of the key-value pair",5,[[],["usize",15]]],[11,"into_mut","","Converts into a mutable reference to the entry\'s value in …",5,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"or_insert","","Inserts the given default value in the entry if it is …",1,[[]]],[11,"or_insert_with","","Inserts the result of the <code>call</code> function in the entry if …",1,[[]]],[11,"or_insert_with_key","","Inserts the result of the <code>call</code> function with a reference …",1,[[]]],[11,"key","","Gets a reference to the entry\'s key, either within the …",1,[[]]],[11,"index","","Return the index where the key-value pair exists or will …",1,[[],["usize",15]]],[11,"and_modify","","Modifies the entry if it is occupied.",1,[[]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is …",1,[[]]],[11,"insert","","Sets the value of the entry to <code>value</code>, and returns the …",5,[[]]],[11,"remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this …",5,[[]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map …",5,[[]]],[11,"key","","Gets a reference to the key that was used to find the …",6,[[]]],[11,"into_key","","Takes ownership of the key, leaving the entry vacant.",6,[[]]],[11,"index","","Return the index where the key-value pair will be …",6,[[],["usize",15]]],[11,"insert","","Inserts the entry\'s key and the given value into the map, …",6,[[]]]],"p":[[8,"MutableKeys"],[4,"Entry"],[3,"IndexMap"],[3,"IndexSet"],[8,"Equivalent"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]},\
"ipnet":{"doc":"Types for IPv4 and IPv6 network addresses.","i":[[8,"IpAdd","ipnet","Provides a <code>saturating_add()</code> method for <code>Ipv4Addr</code> and …",null,null],[16,"Output","","",0,null],[10,"saturating_add","","",0,[[]]],[8,"IpSub","","Provides a <code>saturating_sub()</code> method for <code>Ipv4Addr</code> and …",null,null],[16,"Output","","",1,null],[10,"saturating_sub","","",1,[[]]],[8,"IpBitAnd","","Provides a <code>bitand()</code> method for <code>Ipv4Addr</code> and <code>Ipv6Addr</code>.",null,null],[16,"Output","","",2,null],[10,"bitand","","",2,[[]]],[8,"IpBitOr","","Provides a <code>bitor()</code> method for <code>Ipv4Addr</code> and <code>Ipv6Addr</code>.",null,null],[16,"Output","","",3,null],[10,"bitor","","",3,[[]]],[4,"IpAddrRange","","An <code>Iterator</code> over a range of IP addresses, either IPv4 or …",null,null],[13,"V4","","",4,null],[13,"V6","","",4,null],[3,"Ipv4AddrRange","","An <code>Iterator</code> over a range of IPv4 addresses.",null,null],[3,"Ipv6AddrRange","","An <code>Iterator</code> over a range of IPv6 addresses.",null,null],[4,"IpNet","","An IP network address, either IPv4 or IPv6.",null,null],[13,"V4","","",5,null],[13,"V6","","",5,null],[3,"Ipv4Net","","An IPv4 network address.",null,null],[3,"Ipv6Net","","An IPv6 network address.",null,null],[3,"PrefixLenError","","An error which can be returned when the prefix length is …",null,null],[4,"IpSubnets","","An <code>Iterator</code> that generates IP network addresses, either …",null,null],[13,"V4","","",6,null],[13,"V6","","",6,null],[3,"Ipv4Subnets","","An <code>Iterator</code> that generates IPv4 network addresses.",null,null],[3,"Ipv6Subnets","","An <code>Iterator</code> that generates IPv6 network addresses.",null,null],[3,"AddrParseError","","An error which can be returned when parsing an IP network …",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",4,[[["ipv4addrrange",3]],["ipaddrrange",4]]],[11,"from","","",4,[[["ipv6addrrange",3]],["ipaddrrange",4]]],[11,"from","","",5,[[["ipv4net",3]],["ipnet",4]]],[11,"from","","",5,[[["ipv6net",3]],["ipnet",4]]],[11,"from","","",5,[[["ipaddr",4]],["ipnet",4]]],[11,"from","","",9,[[["ipv4addr",3]],["ipv4net",3]]],[11,"from","","",10,[[["ipv6addr",3]],["ipv6net",3]]],[11,"from","","",6,[[["ipv4subnets",3]],["ipsubnets",4]]],[11,"from","","",6,[[["ipv6subnets",3]],["ipsubnets",4]]],[11,"next_back","","",4,[[],["option",4]]],[11,"nth_back","","",4,[[["usize",15]],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"nth_back","","",7,[[["usize",15]],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"nth_back","","",8,[[["usize",15]],["option",4]]],[11,"next","","",4,[[],["option",4]]],[11,"count","","",4,[[],["usize",15]]],[11,"last","","",4,[[],["option",4]]],[11,"max","","",4,[[],["option",4]]],[11,"min","","",4,[[],["option",4]]],[11,"nth","","",4,[[["usize",15]],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"count","","",7,[[],["usize",15]]],[11,"last","","",7,[[],["option",4]]],[11,"max","","",7,[[],["option",4]]],[11,"min","","",7,[[],["option",4]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"count","","",8,[[],["usize",15]]],[11,"last","","",8,[[],["option",4]]],[11,"max","","",8,[[],["option",4]]],[11,"min","","",8,[[],["option",4]]],[11,"nth","","",8,[[["usize",15]],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"next","","",12,[[],["option",4]]],[11,"next","","",13,[[],["option",4]]],[11,"clone","","",4,[[],["ipaddrrange",4]]],[11,"clone","","",7,[[],["ipv4addrrange",3]]],[11,"clone","","",8,[[],["ipv6addrrange",3]]],[11,"clone","","",5,[[],["ipnet",4]]],[11,"clone","","",9,[[],["ipv4net",3]]],[11,"clone","","",10,[[],["ipv6net",3]]],[11,"clone","","",11,[[],["prefixlenerror",3]]],[11,"clone","","",6,[[],["ipsubnets",4]]],[11,"clone","","",12,[[],["ipv4subnets",3]]],[11,"clone","","",13,[[],["ipv6subnets",3]]],[11,"clone","","",14,[[],["addrparseerror",3]]],[11,"default","","",5,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"cmp","","",4,[[["ipaddrrange",4]],["ordering",4]]],[11,"cmp","","",7,[[["ipv4addrrange",3]],["ordering",4]]],[11,"cmp","","",8,[[["ipv6addrrange",3]],["ordering",4]]],[11,"cmp","","",5,[[["ipnet",4]],["ordering",4]]],[11,"cmp","","",9,[[["ipv4net",3]],["ordering",4]]],[11,"cmp","","",10,[[["ipv6net",3]],["ordering",4]]],[11,"cmp","","",6,[[["ipsubnets",4]],["ordering",4]]],[11,"cmp","","",12,[[["ipv4subnets",3]],["ordering",4]]],[11,"cmp","","",13,[[["ipv6subnets",3]],["ordering",4]]],[11,"eq","","",4,[[["ipaddrrange",4]],["bool",15]]],[11,"ne","","",4,[[["ipaddrrange",4]],["bool",15]]],[11,"eq","","",7,[[["ipv4addrrange",3]],["bool",15]]],[11,"ne","","",7,[[["ipv4addrrange",3]],["bool",15]]],[11,"eq","","",8,[[["ipv6addrrange",3]],["bool",15]]],[11,"ne","","",8,[[["ipv6addrrange",3]],["bool",15]]],[11,"eq","","",5,[[["ipnet",4]],["bool",15]]],[11,"ne","","",5,[[["ipnet",4]],["bool",15]]],[11,"eq","","",9,[[["ipv4net",3]],["bool",15]]],[11,"ne","","",9,[[["ipv4net",3]],["bool",15]]],[11,"eq","","",10,[[["ipv6net",3]],["bool",15]]],[11,"ne","","",10,[[["ipv6net",3]],["bool",15]]],[11,"eq","","",11,[[["prefixlenerror",3]],["bool",15]]],[11,"eq","","",6,[[["ipsubnets",4]],["bool",15]]],[11,"ne","","",6,[[["ipsubnets",4]],["bool",15]]],[11,"eq","","",12,[[["ipv4subnets",3]],["bool",15]]],[11,"ne","","",12,[[["ipv4subnets",3]],["bool",15]]],[11,"eq","","",13,[[["ipv6subnets",3]],["bool",15]]],[11,"ne","","",13,[[["ipv6subnets",3]],["bool",15]]],[11,"eq","","",14,[[["addrparseerror",3]],["bool",15]]],[11,"ne","","",14,[[["addrparseerror",3]],["bool",15]]],[11,"partial_cmp","","",4,[[["ipaddrrange",4]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["ipaddrrange",4]],["bool",15]]],[11,"le","","",4,[[["ipaddrrange",4]],["bool",15]]],[11,"gt","","",4,[[["ipaddrrange",4]],["bool",15]]],[11,"ge","","",4,[[["ipaddrrange",4]],["bool",15]]],[11,"partial_cmp","","",7,[[["ipv4addrrange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["ipv4addrrange",3]],["bool",15]]],[11,"le","","",7,[[["ipv4addrrange",3]],["bool",15]]],[11,"gt","","",7,[[["ipv4addrrange",3]],["bool",15]]],[11,"ge","","",7,[[["ipv4addrrange",3]],["bool",15]]],[11,"partial_cmp","","",8,[[["ipv6addrrange",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["ipv6addrrange",3]],["bool",15]]],[11,"le","","",8,[[["ipv6addrrange",3]],["bool",15]]],[11,"gt","","",8,[[["ipv6addrrange",3]],["bool",15]]],[11,"ge","","",8,[[["ipv6addrrange",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["ipnet",4]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["ipnet",4]],["bool",15]]],[11,"le","","",5,[[["ipnet",4]],["bool",15]]],[11,"gt","","",5,[[["ipnet",4]],["bool",15]]],[11,"ge","","",5,[[["ipnet",4]],["bool",15]]],[11,"partial_cmp","","",9,[[["ipv4net",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["ipv4net",3]],["bool",15]]],[11,"le","","",9,[[["ipv4net",3]],["bool",15]]],[11,"gt","","",9,[[["ipv4net",3]],["bool",15]]],[11,"ge","","",9,[[["ipv4net",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["ipv6net",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["ipv6net",3]],["bool",15]]],[11,"le","","",10,[[["ipv6net",3]],["bool",15]]],[11,"gt","","",10,[[["ipv6net",3]],["bool",15]]],[11,"ge","","",10,[[["ipv6net",3]],["bool",15]]],[11,"partial_cmp","","",6,[[["ipsubnets",4]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["ipsubnets",4]],["bool",15]]],[11,"le","","",6,[[["ipsubnets",4]],["bool",15]]],[11,"gt","","",6,[[["ipsubnets",4]],["bool",15]]],[11,"ge","","",6,[[["ipsubnets",4]],["bool",15]]],[11,"partial_cmp","","",12,[[["ipv4subnets",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["ipv4subnets",3]],["bool",15]]],[11,"le","","",12,[[["ipv4subnets",3]],["bool",15]]],[11,"gt","","",12,[[["ipv4subnets",3]],["bool",15]]],[11,"ge","","",12,[[["ipv4subnets",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["ipv6subnets",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["ipv6subnets",3]],["bool",15]]],[11,"le","","",13,[[["ipv6subnets",3]],["bool",15]]],[11,"gt","","",13,[[["ipv6subnets",3]],["bool",15]]],[11,"ge","","",13,[[["ipv6subnets",3]],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"hash","","",4,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"from_str","","",5,[[["str",15]],[["ipnet",4],["addrparseerror",3],["result",4]]]],[11,"from_str","","",9,[[["str",15]],[["result",4],["addrparseerror",3],["ipv4net",3]]]],[11,"from_str","","",10,[[["str",15]],[["addrparseerror",3],["result",4],["ipv6net",3]]]],[11,"description","","",11,[[],["str",15]]],[11,"description","","",14,[[],["str",15]]],[11,"new","","",7,[[["ipv4addr",3]]]],[11,"new","","",8,[[["ipv6addr",3]]]],[11,"trunc","","Returns a copy of the network with the address truncated …",5,[[],["ipnet",4]]],[11,"addr","","Returns the address.",5,[[],["ipaddr",4]]],[11,"prefix_len","","Returns the prefix length.",5,[[],["u8",15]]],[11,"max_prefix_len","","Returns the maximum valid prefix length.",5,[[],["u8",15]]],[11,"netmask","","Returns the network mask.",5,[[],["ipaddr",4]]],[11,"hostmask","","Returns the host mask.",5,[[],["ipaddr",4]]],[11,"network","","Returns the network address.",5,[[],["ipaddr",4]]],[11,"broadcast","","Returns the broadcast address.",5,[[],["ipaddr",4]]],[11,"supernet","","Returns the <code>IpNet</code> that contains this one.",5,[[],[["ipnet",4],["option",4]]]],[11,"is_sibling","","Returns <code>true</code> if this network and the given network are  …",5,[[["ipnet",4]],["bool",15]]],[11,"hosts","","Return an <code>Iterator</code> over the host addresses in this …",5,[[],["ipaddrrange",4]]],[11,"subnets","","Returns an <code>Iterator</code> over the subnets of this network with …",5,[[["u8",15]],[["result",4],["ipsubnets",4],["prefixlenerror",3]]]],[11,"contains","","Test if a network address contains either another network …",5,[[],["bool",15]]],[11,"aggregate","","Aggregate a <code>Vec</code> of <code>IpNet</code>s and return the result as a new …",5,[[["vec",3]],[["ipnet",4],["vec",3]]]],[11,"new","","Creates a new IPv4 network address from an <code>Ipv4Addr</code> and …",9,[[["u8",15],["ipv4addr",3]],[["prefixlenerror",3],["ipv4net",3],["result",4]]]],[11,"trunc","","Returns a copy of the network with the address truncated …",9,[[],["ipv4net",3]]],[11,"addr","","Returns the address.",9,[[],["ipv4addr",3]]],[11,"prefix_len","","Returns the prefix length.",9,[[],["u8",15]]],[11,"max_prefix_len","","Returns the maximum valid prefix length.",9,[[],["u8",15]]],[11,"netmask","","Returns the network mask.",9,[[],["ipv4addr",3]]],[11,"hostmask","","Returns the host mask.",9,[[],["ipv4addr",3]]],[11,"network","","Returns the network address.",9,[[],["ipv4addr",3]]],[11,"broadcast","","Returns the broadcast address.",9,[[],["ipv4addr",3]]],[11,"supernet","","Returns the <code>Ipv4Net</code> that contains this one.",9,[[],[["option",4],["ipv4net",3]]]],[11,"is_sibling","","Returns <code>true</code> if this network and the given network are  …",9,[[["ipv4net",3]],["bool",15]]],[11,"hosts","","Return an <code>Iterator</code> over the host addresses in this …",9,[[],["ipv4addrrange",3]]],[11,"subnets","","Returns an <code>Iterator</code> over the subnets of this network with …",9,[[["u8",15]],[["result",4],["ipv4subnets",3],["prefixlenerror",3]]]],[11,"contains","","Test if a network address contains either another network …",9,[[],["bool",15]]],[11,"aggregate","","Aggregate a <code>Vec</code> of <code>Ipv4Net</code>s and return the result as a new…",9,[[["vec",3]],[["vec",3],["ipv4net",3]]]],[11,"new","","Creates a new IPv6 network address from an <code>Ipv6Addr</code> and …",10,[[["u8",15],["ipv6addr",3]],[["result",4],["ipv6net",3],["prefixlenerror",3]]]],[11,"trunc","","Returns a copy of the network with the address truncated …",10,[[],["ipv6net",3]]],[11,"addr","","Returns the address.",10,[[],["ipv6addr",3]]],[11,"prefix_len","","Returns the prefix length.",10,[[],["u8",15]]],[11,"max_prefix_len","","Returns the maximum valid prefix length.",10,[[],["u8",15]]],[11,"netmask","","Returns the network mask.",10,[[],["ipv6addr",3]]],[11,"hostmask","","Returns the host mask.",10,[[],["ipv6addr",3]]],[11,"network","","Returns the network address.",10,[[],["ipv6addr",3]]],[11,"broadcast","","Returns the last address.",10,[[],["ipv6addr",3]]],[11,"supernet","","Returns the <code>Ipv6Net</code> that contains this one.",10,[[],[["ipv6net",3],["option",4]]]],[11,"is_sibling","","Returns <code>true</code> if this network and the given network are  …",10,[[["ipv6net",3]],["bool",15]]],[11,"hosts","","Return an <code>Iterator</code> over the host addresses in this …",10,[[],["ipv6addrrange",3]]],[11,"subnets","","Returns an <code>Iterator</code> over the subnets of this network with …",10,[[["u8",15]],[["ipv6subnets",3],["prefixlenerror",3],["result",4]]]],[11,"contains","","Test if a network address contains either another network …",10,[[],["bool",15]]],[11,"aggregate","","Aggregate a <code>Vec</code> of <code>Ipv6Net</code>s and return the result as a new…",10,[[["vec",3]],[["vec",3],["ipv6net",3]]]],[11,"new","","",12,[[["u8",15],["ipv4addr",3]]]],[11,"new","","",13,[[["u8",15],["ipv6addr",3]]]]],"p":[[8,"IpAdd"],[8,"IpSub"],[8,"IpBitAnd"],[8,"IpBitOr"],[4,"IpAddrRange"],[4,"IpNet"],[4,"IpSubnets"],[3,"Ipv4AddrRange"],[3,"Ipv6AddrRange"],[3,"Ipv4Net"],[3,"Ipv6Net"],[3,"PrefixLenError"],[3,"Ipv4Subnets"],[3,"Ipv6Subnets"],[3,"AddrParseError"]]},\
"itoa":{"doc":"github crates-io docs-rs","i":[[5,"write","itoa","Write integer to an <code>io::Write</code>.",null,[[["integer",8],["write",8]],[["result",6],["usize",15]]]],[5,"fmt","","Write integer to an <code>fmt::Write</code>.",null,[[["integer",8],["write",8]],["result",6]]],[3,"Buffer","","A safe API for formatting integers to text.",null,null],[11,"new","","This is a cheap operation; you don\'t need to worry about …",0,[[],["buffer",3]]],[11,"format","","Print an integer into this buffer and return a reference …",0,[[["integer",8]],["str",15]]],[8,"Integer","","An integer that can be formatted by <code>itoa::write</code> and …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[],["buffer",3]]]],"p":[[3,"Buffer"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","i":[[8,"LazyStatic","lazy_static","Support trait for enabling a few common operation on lazy …",null,null],[5,"initialize","","Takes a shared reference to a lazy static and initializes …",null,[[]]],[14,"lazy_static","","",null,null]],"p":[]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms\' system libraries","i":[[5,"isalnum","libc","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fmemopen","","",null,null],[5,"open_memstream","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"clearerr","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strndup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"strsignal","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"wmemchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"timegm","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"endservent","","",null,null],[5,"getservbyname","","",null,null],[5,"getservbyport","","",null,null],[5,"getservent","","",null,null],[5,"setservent","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"lockf","","",null,null],[5,"open_wmemstream","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has …",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"acct","","",null,null],[5,"wait4","","",null,null],[5,"getitimer","","",null,null],[5,"setitimer","","",null,null],[5,"regcomp","","",null,null],[5,"regexec","","",null,null],[5,"regerror","","",null,null],[5,"regfree","","",null,null],[5,"setgrent","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"chflags","","",null,null],[5,"fchflags","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"gettimeofday","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"semget","","",null,null],[5,"semctl","","",null,null],[5,"semop","","",null,null],[5,"shm_open","","",null,null],[5,"ftok","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_from_mach_thread_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"preadv","","",null,null],[5,"pwritev","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"uname","","",null,null],[5,"connectx","","",null,null],[5,"disconnectx","","",null,null],[5,"ntp_adjtime","","",null,null],[5,"ntp_gettime","","",null,null],[5,"getmntinfo","","",null,null],[5,"getfsstat","","",null,null],[5,"iconv_open","","",null,null],[5,"iconv","","",null,null],[5,"iconv_close","","",null,null],[5,"clonefile","","",null,null],[5,"clonefileat","","",null,null],[5,"fclonefileat","","",null,null],[5,"exchangedata","","",null,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[4,"DIR","","",null,null],[6,"locale_t","","",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"regoff_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",17,null],[12,"sa_family","","",17,null],[12,"sa_data","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",18,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"msghdr","","",null,null],[12,"msg_name","","",22,null],[12,"msg_namelen","","",22,null],[12,"msg_iov","","",22,null],[12,"msg_iovlen","","",22,null],[12,"msg_control","","",22,null],[12,"msg_controllen","","",22,null],[12,"msg_flags","","",22,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",23,null],[12,"cmsg_level","","",23,null],[12,"cmsg_type","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"regex_t","","",null,null],[3,"regmatch_t","","",null,null],[12,"rm_so","","",25,null],[12,"rm_eo","","",25,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",26,null],[12,"sun_family","","",26,null],[12,"sun_path","","",26,null],[3,"utsname","","",null,null],[12,"sysname","","",27,null],[12,"nodename","","",27,null],[12,"release","","",27,null],[12,"version","","",27,null],[12,"machine","","",27,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONREAD","","",null,null],[17,"FIONBIO","","",null,null],[17,"FIOASYNC","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"PATH_MAX","","",null,null],[17,"IOV_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPTOS_ECN_NOTECT","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"CLD_EXITED","","",null,null],[17,"CLD_KILLED","","",null,null],[17,"CLD_DUMPED","","",null,null],[17,"CLD_TRAPPED","","",null,null],[17,"CLD_STOPPED","","",null,null],[17,"CLD_CONTINUED","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"BIOCGBLEN","","",null,null],[17,"BIOCSBLEN","","",null,null],[17,"BIOCFLUSH","","",null,null],[17,"BIOCPROMISC","","",null,null],[17,"BIOCGDLT","","",null,null],[17,"BIOCGETIF","","",null,null],[17,"BIOCSETIF","","",null,null],[17,"BIOCGSTATS","","",null,null],[17,"BIOCIMMEDIATE","","",null,null],[17,"BIOCVERSION","","",null,null],[17,"BIOCGHDRCMPLT","","",null,null],[17,"BIOCSHDRCMPLT","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"REG_BASIC","","",null,null],[17,"REG_EXTENDED","","",null,null],[17,"REG_ICASE","","",null,null],[17,"REG_NOSUB","","",null,null],[17,"REG_NEWLINE","","",null,null],[17,"REG_NOSPEC","","",null,null],[17,"REG_PEND","","",null,null],[17,"REG_DUMP","","",null,null],[17,"REG_NOMATCH","","",null,null],[17,"REG_BADPAT","","",null,null],[17,"REG_ECOLLATE","","",null,null],[17,"REG_ECTYPE","","",null,null],[17,"REG_EESCAPE","","",null,null],[17,"REG_ESUBREG","","",null,null],[17,"REG_EBRACK","","",null,null],[17,"REG_EPAREN","","",null,null],[17,"REG_EBRACE","","",null,null],[17,"REG_BADBR","","",null,null],[17,"REG_ERANGE","","",null,null],[17,"REG_ESPACE","","",null,null],[17,"REG_BADRPT","","",null,null],[17,"REG_EMPTY","","",null,null],[17,"REG_ASSERT","","",null,null],[17,"REG_INVARG","","",null,null],[17,"REG_ATOI","","",null,null],[17,"REG_ITOA","","",null,null],[17,"REG_NOTBOL","","",null,null],[17,"REG_NOTEOL","","",null,null],[17,"REG_STARTEND","","",null,null],[17,"REG_TRACE","","",null,null],[17,"REG_LARGE","","",null,null],[17,"REG_BACKR","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"FD_CLR","","",null,[[["c_int",6]]]],[5,"FD_ISSET","","",null,[[["c_int",6]],["bool",15]]],[5,"FD_SET","","",null,[[["c_int",6]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WTERMSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFEXITED","","",null,[[["c_int",6]],["bool",15]]],[5,"WEXITSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WCOREDUMP","","",null,[[["c_int",6]],["bool",15]]],[5,"QCMD","","",null,[[["c_int",6]],["c_int",6]]],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"natural_t","","",null,null],[6,"mach_msg_type_number_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"sae_associd_t","","",null,null],[6,"sae_connid_t","","",null,null],[6,"mach_port_t","","",null,null],[6,"processor_flavor_t","","",null,null],[6,"iconv_t","","",null,null],[6,"processor_cpu_load_info_t","","",null,null],[6,"processor_cpu_load_info_data_t","","",null,null],[6,"processor_basic_info_t","","",null,null],[6,"processor_basic_info_data_t","","",null,null],[6,"processor_set_basic_info_data_t","","",null,null],[6,"processor_set_basic_info_t","","",null,null],[6,"processor_set_load_info_data_t","","",null,null],[6,"processor_set_load_info_t","","",null,null],[6,"processor_info_t","","",null,null],[6,"processor_info_array_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"vm_size_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[4,"timezone","","",null,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",28,null],[12,"imr_interface","","",28,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",29,null],[12,"aio_offset","","",29,null],[12,"aio_buf","","",29,null],[12,"aio_nbytes","","",29,null],[12,"aio_reqprio","","",29,null],[12,"aio_sigevent","","",29,null],[12,"aio_lio_opcode","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_pathv","","",30,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",31,null],[12,"ai_family","","",31,null],[12,"ai_socktype","","",31,null],[12,"ai_protocol","","",31,null],[12,"ai_addrlen","","",31,null],[12,"ai_canonname","","",31,null],[12,"ai_addr","","",31,null],[12,"ai_next","","",31,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",32,null],[12,"denom","","",32,null],[3,"stat","","",null,null],[12,"st_dev","","",33,null],[12,"st_mode","","",33,null],[12,"st_nlink","","",33,null],[12,"st_ino","","",33,null],[12,"st_uid","","",33,null],[12,"st_gid","","",33,null],[12,"st_rdev","","",33,null],[12,"st_atime","","",33,null],[12,"st_atime_nsec","","",33,null],[12,"st_mtime","","",33,null],[12,"st_mtime_nsec","","",33,null],[12,"st_ctime","","",33,null],[12,"st_ctime_nsec","","",33,null],[12,"st_birthtime","","",33,null],[12,"st_birthtime_nsec","","",33,null],[12,"st_size","","",33,null],[12,"st_blocks","","",33,null],[12,"st_blksize","","",33,null],[12,"st_flags","","",33,null],[12,"st_gen","","",33,null],[12,"st_lspare","","",33,null],[12,"st_qspare","","",33,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",34,null],[12,"si_errno","","",34,null],[12,"si_code","","",34,null],[12,"si_pid","","",34,null],[12,"si_uid","","",34,null],[12,"si_status","","",34,null],[12,"si_addr","","",34,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_size","","",36,null],[12,"ss_flags","","",36,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",37,null],[12,"fst_posmode","","",37,null],[12,"fst_offset","","",37,null],[12,"fst_length","","",37,null],[12,"fst_bytesalloc","","",37,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",38,null],[12,"ra_count","","",38,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",39,null],[12,"f_frsize","","",39,null],[12,"f_blocks","","",39,null],[12,"f_bfree","","",39,null],[12,"f_bavail","","",39,null],[12,"f_files","","",39,null],[12,"f_ffree","","",39,null],[12,"f_favail","","",39,null],[12,"f_fsid","","",39,null],[12,"f_flag","","",39,null],[12,"f_namemax","","",39,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",40,null],[12,"dli_fbase","","",40,null],[12,"dli_sname","","",40,null],[12,"dli_saddr","","",40,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",41,null],[12,"sin_family","","",41,null],[12,"sin_port","","",41,null],[12,"sin_addr","","",41,null],[12,"sin_zero","","",41,null],[3,"kevent64_s","","",null,null],[12,"ident","","",42,null],[12,"filter","","",42,null],[12,"flags","","",42,null],[12,"fflags","","",42,null],[12,"data","","",42,null],[12,"udata","","",42,null],[12,"ext","","",42,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",43,null],[12,"dqb_bsoftlimit","","",43,null],[12,"dqb_curbytes","","",43,null],[12,"dqb_ihardlimit","","",43,null],[12,"dqb_isoftlimit","","",43,null],[12,"dqb_curinodes","","",43,null],[12,"dqb_btime","","",43,null],[12,"dqb_itime","","",43,null],[12,"dqb_id","","",43,null],[12,"dqb_spare","","",43,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",44,null],[12,"ifm_version","","",44,null],[12,"ifm_type","","",44,null],[12,"ifm_addrs","","",44,null],[12,"ifm_flags","","",44,null],[12,"ifm_index","","",44,null],[12,"ifm_data","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",47,null],[12,"hdr_cnt","","",47,null],[12,"trailers","","",47,null],[12,"trl_cnt","","",47,null],[3,"lconv","","",null,null],[12,"decimal_point","","",48,null],[12,"thousands_sep","","",48,null],[12,"grouping","","",48,null],[12,"int_curr_symbol","","",48,null],[12,"currency_symbol","","",48,null],[12,"mon_decimal_point","","",48,null],[12,"mon_thousands_sep","","",48,null],[12,"mon_grouping","","",48,null],[12,"positive_sign","","",48,null],[12,"negative_sign","","",48,null],[12,"int_frac_digits","","",48,null],[12,"frac_digits","","",48,null],[12,"p_cs_precedes","","",48,null],[12,"p_sep_by_space","","",48,null],[12,"n_cs_precedes","","",48,null],[12,"n_sep_by_space","","",48,null],[12,"p_sign_posn","","",48,null],[12,"n_sign_posn","","",48,null],[12,"int_p_cs_precedes","","",48,null],[12,"int_n_cs_precedes","","",48,null],[12,"int_p_sep_by_space","","",48,null],[12,"int_n_sep_by_space","","",48,null],[12,"int_p_sign_posn","","",48,null],[12,"int_n_sign_posn","","",48,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",49,null],[12,"pti_resident_size","","",49,null],[12,"pti_total_user","","",49,null],[12,"pti_total_system","","",49,null],[12,"pti_threads_user","","",49,null],[12,"pti_threads_system","","",49,null],[12,"pti_policy","","",49,null],[12,"pti_faults","","",49,null],[12,"pti_pageins","","",49,null],[12,"pti_cow_faults","","",49,null],[12,"pti_messages_sent","","",49,null],[12,"pti_messages_received","","",49,null],[12,"pti_syscalls_mach","","",49,null],[12,"pti_syscalls_unix","","",49,null],[12,"pti_csw","","",49,null],[12,"pti_threadnum","","",49,null],[12,"pti_numrunning","","",49,null],[12,"pti_priority","","",49,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",50,null],[12,"pbi_status","","",50,null],[12,"pbi_xstatus","","",50,null],[12,"pbi_pid","","",50,null],[12,"pbi_ppid","","",50,null],[12,"pbi_uid","","",50,null],[12,"pbi_gid","","",50,null],[12,"pbi_ruid","","",50,null],[12,"pbi_rgid","","",50,null],[12,"pbi_svuid","","",50,null],[12,"pbi_svgid","","",50,null],[12,"rfu_1","","",50,null],[12,"pbi_comm","","",50,null],[12,"pbi_name","","",50,null],[12,"pbi_nfiles","","",50,null],[12,"pbi_pgid","","",50,null],[12,"pbi_pjobc","","",50,null],[12,"e_tdev","","",50,null],[12,"e_tpgid","","",50,null],[12,"pbi_nice","","",50,null],[12,"pbi_start_tvsec","","",50,null],[12,"pbi_start_tvusec","","",50,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",51,null],[12,"ptinfo","","",51,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",52,null],[12,"xsu_avail","","",52,null],[12,"xsu_used","","",52,null],[12,"xsu_pagesize","","",52,null],[12,"xsu_encrypted","","",52,null],[3,"xucred","","",null,null],[12,"cr_version","","",53,null],[12,"cr_uid","","",53,null],[12,"cr_ngroups","","",53,null],[12,"cr_groups","","",53,null],[3,"mach_header","","",null,null],[12,"magic","","",54,null],[12,"cputype","","",54,null],[12,"cpusubtype","","",54,null],[12,"filetype","","",54,null],[12,"ncmds","","",54,null],[12,"sizeofcmds","","",54,null],[12,"flags","","",54,null],[3,"mach_header_64","","",null,null],[12,"magic","","",55,null],[12,"cputype","","",55,null],[12,"cpusubtype","","",55,null],[12,"filetype","","",55,null],[12,"ncmds","","",55,null],[12,"sizeofcmds","","",55,null],[12,"flags","","",55,null],[12,"reserved","","",55,null],[3,"segment_command","","",null,null],[12,"cmd","","",56,null],[12,"cmdsize","","",56,null],[12,"segname","","",56,null],[12,"vmaddr","","",56,null],[12,"vmsize","","",56,null],[12,"fileoff","","",56,null],[12,"filesize","","",56,null],[12,"maxprot","","",56,null],[12,"initprot","","",56,null],[12,"nsects","","",56,null],[12,"flags","","",56,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",57,null],[12,"cmdsize","","",57,null],[12,"segname","","",57,null],[12,"vmaddr","","",57,null],[12,"vmsize","","",57,null],[12,"fileoff","","",57,null],[12,"filesize","","",57,null],[12,"maxprot","","",57,null],[12,"initprot","","",57,null],[12,"nsects","","",57,null],[12,"flags","","",57,null],[3,"load_command","","",null,null],[12,"cmd","","",58,null],[12,"cmdsize","","",58,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",59,null],[12,"sdl_family","","",59,null],[12,"sdl_index","","",59,null],[12,"sdl_type","","",59,null],[12,"sdl_nlen","","",59,null],[12,"sdl_alen","","",59,null],[12,"sdl_slen","","",59,null],[12,"sdl_data","","",59,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",60,null],[12,"sin_family","","",60,null],[12,"sin_port","","",60,null],[12,"sin_addr","","",60,null],[12,"sin_srcaddr","","",60,null],[12,"sin_tos","","",60,null],[12,"sin_other","","",60,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",61,null],[12,"sc_family","","",61,null],[12,"ss_sysaddr","","",61,null],[12,"sc_id","","",61,null],[12,"sc_unit","","",61,null],[12,"sc_reserved","","",61,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",62,null],[12,"ipi_spec_dst","","",62,null],[12,"ipi_addr","","",62,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",63,null],[12,"ipi6_ifindex","","",63,null],[3,"ipc_perm","","",null,null],[12,"uid","","",64,null],[12,"gid","","",64,null],[12,"cuid","","",64,null],[12,"cgid","","",64,null],[12,"mode","","",64,null],[12,"_seq","","",64,null],[12,"_key","","",64,null],[3,"sembuf","","",null,null],[12,"sem_num","","",65,null],[12,"sem_op","","",65,null],[12,"sem_flg","","",65,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",66,null],[12,"ar_pro","","",66,null],[12,"ar_hln","","",66,null],[12,"ar_pln","","",66,null],[12,"ar_op","","",66,null],[3,"in_addr","","",null,null],[12,"s_addr","","",67,null],[3,"sa_endpoints_t","","",null,null],[12,"sae_srcif","","",68,null],[12,"sae_srcaddr","","",68,null],[12,"sae_srcaddrlen","","",68,null],[12,"sae_dstaddr","","",68,null],[12,"sae_dstaddrlen","","",68,null],[3,"timex","","",null,null],[12,"modes","","",69,null],[12,"offset","","",69,null],[12,"freq","","",69,null],[12,"maxerror","","",69,null],[12,"esterror","","",69,null],[12,"status","","",69,null],[12,"constant","","",69,null],[12,"precision","","",69,null],[12,"tolerance","","",69,null],[12,"ppsfreq","","",69,null],[12,"jitter","","",69,null],[12,"shift","","",69,null],[12,"stabil","","",69,null],[12,"jitcnt","","",69,null],[12,"calcnt","","",69,null],[12,"errcnt","","",69,null],[12,"stbcnt","","",69,null],[3,"ntptimeval","","",null,null],[12,"time","","",70,null],[12,"maxerror","","",70,null],[12,"esterror","","",70,null],[12,"tai","","",70,null],[12,"time_state","","",70,null],[3,"kevent","","",null,null],[12,"ident","","",71,null],[12,"filter","","",71,null],[12,"flags","","",71,null],[12,"fflags","","",71,null],[12,"data","","",71,null],[12,"udata","","",71,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",72,null],[12,"sem_base","","",72,null],[12,"sem_nsems","","",72,null],[12,"sem_otime","","",72,null],[12,"sem_pad1","","",72,null],[12,"sem_ctime","","",72,null],[12,"sem_pad2","","",72,null],[12,"sem_pad3","","",72,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",73,null],[12,"shm_segsz","","",73,null],[12,"shm_lpid","","",73,null],[12,"shm_cpid","","",73,null],[12,"shm_nattch","","",73,null],[12,"shm_atime","","",73,null],[12,"shm_dtime","","",73,null],[12,"shm_ctime","","",73,null],[12,"shm_internal","","",73,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",74,null],[12,"pth_system_time","","",74,null],[12,"pth_cpu_usage","","",74,null],[12,"pth_policy","","",74,null],[12,"pth_run_state","","",74,null],[12,"pth_flags","","",74,null],[12,"pth_sleep_time","","",74,null],[12,"pth_curpri","","",74,null],[12,"pth_priority","","",74,null],[12,"pth_maxpriority","","",74,null],[12,"pth_name","","",74,null],[3,"statfs","","",null,null],[12,"f_bsize","","",75,null],[12,"f_iosize","","",75,null],[12,"f_blocks","","",75,null],[12,"f_bfree","","",75,null],[12,"f_bavail","","",75,null],[12,"f_files","","",75,null],[12,"f_ffree","","",75,null],[12,"f_fsid","","",75,null],[12,"f_owner","","",75,null],[12,"f_type","","",75,null],[12,"f_flags","","",75,null],[12,"f_fssubtype","","",75,null],[12,"f_fstypename","","",75,null],[12,"f_mntonname","","",75,null],[12,"f_mntfromname","","",75,null],[12,"f_reserved","","",75,null],[3,"dirent","","",null,null],[12,"d_ino","","",76,null],[12,"d_seekoff","","",76,null],[12,"d_reclen","","",76,null],[12,"d_namlen","","",76,null],[12,"d_type","","",76,null],[12,"d_name","","",76,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",77,null],[12,"ss_family","","",77,null],[3,"utmpx","","",null,null],[12,"ut_user","","",78,null],[12,"ut_id","","",78,null],[12,"ut_line","","",78,null],[12,"ut_pid","","",78,null],[12,"ut_type","","",78,null],[12,"ut_tv","","",78,null],[12,"ut_host","","",78,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",79,null],[12,"sigev_signo","","",79,null],[12,"sigev_value","","",79,null],[12,"sigev_notify_attributes","","",79,null],[3,"processor_cpu_load_info","","",null,null],[12,"cpu_ticks","","",80,null],[3,"processor_basic_info","","",null,null],[12,"cpu_type","","",81,null],[12,"cpu_subtype","","",81,null],[12,"running","","",81,null],[12,"slot_num","","",81,null],[12,"is_master","","",81,null],[3,"processor_set_basic_info","","",null,null],[12,"processor_count","","",82,null],[12,"default_policy","","",82,null],[3,"processor_set_load_info","","",null,null],[12,"task_count","","",83,null],[12,"thread_count","","",83,null],[12,"load_average","","",83,null],[12,"mach_factor","","",83,null],[19,"semun","","",null,null],[12,"val","","",84,null],[12,"buf","","",84,null],[12,"array","","",84,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_SYMLINK","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PT_TRACE_ME","","",null,null],[17,"PT_READ_I","","",null,null],[17,"PT_READ_D","","",null,null],[17,"PT_READ_U","","",null,null],[17,"PT_WRITE_I","","",null,null],[17,"PT_WRITE_D","","",null,null],[17,"PT_WRITE_U","","",null,null],[17,"PT_CONTINUE","","",null,null],[17,"PT_KILL","","",null,null],[17,"PT_STEP","","",null,null],[17,"PT_ATTACH","","",null,null],[17,"PT_DETACH","","",null,null],[17,"PT_SIGEXC","","",null,null],[17,"PT_THUPDATE","","",null,null],[17,"PT_ATTACHEXC","","",null,null],[17,"PT_FORCEQUOTA","","",null,null],[17,"PT_DENY_ATTACH","","",null,null],[17,"PT_FIRSTMACH","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"CPU_STATE_USER","","",null,null],[17,"CPU_STATE_SYSTEM","","",null,null],[17,"CPU_STATE_IDLE","","",null,null],[17,"CPU_STATE_NICE","","",null,null],[17,"CPU_STATE_MAX","","",null,null],[17,"PROCESSOR_BASIC_INFO","","",null,null],[17,"PROCESSOR_CPU_LOAD_INFO","","",null,null],[17,"PROCESSOR_PM_REGS_INFO","","",null,null],[17,"PROCESSOR_TEMPERATURE","","",null,null],[17,"PROCESSOR_SET_LOAD_INFO","","",null,null],[17,"PROCESSOR_SET_BASIC_INFO","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"BIOCGRSIG","","",null,null],[17,"BIOCSRSIG","","",null,null],[17,"BIOCSDLT","","",null,null],[17,"BIOCGSEESENT","","",null,null],[17,"BIOCSSEESENT","","",null,null],[17,"BIOCGDLTLIST","","",null,null],[17,"FIODTYPE","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\\\"hello\\\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \\\"all job for this …",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_RECVDSTADDR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_RECVIF","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_HOPLIMIT","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NOPUSH","","",null,null],[17,"TCP_NOOPT","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_FASTOPEN","","Enable/Disable TCP Fastopen on this socket",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_LINGER_SEC","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SAE_ASSOCID_ANY","","",null,null],[17,"SAE_ASSOCID_ALL","","((sae_associd_t)(-1ULL))",null,null],[17,"SAE_CONNID_ANY","","",null,null],[17,"SAE_CONNID_ALL","","((sae_connid_t)(-1ULL))",null,null],[17,"CONNECT_RESUME_ON_READ_WRITE","","resume connect() on read/write",null,null],[17,"CONNECT_DATA_IDEMPOTENT","","data is idempotent",null,null],[17,"CONNECT_DATA_AUTHENTICATED","","data includes security that replaces the TFO-cookie",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"NI_MAXSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NUMERICSCOPE","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_TARGET","","",null,null],[17,"HW_PRODUCT","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"AI_MASK","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_V4MAPPED_CFG","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_DEFAULT","","",null,null],[17,"AI_UNUSABLE","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"MNT_RDONLY","","",null,null],[17,"MNT_SYNCHRONOUS","","",null,null],[17,"MNT_NOEXEC","","",null,null],[17,"MNT_NOSUID","","",null,null],[17,"MNT_NODEV","","",null,null],[17,"MNT_UNION","","",null,null],[17,"MNT_ASYNC","","",null,null],[17,"MNT_CPROTECT","","",null,null],[17,"MNT_EXPORTED","","",null,null],[17,"MNT_QUARANTINE","","",null,null],[17,"MNT_LOCAL","","",null,null],[17,"MNT_QUOTA","","",null,null],[17,"MNT_ROOTFS","","",null,null],[17,"MNT_DOVOLFS","","",null,null],[17,"MNT_DONTBROWSE","","",null,null],[17,"MNT_IGNORE_OWNERSHIP","","",null,null],[17,"MNT_AUTOMOUNTED","","",null,null],[17,"MNT_JOURNALED","","",null,null],[17,"MNT_NOUSERXATTR","","",null,null],[17,"MNT_DEFWRITE","","",null,null],[17,"MNT_MULTILABEL","","",null,null],[17,"MNT_NOATIME","","",null,null],[17,"MNT_SNAPSHOT","","",null,null],[17,"MNT_UPDATE","","",null,null],[17,"MNT_NOBLOCK","","",null,null],[17,"MNT_RELOAD","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETEXEC","","",null,null],[17,"POSIX_SPAWN_START_SUSPENDED","","",null,null],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SEM_UNDO","","",null,null],[17,"GETNCNT","","",null,null],[17,"GETPID","","",null,null],[17,"GETVAL","","",null,null],[17,"GETALL","","",null,null],[17,"GETZCNT","","",null,null],[17,"SETVAL","","",null,null],[17,"SETALL","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"UF_SETTABLE","","",null,null],[17,"UF_NODUMP","","",null,null],[17,"UF_IMMUTABLE","","",null,null],[17,"UF_APPEND","","",null,null],[17,"UF_OPAQUE","","",null,null],[17,"UF_COMPRESSED","","",null,null],[17,"UF_TRACKED","","",null,null],[17,"SF_SETTABLE","","",null,null],[17,"SF_ARCHIVED","","",null,null],[17,"SF_IMMUTABLE","","",null,null],[17,"SF_APPEND","","",null,null],[17,"UF_HIDDEN","","",null,null],[17,"NTP_API","","",null,null],[17,"MAXPHASE","","",null,null],[17,"MAXFREQ","","",null,null],[17,"MINSEC","","",null,null],[17,"MAXSEC","","",null,null],[17,"NANOSECOND","","",null,null],[17,"SCALE_PPM","","",null,null],[17,"MAXTC","","",null,null],[17,"MOD_OFFSET","","",null,null],[17,"MOD_FREQUENCY","","",null,null],[17,"MOD_MAXERROR","","",null,null],[17,"MOD_ESTERROR","","",null,null],[17,"MOD_STATUS","","",null,null],[17,"MOD_TIMECONST","","",null,null],[17,"MOD_PPSMAX","","",null,null],[17,"MOD_TAI","","",null,null],[17,"MOD_MICRO","","",null,null],[17,"MOD_NANO","","",null,null],[17,"MOD_CLKB","","",null,null],[17,"MOD_CLKA","","",null,null],[17,"STA_PLL","","",null,null],[17,"STA_PPSFREQ","","",null,null],[17,"STA_PPSTIME","","",null,null],[17,"STA_FLL","","",null,null],[17,"STA_INS","","",null,null],[17,"STA_DEL","","",null,null],[17,"STA_UNSYNC","","",null,null],[17,"STA_FREQHOLD","","",null,null],[17,"STA_PPSSIGNAL","","",null,null],[17,"STA_PPSJITTER","","",null,null],[17,"STA_PPSWANDER","","",null,null],[17,"STA_PPSERROR","","",null,null],[17,"STA_CLOCKERR","","",null,null],[17,"STA_NANO","","",null,null],[17,"STA_MODE","","",null,null],[17,"STA_CLK","","",null,null],[17,"STA_RONLY","","",null,null],[17,"TIME_OK","","",null,null],[17,"TIME_INS","","",null,null],[17,"TIME_DEL","","",null,null],[17,"TIME_OOP","","",null,null],[17,"TIME_WAIT","","",null,null],[17,"TIME_ERROR","","",null,null],[17,"MNT_WAIT","","",null,null],[17,"MNT_NOWAIT","","",null,null],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"CMSG_LEN","","",null,[[["c_uint",6]],["c_uint",6]]],[5,"WSTOPSIG","","",null,[[["c_int",6]],["c_int",6]]],[5,"_WSTATUS","","",null,[[["c_int",6]],["c_int",6]]],[5,"WIFCONTINUED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSIGNALED","","",null,[[["c_int",6]],["bool",15]]],[5,"WIFSTOPPED","","",null,[[["c_int",6]],["bool",15]]],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",85,null],[12,"tv_usec","","",85,null],[3,"if_data","","",null,null],[12,"ifi_type","","",86,null],[12,"ifi_typelen","","",86,null],[12,"ifi_physical","","",86,null],[12,"ifi_addrlen","","",86,null],[12,"ifi_hdrlen","","",86,null],[12,"ifi_recvquota","","",86,null],[12,"ifi_xmitquota","","",86,null],[12,"ifi_unused1","","",86,null],[12,"ifi_mtu","","",86,null],[12,"ifi_metric","","",86,null],[12,"ifi_baudrate","","",86,null],[12,"ifi_ipackets","","",86,null],[12,"ifi_ierrors","","",86,null],[12,"ifi_opackets","","",86,null],[12,"ifi_oerrors","","",86,null],[12,"ifi_collisions","","",86,null],[12,"ifi_ibytes","","",86,null],[12,"ifi_obytes","","",86,null],[12,"ifi_imcasts","","",86,null],[12,"ifi_omcasts","","",86,null],[12,"ifi_iqdrops","","",86,null],[12,"ifi_noproto","","",86,null],[12,"ifi_recvtiming","","",86,null],[12,"ifi_xmittiming","","",86,null],[12,"ifi_lastchange","","",86,null],[12,"ifi_unused2","","",86,null],[12,"ifi_hwassist","","",86,null],[12,"ifi_reserved1","","",86,null],[12,"ifi_reserved2","","",86,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",87,null],[12,"bh_caplen","","",87,null],[12,"bh_datalen","","",87,null],[12,"bh_hdrlen","","",87,null],[3,"pthread_attr_t","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"BIOCSETF","","",null,null],[17,"BIOCSRTIMEOUT","","",null,null],[17,"BIOCGRTIMEOUT","","",null,null],[17,"BIOCSETFNR","","",null,null],[6,"boolean_t","","",null,null],[6,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_onstack","","",88,null],[12,"uc_sigmask","","",88,null],[12,"uc_stack","","",88,null],[12,"uc_link","","",88,null],[12,"uc_mcsize","","",88,null],[12,"uc_mcontext","","",88,null],[3,"__darwin_mcontext64","","",null,null],[12,"__es","","",89,null],[12,"__ss","","",89,null],[12,"__fs","","",89,null],[3,"__darwin_x86_exception_state64","","",null,null],[12,"__trapno","","",90,null],[12,"__cpu","","",90,null],[12,"__err","","",90,null],[12,"__faultvaddr","","",90,null],[3,"__darwin_x86_thread_state64","","",null,null],[12,"__rax","","",91,null],[12,"__rbx","","",91,null],[12,"__rcx","","",91,null],[12,"__rdx","","",91,null],[12,"__rdi","","",91,null],[12,"__rsi","","",91,null],[12,"__rbp","","",91,null],[12,"__rsp","","",91,null],[12,"__r8","","",91,null],[12,"__r9","","",91,null],[12,"__r10","","",91,null],[12,"__r11","","",91,null],[12,"__r12","","",91,null],[12,"__r13","","",91,null],[12,"__r14","","",91,null],[12,"__r15","","",91,null],[12,"__rip","","",91,null],[12,"__rflags","","",91,null],[12,"__cs","","",91,null],[12,"__fs","","",91,null],[12,"__gs","","",91,null],[3,"__darwin_x86_float_state64","","",null,null],[12,"__fpu_reserved","","",92,null],[12,"__fpu_ftw","","",92,null],[12,"__fpu_rsrv1","","",92,null],[12,"__fpu_fop","","",92,null],[12,"__fpu_ip","","",92,null],[12,"__fpu_cs","","",92,null],[12,"__fpu_rsrv2","","",92,null],[12,"__fpu_dp","","",92,null],[12,"__fpu_ds","","",92,null],[12,"__fpu_rsrv3","","",92,null],[12,"__fpu_mxcsr","","",92,null],[12,"__fpu_mxcsrmask","","",92,null],[12,"__fpu_stmm0","","",92,null],[12,"__fpu_stmm1","","",92,null],[12,"__fpu_stmm2","","",92,null],[12,"__fpu_stmm3","","",92,null],[12,"__fpu_stmm4","","",92,null],[12,"__fpu_stmm5","","",92,null],[12,"__fpu_stmm6","","",92,null],[12,"__fpu_stmm7","","",92,null],[12,"__fpu_xmm0","","",92,null],[12,"__fpu_xmm1","","",92,null],[12,"__fpu_xmm2","","",92,null],[12,"__fpu_xmm3","","",92,null],[12,"__fpu_xmm4","","",92,null],[12,"__fpu_xmm5","","",92,null],[12,"__fpu_xmm6","","",92,null],[12,"__fpu_xmm7","","",92,null],[12,"__fpu_xmm8","","",92,null],[12,"__fpu_xmm9","","",92,null],[12,"__fpu_xmm10","","",92,null],[12,"__fpu_xmm11","","",92,null],[12,"__fpu_xmm12","","",92,null],[12,"__fpu_xmm13","","",92,null],[12,"__fpu_xmm14","","",92,null],[12,"__fpu_xmm15","","",92,null],[12,"__fpu_reserved1","","",92,null],[3,"__darwin_mmst_reg","","",null,null],[12,"__mmst_reg","","",93,null],[12,"__mmst_rsrv","","",93,null],[3,"__darwin_xmm_reg","","",null,null],[12,"__xmm_reg","","",94,null],[3,"max_align_t","","",null,null],[4,"c_void","","Equivalent to C\'s <code>void</code> type when used as a pointer.",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",95,null],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"into","","",85,[[]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"into","","",86,[[]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"into","","",97,[[]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"fmt","","",111,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",108,[[],["dir",4]]],[11,"clone","","",0,[[],["group",3]]],[11,"clone","","",1,[[],["utimbuf",3]]],[11,"clone","","",2,[[],["timeval",3]]],[11,"clone","","",3,[[],["timespec",3]]],[11,"clone","","",4,[[],["rlimit",3]]],[11,"clone","","",5,[[],["rusage",3]]],[11,"clone","","",6,[[],["ipv6_mreq",3]]],[11,"clone","","",7,[[],["hostent",3]]],[11,"clone","","",8,[[],["iovec",3]]],[11,"clone","","",9,[[],["pollfd",3]]],[11,"clone","","",10,[[],["winsize",3]]],[11,"clone","","",11,[[],["linger",3]]],[11,"clone","","",12,[[],["sigval",3]]],[11,"clone","","",13,[[],["itimerval",3]]],[11,"clone","","",14,[[],["tms",3]]],[11,"clone","","",15,[[],["servent",3]]],[11,"clone","","",16,[[],["protoent",3]]],[11,"clone","","",109,[[],["file",4]]],[11,"clone","","",110,[[],["fpos_t",4]]],[11,"clone","","",17,[[],["sockaddr",3]]],[11,"clone","","",18,[[],["sockaddr_in6",3]]],[11,"clone","","",19,[[],["passwd",3]]],[11,"clone","","",20,[[],["ifaddrs",3]]],[11,"clone","","",105,[[],["fd_set",3]]],[11,"clone","","",21,[[],["tm",3]]],[11,"clone","","",22,[[],["msghdr",3]]],[11,"clone","","",23,[[],["cmsghdr",3]]],[11,"clone","","",106,[[],["fsid_t",3]]],[11,"clone","","",24,[[],["if_nameindex",3]]],[11,"clone","","",107,[[],["regex_t",3]]],[11,"clone","","",25,[[],["regmatch_t",3]]],[11,"clone","","",26,[[],["sockaddr_un",3]]],[11,"clone","","",27,[[],["utsname",3]]],[11,"clone","","",98,[[],["timezone",4]]],[11,"clone","","",28,[[],["ip_mreq",3]]],[11,"clone","","",29,[[],["aiocb",3]]],[11,"clone","","",30,[[],["glob_t",3]]],[11,"clone","","",31,[[],["addrinfo",3]]],[11,"clone","","",32,[[],["mach_timebase_info",3]]],[11,"clone","","",33,[[],["stat",3]]],[11,"clone","","",99,[[],["pthread_mutexattr_t",3]]],[11,"clone","","",100,[[],["pthread_condattr_t",3]]],[11,"clone","","",101,[[],["pthread_rwlockattr_t",3]]],[11,"clone","","",34,[[],["siginfo_t",3]]],[11,"clone","","",35,[[],["sigaction",3]]],[11,"clone","","",36,[[],["stack_t",3]]],[11,"clone","","",37,[[],["fstore_t",3]]],[11,"clone","","",38,[[],["radvisory",3]]],[11,"clone","","",39,[[],["statvfs",3]]],[11,"clone","","",40,[[],["dl_info",3]]],[11,"clone","","",41,[[],["sockaddr_in",3]]],[11,"clone","","",42,[[],["kevent64_s",3]]],[11,"clone","","",43,[[],["dqblk",3]]],[11,"clone","","",44,[[],["if_msghdr",3]]],[11,"clone","","",45,[[],["termios",3]]],[11,"clone","","",46,[[],["flock",3]]],[11,"clone","","",47,[[],["sf_hdtr",3]]],[11,"clone","","",48,[[],["lconv",3]]],[11,"clone","","",49,[[],["proc_taskinfo",3]]],[11,"clone","","",50,[[],["proc_bsdinfo",3]]],[11,"clone","","",51,[[],["proc_taskallinfo",3]]],[11,"clone","","",52,[[],["xsw_usage",3]]],[11,"clone","","",53,[[],["xucred",3]]],[11,"clone","","",54,[[],["mach_header",3]]],[11,"clone","","",55,[[],["mach_header_64",3]]],[11,"clone","","",56,[[],["segment_command",3]]],[11,"clone","","",57,[[],["segment_command_64",3]]],[11,"clone","","",58,[[],["load_command",3]]],[11,"clone","","",59,[[],["sockaddr_dl",3]]],[11,"clone","","",60,[[],["sockaddr_inarp",3]]],[11,"clone","","",61,[[],["sockaddr_ctl",3]]],[11,"clone","","",62,[[],["in_pktinfo",3]]],[11,"clone","","",63,[[],["in6_pktinfo",3]]],[11,"clone","","",64,[[],["ipc_perm",3]]],[11,"clone","","",65,[[],["sembuf",3]]],[11,"clone","","",66,[[],["arphdr",3]]],[11,"clone","","",67,[[],["in_addr",3]]],[11,"clone","","",68,[[],["sa_endpoints_t",3]]],[11,"clone","","",69,[[],["timex",3]]],[11,"clone","","",70,[[],["ntptimeval",3]]],[11,"clone","","",71,[[],["kevent",3]]],[11,"clone","","",72,[[],["semid_ds",3]]],[11,"clone","","",73,[[],["shmid_ds",3]]],[11,"clone","","",74,[[],["proc_threadinfo",3]]],[11,"clone","","",75,[[],["statfs",3]]],[11,"clone","","",76,[[],["dirent",3]]],[11,"clone","","",102,[[],["pthread_rwlock_t",3]]],[11,"clone","","",103,[[],["pthread_mutex_t",3]]],[11,"clone","","",104,[[],["pthread_cond_t",3]]],[11,"clone","","",77,[[],["sockaddr_storage",3]]],[11,"clone","","",78,[[],["utmpx",3]]],[11,"clone","","",79,[[],["sigevent",3]]],[11,"clone","","",80,[[],["processor_cpu_load_info",3]]],[11,"clone","","",81,[[],["processor_basic_info",3]]],[11,"clone","","",82,[[],["processor_set_basic_info",3]]],[11,"clone","","",83,[[],["processor_set_load_info",3]]],[11,"clone","","",84,[[],["semun",19]]],[11,"clone","","",85,[[],["timeval32",3]]],[11,"clone","","",86,[[],["if_data",3]]],[11,"clone","","",87,[[],["bpf_hdr",3]]],[11,"clone","","",97,[[],["pthread_attr_t",3]]],[11,"clone","","",88,[[],["ucontext_t",3]]],[11,"clone","","",89,[[],["__darwin_mcontext64",3]]],[11,"clone","","",90,[[],["__darwin_x86_exception_state64",3]]],[11,"clone","","",91,[[],["__darwin_x86_thread_state64",3]]],[11,"clone","","",92,[[],["__darwin_x86_float_state64",3]]],[11,"clone","","",93,[[],["__darwin_mmst_reg",3]]],[11,"clone","","",94,[[],["__darwin_xmm_reg",3]]],[11,"clone","","",96,[[],["max_align_t",3]]],[11,"clone","","",95,[[],["in6_addr",3]]],[11,"si_addr","","",34,[[]]],[11,"si_value","","",34,[[],["sigval",3]]],[11,"si_pid","","",34,[[],["pid_t",6]]],[11,"si_uid","","",34,[[],["uid_t",6]]],[11,"si_status","","",34,[[],["c_int",6]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"regmatch_t"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"sa_endpoints_t"],[3,"timex"],[3,"ntptimeval"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"processor_cpu_load_info"],[3,"processor_basic_info"],[3,"processor_set_basic_info"],[3,"processor_set_load_info"],[19,"semun"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"ucontext_t"],[3,"__darwin_mcontext64"],[3,"__darwin_x86_exception_state64"],[3,"__darwin_x86_thread_state64"],[3,"__darwin_x86_float_state64"],[3,"__darwin_mmst_reg"],[3,"__darwin_xmm_reg"],[3,"in6_addr"],[3,"max_align_t"],[3,"pthread_attr_t"],[4,"timezone"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"fd_set"],[3,"fsid_t"],[3,"regex_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"c_void"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[4,"Level","log","An enum representing the available verbosity levels of …",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.",0,[[],["levelfilter",4]]],[11,"as_str","","Returns the string representation of the <code>Level</code>.",0,[[],["str",15]]],[4,"LevelFilter","","An enum representing the available verbosity level …",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the <code>Error</code> log level.",1,null],[13,"Warn","","Corresponds to the <code>Warn</code> log level.",1,null],[13,"Info","","Corresponds to the <code>Info</code> log level.",1,null],[13,"Debug","","Corresponds to the <code>Debug</code> log level.",1,null],[13,"Trace","","Corresponds to the <code>Trace</code> log level.",1,null],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts <code>self</code> to the equivalent <code>Level</code>.",1,[[],[["option",4],["level",4]]]],[11,"as_str","","Returns the string representation of the <code>LevelFilter</code>.",1,[[],["str",15]]],[3,"Record","","The \\\"payload\\\" of a log message.",null,null],[11,"builder","","Returns a new builder.",2,[[],["recordbuilder",3]]],[11,"args","","The message body.",2,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",2,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",2,[[],["level",4]]],[11,"target","","The name of the target of the directive.",2,[[],["str",15]]],[11,"module_path","","The module path of the message.",2,[[],[["str",15],["option",4]]]],[11,"module_path_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"file","","The source file containing the message.",2,[[],[["str",15],["option",4]]]],[11,"file_static","","The module path of the message, if it is a <code>\'static</code> string.",2,[[],[["str",15],["option",4]]]],[11,"line","","The line containing the message.",2,[[],[["option",4],["u32",15]]]],[3,"RecordBuilder","","Builder for <code>Record</code>.",null,null],[11,"new","","Construct new <code>RecordBuilder</code>.",3,[[],["recordbuilder",3]]],[11,"args","","Set <code>args</code>.",3,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …",3,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set <code>Metadata::level</code>.",3,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set <code>Metadata::target</code>",3,[[["str",15]],["recordbuilder",3]]],[11,"module_path","","Set <code>module_path</code>",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set <code>module_path</code> to a <code>\'static</code> string",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file","","Set <code>file</code>",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"file_static","","Set <code>file</code> to a <code>\'static</code> string.",3,[[["str",15],["option",4]],["recordbuilder",3]]],[11,"line","","Set <code>line</code>",3,[[["option",4],["u32",15]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a <code>Record</code>",3,[[],["record",3]]],[3,"Metadata","","Metadata about a log message.",null,null],[11,"builder","","Returns a new builder.",4,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",4,[[],["level",4]]],[11,"target","","The name of the target of the directive.",4,[[],["str",15]]],[3,"MetadataBuilder","","Builder for <code>Metadata</code>.",null,null],[11,"new","","Construct a new <code>MetadataBuilder</code>.",5,[[],["metadatabuilder",3]]],[11,"level","","Setter for <code>level</code>.",5,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for <code>target</code>.",5,[[["str",15]],["metadatabuilder",3]]],[11,"build","","Returns a <code>Metadata</code> object.",5,[[],["metadata",3]]],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata …",6,[[["metadata",3]],["bool",15]]],[10,"log","","Logs the <code>Record</code>.",6,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",6,[[]]],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_logger","","Sets the global logger to a <code>&\'static Log</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of <code>set_logger</code>.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[3,"SetLoggerError","","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …",null,null],[3,"ParseLevelError","","The type returned by <code>from_str</code> when the string doesn\'t …",null,null],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["level",4]],["bool",15]]],[11,"eq","","",0,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["levelfilter",4]],["bool",15]]],[11,"eq","","",1,[[["level",4]],["bool",15]]],[11,"eq","","",4,[[["metadata",3]],["bool",15]]],[11,"ne","","",4,[[["metadata",3]],["bool",15]]],[11,"eq","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ne","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"eq","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"ne","","",8,[[["parselevelerror",3]],["bool",15]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",4,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",5,[[["metadatabuilder",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]],["bool",15]]],[11,"le","","",0,[[["level",4]],["bool",15]]],[11,"gt","","",0,[[["level",4]],["bool",15]]],[11,"ge","","",0,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"le","","",0,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",0,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",0,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"le","","",1,[[["levelfilter",4]],["bool",15]]],[11,"gt","","",1,[[["levelfilter",4]],["bool",15]]],[11,"ge","","",1,[[["levelfilter",4]],["bool",15]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]],["bool",15]]],[11,"le","","",1,[[["level",4]],["bool",15]]],[11,"gt","","",1,[[["level",4]],["bool",15]]],[11,"ge","","",1,[[["level",4]],["bool",15]]],[11,"partial_cmp","","",4,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["metadata",3]],["bool",15]]],[11,"le","","",4,[[["metadata",3]],["bool",15]]],[11,"gt","","",4,[[["metadata",3]],["bool",15]]],[11,"ge","","",4,[[["metadata",3]],["bool",15]]],[11,"partial_cmp","","",5,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"le","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"gt","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"ge","","",5,[[["metadatabuilder",3]],["bool",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["level",4]]]],[11,"from_str","","",1,[[["str",15]],[["result",4],["levelfilter",4]]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",2,[[],["record",3]]],[11,"clone","","",4,[[],["metadata",3]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"matches":{"doc":"","i":[[14,"matches","matches","Check if an expression matches a refutable pattern.",null,null],[14,"assert_matches","","Assert that an expression matches a refutable pattern.",null,null],[14,"debug_assert_matches","","Assert that an expression matches a refutable pattern …",null,null]],"p":[]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","i":[[0,"memmem","memchr","This module provides forward and reverse substring search …",null,null],[4,"Prefilter","memchr::memmem","Prefilter controls whether heuristics are used to …",null,null],[13,"None","","Never used a prefilter in substring search.",0,null],[13,"Auto","","Automatically detect whether a heuristic prefilter should …",0,null],[5,"find_iter","","Returns an iterator over all occurrences of a substring …",null,[[],["finditer",3]]],[5,"rfind_iter","","Returns a reverse iterator over all occurrences of a …",null,[[],["findreviter",3]]],[5,"find","","Returns the index of the first occurrence of the given …",null,[[],[["usize",15],["option",4]]]],[5,"rfind","","Returns the index of the last occurrence of the given …",null,[[],[["usize",15],["option",4]]]],[3,"FindIter","","An iterator over non-overlapping substring matches.",null,null],[3,"FindRevIter","","An iterator over non-overlapping substring matches in …",null,null],[3,"Finder","","A single substring searcher fixed to a particular needle.",null,null],[11,"new","","Create a new finder for the given needle.",1,[[],["finder",3]]],[11,"find","","Returns the index of the first occurrence of this needle …",1,[[],[["usize",15],["option",4]]]],[11,"find_iter","","Returns an iterator over all occurrences of a substring …",1,[[],["finditer",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it …",1,[[],["finder",3]]],[11,"as_ref","","Convert this finder into its borrowed variant.",1,[[],["finder",3]]],[11,"needle","","Returns the needle that this finder searches for.",1,[[]]],[3,"FinderRev","","A single substring reverse searcher fixed to a particular …",null,null],[11,"new","","Create a new reverse finder for the given needle.",2,[[],["finderrev",3]]],[11,"rfind","","Returns the index of the last occurrence of this needle …",2,[[["asref",8]],[["usize",15],["option",4]]]],[11,"rfind_iter","","Returns a reverse iterator over all occurrences of a …",2,[[],["findreviter",3]]],[11,"into_owned","","Convert this finder into its owned variant, such that it …",2,[[],["finderrev",3]]],[11,"as_ref","","Convert this finder into its borrowed variant.",2,[[],["finderrev",3]]],[11,"needle","","Returns the needle that this finder searches for.",2,[[]]],[3,"FinderBuilder","","A builder for constructing non-default forward or reverse …",null,null],[11,"new","","Create a new finder builder with default settings.",3,[[],["finderbuilder",3]]],[11,"build_forward","","Build a forward finder using the given needle from the …",3,[[],["finder",3]]],[11,"build_reverse","","Build a reverse finder using the given needle from the …",3,[[],["finderrev",3]]],[11,"prefilter","","Configure the prefilter setting for the finder.",3,[[["prefilter",4]],["finderbuilder",3]]],[5,"memchr","memchr","Search for the first occurrence of a byte in a slice.",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr2","","Like <code>memchr</code>, but searches for either of two bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],["memchr2",3]]],[5,"memchr3","","Like <code>memchr</code>, but searches for any of three bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],["memchr3",3]]],[5,"memchr_iter","","An iterator over all occurrences of the needle in a …",null,[[["u8",15]],["memchr",3]]],[5,"memrchr","","Search for the last occurrence of a byte in a slice.",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr2","","Like <code>memrchr</code>, but searches for either of two bytes …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr2_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],[["rev",3],["memchr2",3]]]],[5,"memrchr3","","Like <code>memrchr</code>, but searches for any of three bytes instead …",null,[[["u8",15]],[["usize",15],["option",4]]]],[5,"memrchr3_iter","","An iterator over all occurrences of the needles in a …",null,[[["u8",15]],[["memchr3",3],["rev",3]]]],[5,"memrchr_iter","","An iterator over all occurrences of the needle in a …",null,[[["u8",15]],[["rev",3],["memchr",3]]]],[3,"Memchr","","An iterator for <code>memchr</code>.",null,null],[3,"Memchr2","","An iterator for <code>memchr2</code>.",null,null],[3,"Memchr3","","An iterator for <code>memchr3</code>.",null,null],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","memchr::memmem","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"next_back","memchr","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",6,[[],["option",4]]],[11,"next","","",4,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",5,[[]]],[11,"next","","",6,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",6,[[]]],[11,"next","memchr::memmem","",7,[[],[["usize",15],["option",4]]]],[11,"next","","",8,[[],[["usize",15],["option",4]]]],[11,"clone","","",0,[[],["prefilter",4]]],[11,"clone","","",1,[[],["finder",3]]],[11,"clone","","",2,[[],["finderrev",3]]],[11,"clone","","",3,[[],["finderbuilder",3]]],[11,"default","","",0,[[],["prefilter",4]]],[11,"default","","",3,[[],["finderbuilder",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"new","memchr","Creates a new iterator that yields all positions of …",4,[[["u8",15]],["memchr",3]]],[11,"new","","Creates a new iterator that yields all positions of …",5,[[["u8",15]],["memchr2",3]]],[11,"new","","Create a new <code>Memchr3</code> that\'s initialized to zero with a …",6,[[["u8",15]],["memchr3",3]]]],"p":[[4,"Prefilter"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[3,"FindIter"],[3,"FindRevIter"]]},\
"mime":{"doc":"MimeMime is now Media Type, technically, but <code>Mime</code> is more …","i":[[3,"Mime","mime","A parsed mime or media type.",null,null],[3,"Name","","A section of a <code>Mime</code>.",null,null],[3,"FromStrError","","An error when parsing a <code>Mime</code> from a string.",null,null],[11,"type_","","Get the top level media type for this <code>Mime</code>.",0,[[],["name",3]]],[11,"subtype","","Get the subtype of this <code>Mime</code>.",0,[[],["name",3]]],[11,"suffix","","Get an optional +suffix for this <code>Mime</code>.",0,[[],[["option",4],["name",3]]]],[11,"get_param","","Look up a parameter by name.",0,[[],[["name",3],["option",4]]]],[11,"params","","Returns an iterator over the parameters.",0,[[],["params",3]]],[11,"essence_str","","Return a <code>&str</code> of the Mime\'s \\\"essence\\\".",0,[[],["str",15]]],[11,"as_str","","Get the value of this <code>Name</code> as a string.",1,[[],["str",15]]],[3,"Params","","An iterator over the parameters of a MIME.",null,null],[17,"STAR","","",null,null],[17,"TEXT","","text",null,null],[17,"IMAGE","","image",null,null],[17,"AUDIO","","audio",null,null],[17,"VIDEO","","video",null,null],[17,"APPLICATION","","application",null,null],[17,"MULTIPART","","multipart",null,null],[17,"MESSAGE","","message",null,null],[17,"MODEL","","model",null,null],[17,"FONT","","font",null,null],[17,"PLAIN","","plain",null,null],[17,"HTML","","html",null,null],[17,"XML","","xml",null,null],[17,"JAVASCRIPT","","javascript",null,null],[17,"CSS","","css",null,null],[17,"CSV","","csv",null,null],[17,"EVENT_STREAM","","event-stream",null,null],[17,"VCARD","","vcard",null,null],[17,"JSON","","json",null,null],[17,"WWW_FORM_URLENCODED","","x-www-form-urlencoded",null,null],[17,"MSGPACK","","msgpack",null,null],[17,"OCTET_STREAM","","octet-stream",null,null],[17,"PDF","","pdf",null,null],[17,"WOFF","","woff",null,null],[17,"WOFF2","","woff2",null,null],[17,"FORM_DATA","","form-data",null,null],[17,"BMP","","bmp",null,null],[17,"GIF","","gif",null,null],[17,"JPEG","","jpeg",null,null],[17,"PNG","","png",null,null],[17,"SVG","","svg",null,null],[17,"BASIC","","basic",null,null],[17,"MPEG","","mpeg",null,null],[17,"MP4","","mp4",null,null],[17,"OGG","","ogg",null,null],[17,"CHARSET","","charset",null,null],[17,"BOUNDARY","","boundary",null,null],[17,"UTF_8","","utf-8",null,null],[17,"STAR_STAR","","<code>*/*</code>",null,null],[17,"TEXT_STAR","","<code>text/*</code>",null,null],[17,"TEXT_PLAIN","","<code>text/plain</code>",null,null],[17,"TEXT_PLAIN_UTF_8","","<code>text/plain; charset=utf-8</code>",null,null],[17,"TEXT_HTML","","<code>text/html</code>",null,null],[17,"TEXT_HTML_UTF_8","","<code>text/html; charset=utf-8</code>",null,null],[17,"TEXT_CSS","","<code>text/css</code>",null,null],[17,"TEXT_CSS_UTF_8","","<code>text/css; charset=utf-8</code>",null,null],[17,"TEXT_JAVASCRIPT","","<code>text/javascript</code>",null,null],[17,"TEXT_XML","","<code>text/xml</code>",null,null],[17,"TEXT_EVENT_STREAM","","<code>text/event-stream</code>",null,null],[17,"TEXT_CSV","","<code>text/csv</code>",null,null],[17,"TEXT_CSV_UTF_8","","<code>text/csv; charset=utf-8</code>",null,null],[17,"TEXT_TAB_SEPARATED_VALUES","","<code>text/tab-separated-values</code>",null,null],[17,"TEXT_TAB_SEPARATED_VALUES_UTF_8","","<code>text/tab-separated-values; charset=utf-8</code>",null,null],[17,"TEXT_VCARD","","<code>text/vcard</code>",null,null],[17,"IMAGE_STAR","","<code>image/*</code>",null,null],[17,"IMAGE_JPEG","","<code>image/jpeg</code>",null,null],[17,"IMAGE_GIF","","<code>image/gif</code>",null,null],[17,"IMAGE_PNG","","<code>image/png</code>",null,null],[17,"IMAGE_BMP","","<code>image/bmp</code>",null,null],[17,"IMAGE_SVG","","<code>image/svg+xml</code>",null,null],[17,"FONT_WOFF","","<code>font/woff</code>",null,null],[17,"FONT_WOFF2","","<code>font/woff2</code>",null,null],[17,"APPLICATION_JSON","","<code>application/json</code>",null,null],[17,"APPLICATION_JAVASCRIPT","","<code>application/javascript</code>",null,null],[17,"APPLICATION_JAVASCRIPT_UTF_8","","<code>application/javascript; charset=utf-8</code>",null,null],[17,"APPLICATION_WWW_FORM_URLENCODED","","<code>application/x-www-form-urlencoded</code>",null,null],[17,"APPLICATION_OCTET_STREAM","","<code>application/octet-stream</code>",null,null],[17,"APPLICATION_MSGPACK","","<code>application/msgpack</code>",null,null],[17,"APPLICATION_PDF","","<code>application/pdf</code>",null,null],[17,"MULTIPART_FORM_DATA","","<code>multipart/form-data</code>",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"as_ref","","",0,[[],["str",15]]],[11,"as_ref","","",1,[[],["str",15]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"clone","","",0,[[],["mime",3]]],[11,"clone","","",1,[[],["name",3]]],[11,"cmp","","",1,[[["name",3]],["ordering",4]]],[11,"cmp","","",0,[[["mime",3]],["ordering",4]]],[11,"eq","","",1,[[["name",3]],["bool",15]]],[11,"ne","","",1,[[["name",3]],["bool",15]]],[11,"eq","","",0,[[["mime",3]],["bool",15]]],[11,"eq","","",0,[[["str",15]],["bool",15]]],[11,"eq","","",1,[[["str",15]],["bool",15]]],[11,"partial_cmp","","",1,[[["name",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["name",3]],["bool",15]]],[11,"le","","",1,[[["name",3]],["bool",15]]],[11,"gt","","",1,[[["name",3]],["bool",15]]],[11,"ge","","",1,[[["name",3]],["bool",15]]],[11,"partial_cmp","","",0,[[["mime",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","",0,[[["str",15]],[["mime",3],["result",4]]]],[11,"description","","",2,[[],["str",15]]]],"p":[[3,"Mime"],[3,"Name"],[3,"FromStrError"],[3,"Params"]]},\
"mime_guess":{"doc":"Guessing of MIME types by file extension.","i":[[3,"Mime","mime_guess","A parsed mime or media type.",null,null],[3,"MimeGuess","","A \\\"guess\\\" of the MIME/Media Type(s) of an extension or …",null,null],[11,"from_ext","","Guess the MIME type of a file (real or otherwise) with …",0,[[["str",15]],["mimeguess",3]]],[11,"from_path","","Guess the MIME type of <code>path</code> by its extension (as defined …",0,[[["asref",8],["path",3]],["mimeguess",3]]],[11,"is_empty","","<code>true</code> if the guess did not return any known mappings for …",0,[[],["bool",15]]],[11,"count","","Get the number of MIME types in the current guess.",0,[[],["usize",15]]],[11,"first","","Get the first guessed <code>Mime</code>, if applicable.",0,[[],[["option",4],["mime",3]]]],[11,"first_raw","","Get the first guessed Media Type as a string, if …",0,[[],[["str",15],["option",4]]]],[11,"first_or_octet_stream","","Get the first guessed <code>Mime</code>, or if the guess is empty, …",0,[[],["mime",3]]],[11,"first_or_text_plain","","Get the first guessed <code>Mime</code>, or if the guess is empty, …",0,[[],["mime",3]]],[11,"first_or","","Get the first guessed <code>Mime</code>, or if the guess is empty, …",0,[[["mime",3]],["mime",3]]],[11,"first_or_else","","Get the first guessed <code>Mime</code>, or if the guess is empty, …",0,[[],["mime",3]]],[11,"iter","","Get an iterator over the <code>Mime</code> values contained in this …",0,[[],["iter",3]]],[11,"iter_raw","","Get an iterator over the raw media-type strings in this …",0,[[],["iterraw",3]]],[3,"Iter","","An iterator over the <code>Mime</code> types of a <code>MimeGuess</code>.",null,null],[3,"IterRaw","","An iterator over the raw media type strings of a <code>MimeGuess</code>…",null,null],[5,"from_ext","","Wrapper of <code>MimeGuess::from_ext()</code>.",null,[[["str",15]],["mimeguess",3]]],[5,"from_path","","Wrapper of <code>MimeGuess::from_path()</code>.",null,[[["asref",8],["path",3]],["mimeguess",3]]],[5,"guess_mime_type","","Guess the MIME type of <code>path</code> by its extension (as defined …",null,[[["asref",8],["path",3]],["mime",3]]],[5,"guess_mime_type_opt","","Guess the MIME type of <code>path</code> by its extension (as defined …",null,[[["asref",8],["path",3]],[["option",4],["mime",3]]]],[5,"mime_str_for_path_ext","","Guess the MIME type string of <code>path</code> by its extension (as …",null,[[["asref",8],["path",3]],[["str",15],["option",4]]]],[5,"get_mime_type","","Get the MIME type associated with a file extension.",null,[[["str",15]],["mime",3]]],[5,"get_mime_type_opt","","Get the MIME type associated with a file extension.",null,[[["str",15]],[["option",4],["mime",3]]]],[5,"get_mime_type_str","","Get the MIME type string associated with a file …",null,[[["str",15]],[["str",15],["option",4]]]],[5,"octet_stream","","Get the MIME type for <code>application/octet-stream</code> (generic …",null,[[],["mime",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",1,[[]]],[11,"partial_cmp","","",1,[[["mime",3]],[["option",4],["ordering",4]]]],[11,"as_ref","","",1,[[],["str",15]]],[11,"clone","","",1,[[],["mime",3]]],[11,"cmp","","",1,[[["mime",3]],["ordering",4]]],[11,"eq","","",1,[[["str",15]],["bool",15]]],[11,"eq","","",1,[[["mime",3]],["bool",15]]],[11,"from_str","","",1,[[["str",15]],[["mime",3],["result",4]]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"len","","",2,[[],["usize",15]]],[11,"len","","",3,[[],["usize",15]]],[11,"into_iter","","",0,[[]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"clone","","",0,[[],["mimeguess",3]]],[11,"clone","","",2,[[],["iter",3]]],[11,"clone","","",3,[[],["iterraw",3]]],[11,"eq","","",0,[[["mimeguess",3]],["bool",15]]],[11,"ne","","",0,[[["mimeguess",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"type_","","Get the top level media type for this <code>Mime</code>.",1,[[],["name",3]]],[11,"subtype","","Get the subtype of this <code>Mime</code>.",1,[[],["name",3]]],[11,"suffix","","Get an optional +suffix for this <code>Mime</code>.",1,[[],[["option",4],["name",3]]]],[11,"get_param","","Look up a parameter by name.",1,[[],[["option",4],["name",3]]]],[11,"params","","Returns an iterator over the parameters.",1,[[],["params",3]]],[11,"essence_str","","Return a <code>&str</code> of the Mime\'s \\\"essence\\\".",1,[[],["str",15]]]],"p":[[3,"MimeGuess"],[3,"Mime"],[3,"Iter"],[3,"IterRaw"]]},\
"mio":{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","i":[[0,"event","mio","Readiness event types and utilities.",null,null],[3,"Event","mio::event","A readiness event.",null,null],[3,"Events","","A collection of readiness events.",null,null],[3,"Iter","","<code>Events</code> iterator.",null,null],[8,"Source","","An event source that may be registered with <code>Registry</code>.",null,null],[10,"register","","Register <code>self</code> with the given <code>Registry</code> instance.",0,[[["registry",3],["token",3],["interest",3]],["result",6]]],[10,"reregister","","Re-register <code>self</code> with the given <code>Registry</code> instance.",0,[[["registry",3],["token",3],["interest",3]],["result",6]]],[10,"deregister","","Deregister <code>self</code> from the given <code>Registry</code> instance.",0,[[["registry",3]],["result",6]]],[0,"net","mio","Networking primitives.",null,null],[3,"TcpListener","mio::net","A structure representing a socket server",null,null],[3,"TcpSocket","","A non-blocking TCP socket used to configure a stream or …",null,null],[3,"TcpStream","","A non-blocking TCP stream between a local socket and a …",null,null],[3,"TcpKeepalive","","Configures a socket\'s TCP keepalive parameters.",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[3,"SocketAddr","","An address associated with a <code>mio</code> specific Unix socket.",null,null],[3,"UnixDatagram","","A Unix datagram socket.",null,null],[3,"UnixListener","","A non-blocking Unix domain socket server.",null,null],[3,"UnixStream","","A non-blocking Unix stream socket.",null,null],[0,"unix","mio","Unix only extensions.",null,null],[0,"pipe","mio::unix","Unix pipe.",null,null],[5,"new","mio::unix::pipe","Create a new non-blocking Unix pipe.",null,[[],["result",6]]],[3,"Receiver","","Receiving end of an Unix pipe.",null,null],[3,"Sender","","Sending end of an Unix pipe.",null,null],[3,"SourceFd","mio::unix","Adapter for [<code>RawFd</code>] providing an <code>event::Source</code> …",null,null],[12,"0","","",1,null],[0,"features","mio","Mio\'s optional features.This document describes the …",null,null],[0,"guide","","Getting started guide.In this guide we\'ll do the …",null,null],[3,"Interest","","Interest used in registering.",null,null],[3,"Poll","","Polls for readiness events on all registered values.",null,null],[3,"Registry","","Registers I/O resources.",null,null],[3,"Token","","Associates readiness events with <code>event::Source</code>s.",null,null],[12,"0","","",2,null],[3,"Waker","","Waker allows cross-thread waking of <code>Poll</code>.",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","mio::unix","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","mio::net","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","mio::unix::pipe","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","mio","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","mio::event","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","mio::net","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"register","mio::unix","",1,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",1,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",1,[[["registry",3]],["result",6]]],[11,"register","mio::unix::pipe","",7,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",7,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",7,[[["registry",3]],["result",6]]],[11,"register","","",8,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",8,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",8,[[["registry",3]],["result",6]]],[11,"register","mio::net","",13,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",13,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",13,[[["registry",3]],["result",6]]],[11,"register","","",16,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",16,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",16,[[["registry",3]],["result",6]]],[11,"register","","",17,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",17,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",17,[[["registry",3]],["result",6]]],[11,"register","","",18,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",18,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",18,[[["registry",3]],["result",6]]],[11,"register","","",19,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",19,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",19,[[["registry",3]],["result",6]]],[11,"register","","",20,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"reregister","","",20,[[["registry",3],["token",3],["interest",3]],["result",6]]],[11,"deregister","","",20,[[["registry",3]],["result",6]]],[11,"drop","","",14,[[]]],[11,"from","mio::unix::pipe","",7,[[["childstdin",3]],["sender",3]]],[11,"from","","",8,[[["childstdout",3]],["receiver",3]]],[11,"from","","",8,[[["childstderr",3]],["receiver",3]]],[11,"next","mio::event","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"count","","",12,[[],["usize",15]]],[11,"clone","mio","",3,[[],["interest",3]]],[11,"clone","","",2,[[],["token",3]]],[11,"clone","mio::event","",10,[[],["event",3]]],[11,"clone","","",12,[[],["iter",3]]],[11,"clone","mio::net","",15,[[],["tcpkeepalive",3]]],[11,"default","","",15,[[],["tcpkeepalive",3]]],[11,"cmp","mio","",3,[[["interest",3]],["ordering",4]]],[11,"cmp","","",2,[[["token",3]],["ordering",4]]],[11,"eq","","",3,[[["interest",3]],["bool",15]]],[11,"ne","","",3,[[["interest",3]],["bool",15]]],[11,"eq","","",2,[[["token",3]],["bool",15]]],[11,"ne","","",2,[[["token",3]],["bool",15]]],[11,"partial_cmp","","",3,[[["interest",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["interest",3]],["bool",15]]],[11,"le","","",3,[[["interest",3]],["bool",15]]],[11,"gt","","",3,[[["interest",3]],["bool",15]]],[11,"ge","","",3,[[["interest",3]],["bool",15]]],[11,"partial_cmp","","",2,[[["token",3]],[["option",4],["ordering",4]]]],[11,"lt","","",2,[[["token",3]],["bool",15]]],[11,"le","","",2,[[["token",3]],["bool",15]]],[11,"gt","","",2,[[["token",3]],["bool",15]]],[11,"ge","","",2,[[["token",3]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","mio::unix","",1,[[["formatter",3]],["result",6]]],[11,"fmt","mio::net","",6,[[["formatter",3]],["result",6]]],[11,"fmt","mio::unix::pipe","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","mio","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","mio::event","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","mio::net","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"bitor","mio","",3,[[]]],[11,"bitor_assign","","",3,[[]]],[11,"hash","","",2,[[]]],[11,"read","mio::unix::pipe","",8,[[],[["result",6],["usize",15]]]],[11,"read_vectored","","",8,[[],[["result",6],["usize",15]]]],[11,"read","mio::net","",16,[[],[["result",6],["usize",15]]]],[11,"read_vectored","","",16,[[],[["result",6],["usize",15]]]],[11,"read","","",20,[[],[["result",6],["usize",15]]]],[11,"read_vectored","","",20,[[],[["result",6],["usize",15]]]],[11,"write","mio::unix::pipe","",7,[[],[["result",6],["usize",15]]]],[11,"write_vectored","","",7,[[],[["result",6],["usize",15]]]],[11,"flush","","",7,[[],["result",6]]],[11,"write","mio::net","",16,[[],[["result",6],["usize",15]]]],[11,"write_vectored","","",16,[[],[["result",6],["usize",15]]]],[11,"flush","","",16,[[],["result",6]]],[11,"write","","",20,[[],[["result",6],["usize",15]]]],[11,"write_vectored","","",20,[[],[["result",6],["usize",15]]]],[11,"flush","","",20,[[],["result",6]]],[11,"as_raw_fd","mio","",4,[[],["rawfd",6]]],[11,"as_raw_fd","","",5,[[],["rawfd",6]]],[11,"as_raw_fd","mio::unix::pipe","",7,[[],["rawfd",6]]],[11,"as_raw_fd","","",8,[[],["rawfd",6]]],[11,"as_raw_fd","mio::net","",13,[[],["rawfd",6]]],[11,"as_raw_fd","","",14,[[],["rawfd",6]]],[11,"as_raw_fd","","",16,[[],["rawfd",6]]],[11,"as_raw_fd","","",17,[[],["rawfd",6]]],[11,"as_raw_fd","","",18,[[],["rawfd",6]]],[11,"as_raw_fd","","",19,[[],["rawfd",6]]],[11,"as_raw_fd","","",20,[[],["rawfd",6]]],[11,"from_raw_fd","mio::unix::pipe","",7,[[["rawfd",6]],["sender",3]]],[11,"from_raw_fd","","",8,[[["rawfd",6]],["receiver",3]]],[11,"from_raw_fd","mio::net","Converts a <code>RawFd</code> to a <code>TcpListener</code>.",13,[[["rawfd",6]],["tcplistener",3]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>TcpSocket</code>.",14,[[["rawfd",6]],["tcpsocket",3]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>TcpStream</code>.",16,[[["rawfd",6]],["tcpstream",3]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>UdpSocket</code>.",17,[[["rawfd",6]],["udpsocket",3]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>UnixDatagram</code>.",18,[[["rawfd",6]],["unixdatagram",3]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>UnixListener</code>.",19,[[["rawfd",6]],["unixlistener",3]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>UnixStream</code>.",20,[[["rawfd",6]],["unixstream",3]]],[11,"into_raw_fd","mio::unix::pipe","",7,[[],["rawfd",6]]],[11,"into_raw_fd","","",8,[[],["rawfd",6]]],[11,"into_raw_fd","mio::net","",13,[[],["rawfd",6]]],[11,"into_raw_fd","","",14,[[],["rawfd",6]]],[11,"into_raw_fd","","",16,[[],["rawfd",6]]],[11,"into_raw_fd","","",17,[[],["rawfd",6]]],[11,"into_raw_fd","","",18,[[],["rawfd",6]]],[11,"into_raw_fd","","",19,[[],["rawfd",6]]],[11,"into_raw_fd","","",20,[[],["rawfd",6]]],[18,"READABLE","mio","Returns a <code>Interest</code> set representing readable interests.",3,null],[18,"WRITABLE","","Returns a <code>Interest</code> set representing writable interests.",3,null],[18,"AIO","","Returns a <code>Interest</code> set representing AIO completion …",3,null],[11,"add","","Add together two <code>Interest</code>.",3,[[["interest",3]],["interest",3]]],[11,"remove","","Removes <code>other</code> <code>Interest</code> from <code>self</code>.",3,[[["interest",3]],[["option",4],["interest",3]]]],[11,"is_readable","","Returns true if the value includes readable readiness.",3,[[],["bool",15]]],[11,"is_writable","","Returns true if the value includes writable readiness.",3,[[],["bool",15]]],[11,"is_aio","","Returns true if <code>Interest</code> contains AIO readiness",3,[[],["bool",15]]],[11,"is_lio","","Returns true if <code>Interest</code> contains LIO readiness",3,[[],["bool",15]]],[11,"registry","","Create a separate <code>Registry</code> which can be used to register …",4,[[],["registry",3]]],[11,"poll","","Wait for readiness events",4,[[["duration",3],["events",3],["option",4]],["result",6]]],[11,"new","","Return a new <code>Poll</code> handle.",4,[[],[["result",6],["poll",3]]]],[11,"register","","Register an <code>event::Source</code> with the <code>Poll</code> instance.",5,[[["token",3],["interest",3]],["result",6]]],[11,"reregister","","Re-register an [<code>event::Source</code>] with the <code>Poll</code> instance.",5,[[["token",3],["interest",3]],["result",6]]],[11,"deregister","","Deregister an [<code>event::Source</code>] with the <code>Poll</code> instance.",5,[[],["result",6]]],[11,"try_clone","","Creates a new independently owned <code>Registry</code>.",5,[[],[["result",6],["registry",3]]]],[11,"is_unnamed","mio::net","Returns <code>true</code> if the address is unnamed.",6,[[],["bool",15]]],[11,"as_pathname","","Returns the contents of this address if it is a <code>pathname</code> …",6,[[],[["option",4],["path",3]]]],[11,"set_nonblocking","mio::unix::pipe","Set the <code>Sender</code> into or out of non-blocking mode.",7,[[["bool",15]],["result",6]]],[11,"set_nonblocking","","Set the <code>Receiver</code> into or out of non-blocking mode.",8,[[["bool",15]],["result",6]]],[11,"new","mio","Create a new <code>Waker</code>.",9,[[["registry",3],["token",3]],[["waker",3],["result",6]]]],[11,"wake","","Wake up the <code>Poll</code> associated with this <code>Waker</code>.",9,[[],["result",6]]],[11,"token","mio::event","Returns the event\'s token.",10,[[],["token",3]]],[11,"is_readable","","Returns true if the event contains readable readiness.",10,[[],["bool",15]]],[11,"is_writable","","Returns true if the event contains writable readiness.",10,[[],["bool",15]]],[11,"is_error","","Returns true if the event contains error readiness.",10,[[],["bool",15]]],[11,"is_read_closed","","Returns true if the event contains read closed readiness.",10,[[],["bool",15]]],[11,"is_write_closed","","Returns true if the event contains write closed readiness.",10,[[],["bool",15]]],[11,"is_priority","","Returns true if the event contains priority readiness.",10,[[],["bool",15]]],[11,"is_aio","","Returns true if the event contains AIO readiness.",10,[[],["bool",15]]],[11,"is_lio","","Returns true if the event contains LIO readiness.",10,[[],["bool",15]]],[11,"with_capacity","","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …",11,[[["usize",15]],["events",3]]],[11,"capacity","","Returns the number of <code>Event</code> values that <code>self</code> can hold.",11,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.",11,[[],["bool",15]]],[11,"iter","","Returns an iterator over the <code>Event</code> values.",11,[[],["iter",3]]],[11,"clear","","Clearing all <code>Event</code> values from container explicitly.",11,[[]]],[11,"bind","mio::net","Convenience method to bind a new TCP listener to the …",13,[[["socketaddr",4]],[["result",6],["tcplistener",3]]]],[11,"from_std","","Creates a new <code>TcpListener</code> from a standard <code>net::TcpListener</code>…",13,[[["tcplistener",3]],["tcplistener",3]]],[11,"accept","","Accepts a new <code>TcpStream</code>.",13,[[],["result",6]]],[11,"local_addr","","Returns the local socket address of this listener.",13,[[],[["socketaddr",4],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",13,[[["u32",15]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",13,[[],[["result",6],["u32",15]]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",13,[[],[["result",6],["option",4]]]],[11,"new_v4","","Create a new IPv4 TCP socket.",14,[[],[["tcpsocket",3],["result",6]]]],[11,"new_v6","","Create a new IPv6 TCP socket.",14,[[],[["tcpsocket",3],["result",6]]]],[11,"bind","","Bind <code>addr</code> to the TCP socket.",14,[[["socketaddr",4]],["result",6]]],[11,"connect","","Connect the socket to <code>addr</code>.",14,[[["socketaddr",4]],[["tcpstream",3],["result",6]]]],[11,"listen","","Listen for inbound connections, converting the socket to a…",14,[[["u32",15]],[["result",6],["tcplistener",3]]]],[11,"set_reuseaddr","","Sets the value of <code>SO_REUSEADDR</code> on this socket.",14,[[["bool",15]],["result",6]]],[11,"get_reuseaddr","","Get the value of <code>SO_REUSEADDR</code> set on this socket.",14,[[],[["result",6],["bool",15]]]],[11,"set_reuseport","","Sets the value of <code>SO_REUSEPORT</code> on this socket. Only …",14,[[["bool",15]],["result",6]]],[11,"get_reuseport","","Get the value of <code>SO_REUSEPORT</code> set on this socket. Only …",14,[[],[["result",6],["bool",15]]]],[11,"set_linger","","Sets the value of <code>SO_LINGER</code> on this socket.",14,[[["duration",3],["option",4]],["result",6]]],[11,"get_linger","","Gets the value of <code>SO_LINGER</code> on this socket",14,[[],[["result",6],["option",4]]]],[11,"set_recv_buffer_size","","Sets the value of <code>SO_RCVBUF</code> on this socket.",14,[[["u32",15]],["result",6]]],[11,"get_recv_buffer_size","","Get the value of <code>SO_RCVBUF</code> set on this socket.",14,[[],[["result",6],["u32",15]]]],[11,"set_send_buffer_size","","Sets the value of <code>SO_SNDBUF</code> on this socket.",14,[[["u32",15]],["result",6]]],[11,"get_send_buffer_size","","Get the value of <code>SO_SNDBUF</code> set on this socket.",14,[[],[["result",6],["u32",15]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on …",14,[[["bool",15]],["result",6]]],[11,"get_keepalive","","Returns whether or not TCP keepalive probes will be sent …",14,[[],[["result",6],["bool",15]]]],[11,"set_keepalive_params","","Sets parameters configuring TCP keepalive probes for this …",14,[[["tcpkeepalive",3]],["result",6]]],[11,"get_keepalive_time","","Returns the amount of time after which TCP keepalive …",14,[[],[["result",6],["option",4]]]],[11,"get_keepalive_interval","","Returns the time interval between TCP keepalive probes, …",14,[[],[["result",6],["option",4]]]],[11,"get_keepalive_retries","","Returns the maximum number of TCP keepalive probes that …",14,[[],[["result",6],["option",4]]]],[11,"get_localaddr","","Returns the local address of this socket",14,[[],[["socketaddr",4],["result",6]]]],[11,"with_time","","on idle connections.",15,[[["duration",3]]]],[11,"with_interval","","Sets the time interval between TCP keepalive probes. This …",15,[[["duration",3]]]],[11,"with_retries","","Sets the maximum number of TCP keepalive probes that will …",15,[[["u32",15]]]],[11,"new","","Returns a new, empty set of TCP keepalive parameters.",15,[[]]],[11,"connect","","Create a new TCP stream and issue a non-blocking connect …",16,[[["socketaddr",4]],[["tcpstream",3],["result",6]]]],[11,"from_std","","Creates a new <code>TcpStream</code> from a standard <code>net::TcpStream</code>.",16,[[["tcpstream",3]],["tcpstream",3]]],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP …",16,[[],[["socketaddr",4],["result",6]]]],[11,"local_addr","","Returns the socket address of the local half of this TCP …",16,[[],[["socketaddr",4],["result",6]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",16,[[["shutdown",4]],["result",6]]],[11,"set_nodelay","","Sets the value of the <code>TCP_NODELAY</code> option on this socket.",16,[[["bool",15]],["result",6]]],[11,"nodelay","","Gets the value of the <code>TCP_NODELAY</code> option on this socket.",16,[[],[["result",6],["bool",15]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",16,[[["u32",15]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",16,[[],[["result",6],["u32",15]]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",16,[[],[["result",6],["option",4]]]],[11,"peek","","Receives data on the socket from the remote address to …",16,[[],[["result",6],["usize",15]]]],[11,"bind","","Creates a UDP socket from the given address.",17,[[["socketaddr",4]],[["result",6],["udpsocket",3]]]],[11,"from_std","","Creates a new <code>UdpSocket</code> from a standard <code>net::UdpSocket</code>.",17,[[["udpsocket",3]],["udpsocket",3]]],[11,"local_addr","","Returns the socket address that this socket was created …",17,[[],[["socketaddr",4],["result",6]]]],[11,"send_to","","Sends data on the socket to the given address. On …",17,[[["socketaddr",4]],[["result",6],["usize",15]]]],[11,"recv_from","","Receives data from the socket. On success, returns the …",17,[[],["result",6]]],[11,"peek_from","","Receives data from the socket, without removing it from …",17,[[],["result",6]]],[11,"send","","Sends data on the socket to the address previously bound …",17,[[],[["result",6],["usize",15]]]],[11,"recv","","Receives data from the socket previously bound with …",17,[[],[["result",6],["usize",15]]]],[11,"peek","","Receives data from the socket, without removing it from …",17,[[],[["result",6],["usize",15]]]],[11,"connect","","Connects the UDP socket setting the default destination …",17,[[["socketaddr",4]],["result",6]]],[11,"set_broadcast","","Sets the value of the <code>SO_BROADCAST</code> option for this socket.",17,[[["bool",15]],["result",6]]],[11,"broadcast","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.",17,[[],[["result",6],["bool",15]]]],[11,"set_multicast_loop_v4","","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",17,[[["bool",15]],["result",6]]],[11,"multicast_loop_v4","","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",17,[[],[["result",6],["bool",15]]]],[11,"set_multicast_ttl_v4","","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …",17,[[["u32",15]],["result",6]]],[11,"multicast_ttl_v4","","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …",17,[[],[["result",6],["u32",15]]]],[11,"set_multicast_loop_v6","","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",17,[[["bool",15]],["result",6]]],[11,"multicast_loop_v6","","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",17,[[],[["result",6],["bool",15]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",17,[[["u32",15]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",17,[[],[["result",6],["u32",15]]]],[11,"join_multicast_v4","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.",17,[[["ipv4addr",3]],["result",6]]],[11,"join_multicast_v6","","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.",17,[[["u32",15],["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v4","","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.",17,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v6","","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.",17,[[["u32",15],["ipv6addr",3]],["result",6]]],[11,"only_v6","","Get the value of the <code>IPV6_V6ONLY</code> option on this socket.",17,[[],[["result",6],["bool",15]]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",17,[[],[["result",6],["option",4]]]],[11,"bind","","Creates a Unix datagram socket bound to the given path.",18,[[["path",3],["asref",8]],[["result",6],["unixdatagram",3]]]],[11,"from_std","","Creates a new <code>UnixDatagram</code> from a standard …",18,[[["unixdatagram",3]],["unixdatagram",3]]],[11,"connect","","Connects the socket to the specified address.",18,[[["path",3],["asref",8]],["result",6]]],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any …",18,[[],[["result",6],["unixdatagram",3]]]],[11,"pair","","Create an unnamed pair of connected sockets.",18,[[],["result",6]]],[11,"local_addr","","Returns the address of this socket.",18,[[],[["result",6],["socketaddr",3]]]],[11,"peer_addr","","Returns the address of this socket\'s peer.",18,[[],[["result",6],["socketaddr",3]]]],[11,"recv_from","","Receives data from the socket.",18,[[],["result",6]]],[11,"recv","","Receives data from the socket.",18,[[],[["result",6],["usize",15]]]],[11,"send_to","","Sends data on the socket to the specified address.",18,[[["path",3],["asref",8]],[["result",6],["usize",15]]]],[11,"send","","Sends data on the socket to the socket\'s peer.",18,[[],[["result",6],["usize",15]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",18,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shut down the read, write, or both halves of this …",18,[[["shutdown",4]],["result",6]]],[11,"bind","","Creates a new <code>UnixListener</code> bound to the specified socket.",19,[[["path",3],["asref",8]],[["result",6],["unixlistener",3]]]],[11,"from_std","","Creates a new <code>UnixListener</code> from a standard …",19,[[["unixlistener",3]],["unixlistener",3]]],[11,"accept","","Accepts a new incoming connection to this listener.",19,[[],["result",6]]],[11,"local_addr","","Returns the local socket address of this listener.",19,[[],[["result",6],["socketaddr",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",19,[[],[["result",6],["option",4]]]],[11,"connect","","Connects to the socket named by <code>path</code>.",20,[[["path",3],["asref",8]],[["unixstream",3],["result",6]]]],[11,"from_std","","Creates a new <code>UnixStream</code> from a standard <code>net::UnixStream</code>.",20,[[["unixstream",3]],["unixstream",3]]],[11,"pair","","Creates an unnamed pair of connected sockets.",20,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this …",20,[[],[["result",6],["socketaddr",3]]]],[11,"peer_addr","","Returns the socket address of the remote half of this …",20,[[],[["result",6],["socketaddr",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",20,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",20,[[["shutdown",4]],["result",6]]]],"p":[[8,"Source"],[3,"SourceFd"],[3,"Token"],[3,"Interest"],[3,"Poll"],[3,"Registry"],[3,"SocketAddr"],[3,"Sender"],[3,"Receiver"],[3,"Waker"],[3,"Event"],[3,"Events"],[3,"Iter"],[3,"TcpListener"],[3,"TcpSocket"],[3,"TcpKeepalive"],[3,"TcpStream"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"UnixStream"]]},\
"openapi":{"doc":"","i":[[0,"apis","openapi","",null,null],[0,"default_api","openapi::apis","",null,null],[4,"MeasurementsGetError","openapi::apis::default_api","struct for typed errors of method <code>measurements_get</code>",null,null],[13,"UnknownValue","","",0,null],[4,"MeasurementsIdGetError","","struct for typed errors of method <code>measurements_id_get</code>",null,null],[13,"UnknownValue","","",1,null],[4,"MeasurementsPostError","","struct for typed errors of method <code>measurements_post</code>",null,null],[13,"UnknownValue","","",2,null],[4,"UsersGetError","","struct for typed errors of method <code>users_get</code>",null,null],[13,"UnknownValue","","",3,null],[5,"measurements_get","","Returns all measurements",null,[[["configuration",3]]]],[5,"measurements_id_get","","Return a single measurement",null,[[["i64",15],["configuration",3]]]],[5,"measurements_post","","Add a new measurement",null,[[["measurementinput",3],["configuration",3]]]],[5,"users_get","","Returns all users",null,[[["configuration",3]]]],[0,"configuration","openapi::apis","",null,null],[3,"Configuration","openapi::apis::configuration","",null,null],[12,"base_path","","",4,null],[12,"user_agent","","",4,null],[12,"client","","",4,null],[12,"basic_auth","","",4,null],[12,"oauth_access_token","","",4,null],[12,"bearer_access_token","","",4,null],[12,"api_key","","",4,null],[6,"BasicAuth","","",null,null],[3,"ApiKey","","",null,null],[12,"prefix","","",5,null],[12,"key","","",5,null],[11,"new","","",4,[[],["configuration",3]]],[3,"ResponseContent","openapi::apis","",null,null],[12,"status","","",6,null],[12,"content","","",6,null],[12,"entity","","",6,null],[4,"Error","","",null,null],[13,"Reqwest","","",7,null],[13,"Serde","","",7,null],[13,"Io","","",7,null],[13,"ResponseError","","",7,null],[5,"urlencode","","",null,[[["str",15],["asref",8]],["string",3]]],[0,"models","openapi","",null,null],[0,"measurement","openapi::models","",null,null],[3,"Measurement","openapi::models::measurement","",null,null],[12,"id","","",8,null],[12,"captured_at","","",8,null],[12,"channel_id","","",8,null],[12,"device_id","","",8,null],[12,"devicetype_id","","",8,null],[12,"height","","",8,null],[12,"latitude","","",8,null],[12,"location_name","","",8,null],[12,"longitude","","",8,null],[12,"measurement_import_id","","",8,null],[12,"original_id","","",8,null],[12,"sensor_id","","",8,null],[12,"station_id","","",8,null],[12,"unit","","",8,null],[12,"user_id","","",8,null],[12,"value","","",8,null],[11,"new","","",8,[[["string",3],["i64",15]],["measurement",3]]],[0,"measurement_input","openapi::models","",null,null],[3,"MeasurementInput","openapi::models::measurement_input","",null,null],[12,"captured_at","","",9,null],[12,"channel_id","","",9,null],[12,"device_id","","",9,null],[12,"devicetype_id","","",9,null],[12,"height","","",9,null],[12,"latitude","","",9,null],[12,"location_name","","",9,null],[12,"longitude","","",9,null],[12,"measurement_import_id","","",9,null],[12,"radiation","","",9,null],[12,"sensor_id","","",9,null],[12,"station_id","","",9,null],[12,"surface","","",9,null],[12,"unit","","",9,null],[12,"value","","",9,null],[11,"new","","",9,[[],["measurementinput",3]]],[0,"user","openapi::models","",null,null],[3,"User","openapi::models::user","",null,null],[12,"id","","",10,null],[12,"name","","",10,null],[12,"measurements_count","","",10,null],[11,"new","","",10,[[["i64",15],["string",3]],["user",3]]],[11,"from","openapi::apis::default_api","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","openapi::apis::configuration","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","openapi::apis","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","openapi::models::measurement","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","openapi::models::measurement_input","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","openapi::models::user","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","openapi::apis","",7,[[["error",3]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["error",3]]]],[11,"clone","","",6,[[],["responsecontent",3]]],[11,"clone","openapi::apis::default_api","",0,[[],["measurementsgeterror",4]]],[11,"clone","","",1,[[],["measurementsidgeterror",4]]],[11,"clone","","",2,[[],["measurementsposterror",4]]],[11,"clone","","",3,[[],["usersgeterror",4]]],[11,"clone","openapi::apis::configuration","",4,[[],["configuration",3]]],[11,"clone","","",5,[[],["apikey",3]]],[11,"clone","openapi::models::measurement","",8,[[],["measurement",3]]],[11,"clone","openapi::models::measurement_input","",9,[[],["measurementinput",3]]],[11,"clone","openapi::models::user","",10,[[],["user",3]]],[11,"default","openapi::apis::configuration","",4,[[]]],[11,"eq","openapi::models::measurement","",8,[[["measurement",3]],["bool",15]]],[11,"ne","","",8,[[["measurement",3]],["bool",15]]],[11,"eq","openapi::models::measurement_input","",9,[[["measurementinput",3]],["bool",15]]],[11,"ne","","",9,[[["measurementinput",3]],["bool",15]]],[11,"eq","openapi::models::user","",10,[[["user",3]],["bool",15]]],[11,"ne","","",10,[[["user",3]],["bool",15]]],[11,"fmt","openapi::apis","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","openapi::apis::default_api","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","openapi::apis::configuration","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","openapi::models::measurement","",8,[[["formatter",3]],["result",6]]],[11,"fmt","openapi::models::measurement_input","",9,[[["formatter",3]],["result",6]]],[11,"fmt","openapi::models::user","",10,[[["formatter",3]],["result",6]]],[11,"fmt","openapi::apis","",7,[[["formatter",3]],["result",6]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"serialize","openapi::apis::default_api","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","openapi::models::measurement","",8,[[],["result",4]]],[11,"serialize","openapi::models::measurement_input","",9,[[],["result",4]]],[11,"serialize","openapi::models::user","",10,[[],["result",4]]],[11,"deserialize","openapi::apis::default_api","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","openapi::models::measurement","",8,[[],["result",4]]],[11,"deserialize","openapi::models::measurement_input","",9,[[],["result",4]]],[11,"deserialize","openapi::models::user","",10,[[],["result",4]]]],"p":[[4,"MeasurementsGetError"],[4,"MeasurementsIdGetError"],[4,"MeasurementsPostError"],[4,"UsersGetError"],[3,"Configuration"],[3,"ApiKey"],[3,"ResponseContent"],[4,"Error"],[3,"Measurement"],[3,"MeasurementInput"],[3,"User"]]},\
"percent_encoding":{"doc":"URLs use special chacters to indicate the parts of the …","i":[[3,"AsciiSet","percent_encoding","Represents a set of characters or bytes in the ASCII …",null,null],[11,"add","","",0,[[["u8",15]]]],[11,"remove","","",0,[[["u8",15]]]],[17,"CONTROLS","","The set of 0x00 to 0x1F (C0 controls), and 0x7F (DEL).",null,null],[17,"NON_ALPHANUMERIC","","Everything that is not an ASCII letter or digit.",null,null],[5,"percent_encode_byte","","Return the percent-encoding of the given byte.",null,[[["u8",15]],["str",15]]],[5,"percent_encode","","Percent-encode the given bytes with the given set.",null,[[["asciiset",3]],["percentencode",3]]],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,[[["asciiset",3],["str",15]],["percentencode",3]]],[3,"PercentEncode","","The return type of [<code>percent_encode</code>] and […",null,null],[5,"percent_decode_str","","Percent-decode the given string.",null,[[["str",15]],["percentdecode",3]]],[5,"percent_decode","","Percent-decode the given bytes.",null,[[],["percentdecode",3]]],[3,"PercentDecode","","The return type of [<code>percent_decode</code>].",null,null],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",1,[[],[["utf8error",3],["cow",4],["result",4]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",1,[[],[["cow",4],["str",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"next","","",2,[[],[["option",4],["str",15]]]],[11,"size_hint","","",2,[[]]],[11,"next","","",1,[[],[["u8",15],["option",4]]]],[11,"size_hint","","",1,[[]]],[11,"clone","","",2,[[],["percentencode",3]]],[11,"clone","","",1,[[],["percentdecode",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[3,"AsciiSet"],[3,"PercentDecode"],[3,"PercentEncode"]]},\
"pin_project":{"doc":"A crate for safe and ergonomic pin-projection.","i":[[23,"pin_project","pin_project","An attribute that creates projection types covering all …",null,null],[23,"pinned_drop","","An attribute used for custom implementations of [<code>Drop</code>].",null,null],[8,"UnsafeUnpin","","A trait used for custom implementations of [<code>Unpin</code>].",null,null]],"p":[]},\
"pin_project_internal":{"doc":"Implementation detail of the <code>pin-project</code> crate. - <strong>do not …","i":[[23,"pin_project","pin_project_internal","An attribute that creates projection types covering all …",null,null],[23,"pinned_drop","","An attribute used for custom implementations of [<code>Drop</code>].",null,null]],"p":[]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","i":[[14,"pin_project","pin_project_lite","A macro that creates a projection type covering all the …",null,null]],"p":[]},\
"pin_utils":{"doc":"Utilities for pinning","i":[[14,"pin_mut","pin_utils","Pins a value on the stack.",null,null],[14,"unsafe_pinned","","A pinned projection of a struct field.",null,null],[14,"unsafe_unpinned","","An unpinned projection of a struct field.",null,null]],"p":[]},\
"proc_macro2":{"doc":"A wrapper around the procedural macro API of the …","i":[[0,"token_stream","proc_macro2","Public implementation details for the <code>TokenStream</code> type, …",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over <code>TokenStream</code>\'s <code>TokenTree</code>s.",null,null],[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a …",null,null],[3,"LexError","","Error returned from <code>TokenStream::from_str</code>.",null,null],[11,"new","","Returns an empty <code>TokenStream</code> containing no token trees.",0,[[],["tokenstream",3]]],[11,"is_empty","","Checks if this <code>TokenStream</code> is empty.",0,[[],["bool",15]]],[11,"span","","",1,[[],["span",3]]],[3,"Span","","A region of source code, along with macro expansion …",null,null],[11,"call_site","","The span of the invocation of the current procedural …",2,[[],["span",3]]],[11,"mixed_site","","The span located at the invocation of the procedural …",2,[[],["span",3]]],[11,"resolved_at","","Creates a new span with the same line/column information …",2,[[["span",3]],["span",3]]],[11,"located_at","","Creates a new span with the same name resolution behavior …",2,[[["span",3]],["span",3]]],[11,"unwrap","","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.",2,[[],["span",3]]],[11,"join","","Create a new span encompassing <code>self</code> and <code>other</code>.",2,[[["span",3]],[["option",4],["span",3]]]],[4,"TokenTree","","A single token or a delimited sequence of token trees …",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",3,null],[13,"Ident","","An identifier.",3,null],[13,"Punct","","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).",3,null],[13,"Literal","","A literal character (<code>\'a\'</code>), string (<code>\\\"hello\\\"</code>), number (<code>2.3</code>…",3,null],[11,"span","","Returns the span of this tree, delegating to the <code>span</code> …",3,[[],["span",3]]],[11,"set_span","","Configures the span for <em>only this token</em>.",3,[[["span",3]]]],[3,"Group","","A delimited token stream.",null,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","<code>( ... )</code>",4,null],[13,"Brace","","<code>{ ... }</code>",4,null],[13,"Bracket","","<code>[ ... ]</code>",4,null],[13,"None","","<code>Ø ... Ø</code>",4,null],[11,"new","","Creates a new <code>Group</code> with the given delimiter and token …",5,[[["tokenstream",3],["delimiter",4]],["group",3]]],[11,"delimiter","","Returns the delimiter of this <code>Group</code>",5,[[],["delimiter",4]]],[11,"stream","","Returns the <code>TokenStream</code> of tokens that are delimited in …",5,[[],["tokenstream",3]]],[11,"span","","Returns the span for the delimiters of this token stream, …",5,[[],["span",3]]],[11,"span_open","","Returns the span pointing to the opening delimiter of …",5,[[],["span",3]]],[11,"span_close","","Returns the span pointing to the closing delimiter of …",5,[[],["span",3]]],[11,"set_span","","Configures the span for this <code>Group</code>\'s delimiters, but not …",5,[[["span",3]]]],[3,"Punct","","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.",null,null],[4,"Spacing","","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …",null,null],[13,"Alone","","E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.",6,null],[13,"Joint","","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>\'</code> is <code>Joint</code> in <code>\'#</code>.",6,null],[11,"new","","Creates a new <code>Punct</code> from the given character and spacing.",7,[[["spacing",4],["char",15]],["punct",3]]],[11,"as_char","","Returns the value of this punctuation character as <code>char</code>.",7,[[],["char",15]]],[11,"spacing","","Returns the spacing of this punctuation character, …",7,[[],["spacing",4]]],[11,"span","","Returns the span for this punctuation character.",7,[[],["span",3]]],[11,"set_span","","Configure the span for this punctuation character.",7,[[["span",3]]]],[3,"Ident","","A word of Rust code, which may be a keyword or legal …",null,null],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",8,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",8,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",8,[[["span",3]]]],[3,"Literal","","A literal string (<code>\\\"hello\\\"</code>), byte string (<code>b\\\"hello\\\"</code>), …",null,null],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u8",15]],["literal",3]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u16",15]],["literal",3]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u32",15]],["literal",3]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u64",15]],["literal",3]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["u128",15]],["literal",3]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["usize",15]],["literal",3]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i8",15]],["literal",3]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i16",15]],["literal",3]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i32",15]],["literal",3]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i64",15]],["literal",3]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["i128",15]],["literal",3]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified …",9,[[["isize",15]],["literal",3]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u8",15]],["literal",3]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u16",15]],["literal",3]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u32",15]],["literal",3]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u64",15]],["literal",3]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["u128",15]],["literal",3]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["usize",15]],["literal",3]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i8",15]],["literal",3]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i16",15]],["literal",3]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i32",15]],["literal",3]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i64",15]],["literal",3]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["i128",15]],["literal",3]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the …",9,[[["isize",15]],["literal",3]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",9,[[["f64",15]],["literal",3]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",9,[[["f64",15]],["literal",3]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",9,[[["f32",15]],["literal",3]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",9,[[["f32",15]],["literal",3]]],[11,"string","","String literal.",9,[[["str",15]],["literal",3]]],[11,"character","","Character literal.",9,[[["char",15]],["literal",3]]],[11,"byte_string","","Byte string literal.",9,[[],["literal",3]]],[11,"span","","Returns the span encompassing this literal.",9,[[],["span",3]]],[11,"set_span","","Configures the span associated for this literal.",9,[[["span",3]]]],[11,"subspan","","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …",9,[[["usize",15],["rangebounds",8]],[["option",4],["span",3]]]],[11,"from","proc_macro2::token_stream","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","proc_macro2","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",2,[[["span",3]],["span",3]]],[11,"from","","",0,[[["tokenstream",3]],["tokenstream",3]]],[11,"from","","",0,[[["tokentree",4]]]],[11,"from","","",3,[[["group",3]],["tokentree",4]]],[11,"from","","",3,[[["ident",3]],["tokentree",4]]],[11,"from","","",3,[[["punct",3]],["tokentree",4]]],[11,"from","","",3,[[["literal",3]],["tokentree",4]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"extend","","",0,[[["intoiterator",8]]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","proc_macro2::token_stream","",10,[[],[["tokentree",4],["option",4]]]],[11,"clone","proc_macro2","",0,[[],["tokenstream",3]]],[11,"clone","","",2,[[],["span",3]]],[11,"clone","","",3,[[],["tokentree",4]]],[11,"clone","","",5,[[],["group",3]]],[11,"clone","","",4,[[],["delimiter",4]]],[11,"clone","","",7,[[],["punct",3]]],[11,"clone","","",6,[[],["spacing",4]]],[11,"clone","","",8,[[],["ident",3]]],[11,"clone","","",9,[[],["literal",3]]],[11,"clone","proc_macro2::token_stream","",10,[[],["intoiter",3]]],[11,"default","proc_macro2","",0,[[]]],[11,"cmp","","",8,[[["ident",3]],["ordering",4]]],[11,"eq","","",4,[[["delimiter",4]],["bool",15]]],[11,"eq","","",6,[[["spacing",4]],["bool",15]]],[11,"eq","","",8,[[["ident",3]],["bool",15]]],[11,"eq","","",8,[[],["bool",15]]],[11,"partial_cmp","","",8,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter",3]],["result",6]]],[11,"fmt","proc_macro2","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"from_str","","",0,[[["str",15]],[["lexerror",3],["result",4],["tokenstream",3]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]],[11,"from_iter","","",0,[[["intoiterator",8]]]]],"p":[[3,"TokenStream"],[3,"LexError"],[3,"Span"],[4,"TokenTree"],[4,"Delimiter"],[3,"Group"],[4,"Spacing"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"IntoIter"]]},\
"quote":{"doc":"github crates-io docs-rs","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending …",null,null],[10,"append","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_all","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_separated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[10,"append_terminated","","For use by <code>ToTokens</code> implementations.",0,[[]]],[8,"IdentFragment","","Specialized formatting trait used by <code>format_ident!</code>.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter",3]],["result",6]]],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["span",3],["option",4]]]],[8,"ToTokens","","Types that can be interpolated inside a <code>quote!</code> invocation.",null,null],[10,"to_tokens","","Write <code>self</code> to the given <code>TokenStream</code>.",2,[[["tokenstream",3]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[14,"format_ident","","Formatting macro for constructing <code>Ident</code>s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as <code>quote!</code>, but applies a given span to all tokens …",null,null],[11,"span","","Span associated with this <code>IdentFragment</code>.",1,[[],[["span",3],["option",4]]]],[11,"to_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]],[11,"into_token_stream","","Convert <code>self</code> directly into a <code>TokenStream</code> object.",2,[[],["tokenstream",3]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]},\
"reqwest":{"doc":"reqwestThe <code>reqwest</code> crate provides a convenient, …","i":[[0,"multipart","reqwest","multipart/form-data",null,null],[3,"Form","reqwest::multipart","An async multipart/form-data request.",null,null],[3,"Part","","A field in a multipart form.",null,null],[11,"new","","Creates a new async Form without any content.",0,[[],["form",3]]],[11,"boundary","","Get the boundary that this form will use.",0,[[],["str",15]]],[11,"text","","Add a data field with supplied name and value.",0,[[],["form",3]]],[11,"part","","Adds a customized Part.",0,[[["part",3]],["form",3]]],[11,"percent_encode_path_segment","","Configure this <code>Form</code> to percent-encode using the …",0,[[],["form",3]]],[11,"percent_encode_attr_chars","","Configure this <code>Form</code> to percent-encode using the <code>attr-char</code> …",0,[[],["form",3]]],[11,"percent_encode_noop","","Configure this <code>Form</code> to skip percent-encoding",0,[[],["form",3]]],[11,"text","","Makes a text parameter.",1,[[],["part",3]]],[11,"bytes","","Makes a new parameter from arbitrary bytes.",1,[[],["part",3]]],[11,"stream","","Makes a new parameter from an arbitrary stream.",1,[[["body",3],["into",8]],["part",3]]],[11,"stream_with_length","","Makes a new parameter from an arbitrary stream with a …",1,[[["body",3],["into",8],["u64",15]],["part",3]]],[11,"mime_str","","Tries to set the mime of this part.",1,[[["str",15]],[["part",3],["result",6]]]],[11,"file_name","","Sets the filename, builder style.",1,[[],["part",3]]],[0,"redirect","reqwest","Redirect Handling",null,null],[3,"Policy","reqwest::redirect","A type that controls the policy on how to handle the …",null,null],[3,"Attempt","","A type that holds information on the next request and …",null,null],[3,"Action","","An action to perform when a redirect status code is found.",null,null],[11,"limited","","Create a <code>Policy</code> with a maximum number of redirects.",2,[[["usize",15]]]],[11,"none","","Create a <code>Policy</code> that does not follow any redirect.",2,[[]]],[11,"custom","","Create a custom <code>Policy</code> using the passed function.",2,[[]]],[11,"redirect","","Apply this policy to a given [<code>Attempt</code>] to produce a […",2,[[["attempt",3]],["action",3]]],[11,"status","","Get the type of redirect.",3,[[],["statuscode",3]]],[11,"url","","Get the next URL to redirect to.",3,[[],["url",3]]],[11,"previous","","Get the list of previous URLs that have already been …",3,[[]]],[11,"follow","","Returns an action meaning reqwest should follow the next …",3,[[],["action",3]]],[11,"stop","","Returns an action meaning reqwest should not follow the …",3,[[],["action",3]]],[11,"error","","Returns an action failing the redirect with an error.",3,[[["box",3],["into",8]],["action",3]]],[0,"header","reqwest","HTTP header types",null,null],[8,"AsHeaderName","reqwest::header","A marker trait used to identify values that can be used …",null,null],[3,"Drain","","A drain iterator for <code>HeaderMap</code>.",null,null],[4,"Entry","","A view into a single location in a <code>HeaderMap</code>, which may …",null,null],[13,"Occupied","","An occupied entry",4,null],[13,"Vacant","","A vacant entry",4,null],[3,"GetAll","","A view to all values stored in a single entry.",null,null],[3,"HeaderMap","","A set of HTTP headers",null,null],[8,"IntoHeaderName","","A marker trait used to identify values that can be used …",null,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HeaderMap</code>.",null,null],[3,"Iter","","<code>HeaderMap</code> entry iterator.",null,null],[3,"IterMut","","<code>HeaderMap</code> mutable entry iterator",null,null],[3,"Keys","","An iterator over <code>HeaderMap</code> keys.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a <code>HeaderMap</code>.",null,null],[3,"VacantEntry","","A view into a single empty location in a <code>HeaderMap</code>.",null,null],[3,"ValueDrain","","An drain iterator of all values associated with a single …",null,null],[3,"ValueIter","","An iterator of all values associated with a single header …",null,null],[3,"ValueIterMut","","A mutable iterator of all values associated with a single …",null,null],[3,"Values","","<code>HeaderMap</code> value iterator.",null,null],[3,"ValuesMut","","<code>HeaderMap</code> mutable value iterator",null,null],[3,"HeaderName","","Represents an HTTP header field name",null,null],[3,"InvalidHeaderName","","A possible error when converting a <code>HeaderName</code> from …",null,null],[3,"HeaderValue","","Represents an HTTP header field value.",null,null],[3,"InvalidHeaderValue","","A possible error when converting a <code>HeaderValue</code> from a …",null,null],[3,"ToStrError","","A possible error when converting a <code>HeaderValue</code> to a …",null,null],[17,"ACCEPT","","Advertises which content types the client is able to …",null,null],[17,"ACCEPT_CHARSET","","Advertises which character set the client is able to …",null,null],[17,"ACCEPT_ENCODING","","Advertises which content encoding the client is able to …",null,null],[17,"ACCEPT_LANGUAGE","","Advertises which languages the client is able to …",null,null],[17,"ACCEPT_RANGES","","Marker used by the server to advertise partial request …",null,null],[17,"ACCESS_CONTROL_ALLOW_CREDENTIALS","","Preflight response indicating if the response to the …",null,null],[17,"ACCESS_CONTROL_ALLOW_HEADERS","","Preflight response indicating permitted HTTP headers.",null,null],[17,"ACCESS_CONTROL_ALLOW_METHODS","","Preflight header response indicating permitted access …",null,null],[17,"ACCESS_CONTROL_ALLOW_ORIGIN","","Indicates whether the response can be shared with …",null,null],[17,"ACCESS_CONTROL_EXPOSE_HEADERS","","Indicates which headers can be exposed as part of the …",null,null],[17,"ACCESS_CONTROL_MAX_AGE","","Indicates how long the results of a preflight request can …",null,null],[17,"ACCESS_CONTROL_REQUEST_HEADERS","","Informs the server which HTTP headers will be used when …",null,null],[17,"ACCESS_CONTROL_REQUEST_METHOD","","Informs the server know which HTTP method will be used …",null,null],[17,"AGE","","Indicates the time in seconds the object has been in a …",null,null],[17,"ALLOW","","Lists the set of methods support by a resource.",null,null],[17,"ALT_SVC","","Advertises the availability of alternate services to …",null,null],[17,"AUTHORIZATION","","Contains the credentials to authenticate a user agent …",null,null],[17,"CACHE_CONTROL","","Specifies directives for caching mechanisms in both …",null,null],[17,"CONNECTION","","Controls whether or not the network connection stays open …",null,null],[17,"CONTENT_DISPOSITION","","Indicates if the content is expected to be displayed …",null,null],[17,"CONTENT_ENCODING","","Used to compress the media-type.",null,null],[17,"CONTENT_LANGUAGE","","Used to describe the languages intended for the audience.",null,null],[17,"CONTENT_LENGTH","","Indicates the size fo the entity-body.",null,null],[17,"CONTENT_LOCATION","","Indicates an alternate location for the returned data.",null,null],[17,"CONTENT_RANGE","","Indicates where in a full body message a partial message …",null,null],[17,"CONTENT_SECURITY_POLICY","","Allows controlling resources the user agent is allowed to …",null,null],[17,"CONTENT_SECURITY_POLICY_REPORT_ONLY","","Allows experimenting with policies by monitoring their …",null,null],[17,"CONTENT_TYPE","","Used to indicate the media type of the resource.",null,null],[17,"COOKIE","","Contains stored HTTP cookies previously sent by the …",null,null],[17,"DNT","","Indicates the client\'s tracking preference.",null,null],[17,"DATE","","Contains the date and time at which the message was …",null,null],[17,"ETAG","","Identifier for a specific version of a resource.",null,null],[17,"EXPECT","","Indicates expectations that need to be fulfilled by the …",null,null],[17,"EXPIRES","","Contains the date/time after which the response is …",null,null],[17,"FORWARDED","","Contains information from the client-facing side of proxy …",null,null],[17,"FROM","","Contains an Internet email address for a human user who …",null,null],[17,"HOST","","Specifies the domain name of the server and (optionally) …",null,null],[17,"IF_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_MODIFIED_SINCE","","Makes a request conditional based on the modification …",null,null],[17,"IF_NONE_MATCH","","Makes a request conditional based on the E-Tag.",null,null],[17,"IF_RANGE","","Makes a request conditional based on range.",null,null],[17,"IF_UNMODIFIED_SINCE","","Makes the request conditional based on the last …",null,null],[17,"LAST_MODIFIED","","Content-Types that are acceptable for the response.",null,null],[17,"LINK","","Allows the server to point an interested client to …",null,null],[17,"LOCATION","","Indicates the URL to redirect a page to.",null,null],[17,"MAX_FORWARDS","","Indicates the max number of intermediaries the request …",null,null],[17,"ORIGIN","","Indicates where a fetch originates from.",null,null],[17,"PRAGMA","","HTTP/1.0 header usually used for backwards compatibility.",null,null],[17,"PROXY_AUTHENTICATE","","Defines the authentication method that should be used to …",null,null],[17,"PROXY_AUTHORIZATION","","Contains the credentials to authenticate a user agent to …",null,null],[17,"PUBLIC_KEY_PINS","","Associates a specific cryptographic public key with a …",null,null],[17,"PUBLIC_KEY_PINS_REPORT_ONLY","","Sends reports of pinning violation to the report-uri …",null,null],[17,"RANGE","","Indicates the part of a document that the server should …",null,null],[17,"REFERER","","Contains the address of the previous web page from which …",null,null],[17,"REFERRER_POLICY","","Governs which referrer information should be included …",null,null],[17,"REFRESH","","Informs the web browser that the current page or frame …",null,null],[17,"RETRY_AFTER","","The Retry-After response HTTP header indicates how long …",null,null],[17,"SEC_WEBSOCKET_ACCEPT","","The |Sec-WebSocket-Accept| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_EXTENSIONS","","The |Sec-WebSocket-Extensions| header field is used in …",null,null],[17,"SEC_WEBSOCKET_KEY","","The |Sec-WebSocket-Key| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_PROTOCOL","","The |Sec-WebSocket-Protocol| header field is used in the …",null,null],[17,"SEC_WEBSOCKET_VERSION","","The |Sec-WebSocket-Version| header field is used in the …",null,null],[17,"SERVER","","Contains information about the software used by the …",null,null],[17,"SET_COOKIE","","Used to send cookies from the server to the user agent.",null,null],[17,"STRICT_TRANSPORT_SECURITY","","Tells the client to communicate with HTTPS instead of …",null,null],[17,"TE","","Informs the server of transfer encodings willing to be …",null,null],[17,"TRAILER","","Allows the sender to include additional fields at the end …",null,null],[17,"TRANSFER_ENCODING","","Specifies the form of encoding used to safely transfer …",null,null],[17,"UPGRADE","","Used as part of the exchange to upgrade the protocol.",null,null],[17,"UPGRADE_INSECURE_REQUESTS","","Sends a signal to the server expressing the client’s …",null,null],[17,"USER_AGENT","","Contains a string that allows identifying the requesting …",null,null],[17,"VARY","","Determines how to match future requests with cached …",null,null],[17,"VIA","","Added by proxies to track routing.",null,null],[17,"WARNING","","General HTTP header contains information about possible …",null,null],[17,"WWW_AUTHENTICATE","","Defines the authentication method that should be used to …",null,null],[17,"X_CONTENT_TYPE_OPTIONS","","Marker used by the server to indicate that the MIME types …",null,null],[17,"X_DNS_PREFETCH_CONTROL","","Controls DNS prefetching.",null,null],[17,"X_FRAME_OPTIONS","","Indicates whether or not a browser should be allowed to …",null,null],[17,"X_XSS_PROTECTION","","Stop pages from loading when an XSS attack is detected.",null,null],[3,"Method","reqwest","The Request Method (VERB)",null,null],[3,"StatusCode","","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).",null,null],[3,"Version","","Represents a version of the HTTP spec.",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"Error","","The Errors that may occur when processing a <code>Request</code>.",null,null],[6,"Result","","A <code>Result</code> alias where the <code>Err</code> case is <code>reqwest::Error</code>.",null,null],[8,"IntoUrl","","A trait to try to convert some type into a <code>Url</code>.",null,null],[5,"get","","Shortcut method to quickly make a <code>GET</code> request.",null,[[["intourl",8]]]],[3,"Body","","An asynchronous request body.",null,null],[3,"Client","","An asynchronous <code>Client</code> to make Requests with.",null,null],[3,"ClientBuilder","","A <code>ClientBuilder</code> can be used to create a <code>Client</code> with  …",null,null],[3,"Request","","A request which can be executed with <code>Client::execute()</code>.",null,null],[3,"RequestBuilder","","A builder to construct the properties of a <code>Request</code>.",null,null],[3,"Response","","A Response to a submitted <code>Request</code>.",null,null],[8,"ResponseBuilderExt","","Extension trait for http::response::Builder objects",null,null],[10,"url","","A builder method for the <code>http::response::Builder</code> type …",5,[[["url",3]]]],[3,"Proxy","","Configuration of a proxy that a <code>Client</code> should pass …",null,null],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","reqwest::multipart","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","reqwest","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","reqwest::redirect","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","reqwest::header","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[],["bool",15]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"nfd","","",24,[[],["decompositions",3]]],[11,"nfkd","","",24,[[],["decompositions",3]]],[11,"nfc","","",24,[[],["recompositions",3]]],[11,"nfkc","","",24,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",24,[[],["replacements",3]]],[11,"stream_safe","","",24,[[],["streamsafe",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"into_iter","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[],["bool",15]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[],["bool",15]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","reqwest","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"to_string","","",34,[[],["string",3]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[],["bool",15]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[],["bool",15]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"equivalent","","",36,[[],["bool",15]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[],["bool",15]]],[11,"borrow","reqwest::header","",29,[[],["str",15]]],[11,"try_from","","",17,[[["hashmap",3]],[["result",4],["headermap",3]]]],[11,"try_from","","",29,[[],[["headername",3],["result",4]]]],[11,"try_from","","",31,[[["string",3]],[["result",4],["headervalue",3]]]],[11,"try_from","","",31,[[["str",15]],[["headervalue",3],["result",4]]]],[11,"try_from","reqwest","",34,[[],[["result",4],["method",3]]]],[11,"try_from","reqwest::header","",29,[[["string",3]],[["headername",3],["result",4]]]],[11,"try_from","reqwest","",35,[[],[["result",4],["statuscode",3]]]],[11,"try_from","","",35,[[["str",15]],[["statuscode",3],["result",4]]]],[11,"try_from","","",34,[[["str",15]],[["result",4],["method",3]]]],[11,"try_from","reqwest::header","",29,[[["str",15]],[["headername",3],["result",4]]]],[11,"try_from","","",31,[[["vec",3],["global",3],["u8",15]],[["headervalue",3],["result",4]]]],[11,"try_from","","",31,[[["string",3]],[["result",4],["headervalue",3]]]],[11,"try_from","","",31,[[],[["headervalue",3],["result",4]]]],[11,"try_from","reqwest","",35,[[["u16",15]],[["statuscode",3],["result",4]]]],[11,"fmt","reqwest::header","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest::header","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest::header","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest::header","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest::header","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","reqwest::header","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",29,[[]]],[11,"hash","reqwest","",35,[[]]],[11,"hash","reqwest::header","",31,[[]]],[11,"hash","reqwest","",36,[[]]],[11,"hash","","",34,[[]]],[11,"index","reqwest::header","PanicsUsing the index operator will cause a panic if the …",17,[[]]],[11,"partial_cmp","","",31,[[["str",15]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","reqwest","",36,[[["version",3]],[["option",4],["ordering",4]]]],[11,"lt","","",36,[[["version",3]],["bool",15]]],[11,"le","","",36,[[["version",3]],["bool",15]]],[11,"gt","","",36,[[["version",3]],["bool",15]]],[11,"ge","","",36,[[["version",3]],["bool",15]]],[11,"partial_cmp","","",35,[[["statuscode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["statuscode",3]],["bool",15]]],[11,"le","","",35,[[["statuscode",3]],["bool",15]]],[11,"gt","","",35,[[["statuscode",3]],["bool",15]]],[11,"ge","","",35,[[["statuscode",3]],["bool",15]]],[11,"partial_cmp","reqwest::header","",31,[[["headervalue",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[["string",3]],[["option",4],["ordering",4]]]],[11,"from","","",31,[[["i16",15]],["headervalue",3]]],[11,"from","","",31,[[["u16",15]],["headervalue",3]]],[11,"from","","",31,[[["i64",15]],["headervalue",3]]],[11,"from","","",31,[[["usize",15]],["headervalue",3]]],[11,"from","reqwest","",35,[[["statuscode",3]],["statuscode",3]]],[11,"from","","",34,[[["method",3]],["method",3]]],[11,"from","reqwest::header","",31,[[["headername",3]],["headervalue",3]]],[11,"from","","",31,[[["u64",15]],["headervalue",3]]],[11,"from","","",29,[[["headername",3]],["headername",3]]],[11,"from","","",31,[[["headervalue",3]],["headervalue",3]]],[11,"from","","",31,[[["i32",15]],["headervalue",3]]],[11,"from","","",31,[[["u32",15]],["headervalue",3]]],[11,"from","","",31,[[["isize",15]],["headervalue",3]]],[11,"as_ref","reqwest","",34,[[],["str",15]]],[11,"as_ref","reqwest::header","",29,[[]]],[11,"as_ref","","",31,[[]]],[11,"as_ref","","",29,[[],["str",15]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves …",17,[[],["intoiter",3]]],[11,"into_iter","","",16,[[],["valueiter",3]]],[11,"into_iter","","",22,[[],["valueitermut",3]]],[11,"default","","",17,[[],["headermap",3]]],[11,"default","reqwest","",34,[[],["method",3]]],[11,"default","","",35,[[],["statuscode",3]]],[11,"default","","",36,[[],["version",3]]],[11,"clone","","",35,[[],["statuscode",3]]],[11,"clone","reqwest::header","",31,[[],["headervalue",3]]],[11,"clone","","",29,[[],["headername",3]]],[11,"clone","","",17,[[],["headermap",3]]],[11,"clone","reqwest","",36,[[],["version",3]]],[11,"clone","","",34,[[],["method",3]]],[11,"from_iter","reqwest::header","",17,[[],["headermap",3]]],[11,"cmp","reqwest","",36,[[["version",3]],["ordering",4]]],[11,"cmp","","",35,[[["statuscode",3]],["ordering",4]]],[11,"cmp","reqwest::header","",31,[[["headervalue",3]],["ordering",4]]],[11,"from_str","","",31,[[["str",15]],[["result",4],["headervalue",3]]]],[11,"from_str","reqwest","",35,[[["str",15]],[["result",4],["invalidstatuscode",3],["statuscode",3]]]],[11,"from_str","","",34,[[["str",15]],[["result",4],["method",3]]]],[11,"from_str","reqwest::header","",29,[[["str",15]],[["headername",3],["result",4],["invalidheadername",3]]]],[11,"extend","","",17,[[]]],[11,"extend","","Extend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.",17,[[]]],[11,"next","","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","","",24,[[],["option",4]]],[11,"size_hint","","",24,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",25,[[],["option",4]]],[11,"size_hint","","",25,[[]]],[11,"next","","",26,[[],["option",4]]],[11,"next_back","","",25,[[],["option",4]]],[11,"next_back","","",26,[[],["option",4]]],[11,"drop","","",24,[[]]],[11,"drop","","",18,[[]]],[11,"drop","","",15,[[]]],[11,"eq","","",29,[[["headername",3]],["bool",15]]],[11,"ne","","",29,[[["headername",3]],["bool",15]]],[11,"eq","","",31,[[],["bool",15]]],[11,"eq","","",29,[[["headername",3]],["bool",15]]],[11,"eq","reqwest","",35,[[["statuscode",3]],["bool",15]]],[11,"ne","","",35,[[["statuscode",3]],["bool",15]]],[11,"eq","reqwest::header","Performs a case-insensitive comparison of the string …",29,[[["str",15]],["bool",15]]],[11,"eq","","",17,[[["headermap",3]],["bool",15]]],[11,"eq","","",31,[[["str",15]],["bool",15]]],[11,"eq","reqwest","",34,[[["method",3]],["bool",15]]],[11,"ne","","",34,[[["method",3]],["bool",15]]],[11,"eq","reqwest::header","",16,[[["getall",3]],["bool",15]]],[11,"eq","","",31,[[["headervalue",3]],["bool",15]]],[11,"eq","reqwest","",36,[[["version",3]],["bool",15]]],[11,"ne","","",36,[[["version",3]],["bool",15]]],[11,"eq","reqwest::header","",31,[[],["bool",15]]],[11,"eq","reqwest","",34,[[["str",15]],["bool",15]]],[11,"eq","reqwest::header","",31,[[["string",3]],["bool",15]]],[11,"eq","reqwest","",34,[[["method",3]],["bool",15]]],[11,"eq","","",34,[[["str",15]],["bool",15]]],[11,"eq","","",35,[[["u16",15]],["bool",15]]],[11,"eq","reqwest::header","Performs a case-insensitive comparison of the string …",29,[[["str",15]],["bool",15]]],[11,"try_from","reqwest","",37,[[["str",15]],[["url",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",37,[[]]],[11,"index","","",37,[[["rangefull",3]],["str",15]]],[11,"index","","",37,[[["rangefrom",3],["position",4]],["str",15]]],[11,"index","","",37,[[["rangeto",3],["position",4]],["str",15]]],[11,"index","","",37,[[["range",3],["position",4]],["str",15]]],[11,"partial_cmp","","",37,[[["url",3]],[["option",4],["ordering",4]]]],[11,"as_ref","","",37,[[],["str",15]]],[11,"clone","","",37,[[],["url",3]]],[11,"cmp","","",37,[[["url",3]],["ordering",4]]],[11,"eq","","",37,[[["url",3]],["bool",15]]],[11,"from_str","","",37,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"from","","",7,[[["body",3]],["body",3]]],[11,"from","","",7,[[["bytes",3]],["body",3]]],[11,"from","","",7,[[["vec",3],["u8",15]],["body",3]]],[11,"from","","",7,[[],["body",3]]],[11,"from","","",7,[[["string",3]],["body",3]]],[11,"from","","",7,[[["str",15]],["body",3]]],[11,"from","","",12,[[["response",3]],["response",3]]],[11,"from","","",7,[[["response",3]],["body",3]]],[11,"clone","","",8,[[],["client",3]]],[11,"clone","","",13,[[],["proxy",3]]],[11,"default","","",9,[[]]],[11,"default","","",8,[[]]],[11,"default","reqwest::multipart","",0,[[]]],[11,"default","reqwest::redirect","",2,[[],["policy",3]]],[11,"fmt","reqwest","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","reqwest::multipart","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","reqwest","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","reqwest::redirect","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","reqwest","",6,[[["formatter",3]],["result",6]]],[11,"try_from","","",10,[[["httprequest",3]],["result",6]]],[11,"source","","",6,[[],[["stderror",8],["option",4]]]],[11,"url","","Returns a possible URL related to this error.",6,[[],[["url",3],["option",4]]]],[11,"is_builder","","Returns true if the error is from a type Builder.",6,[[],["bool",15]]],[11,"is_redirect","","Returns true if the error is from a <code>RedirectPolicy</code>.",6,[[],["bool",15]]],[11,"is_status","","Returns true if the error is from …",6,[[],["bool",15]]],[11,"is_timeout","","Returns true if the error is related to a timeout.",6,[[],["bool",15]]],[11,"is_request","","Returns true if the error is related to the request",6,[[],["bool",15]]],[11,"is_connect","","Returns true if the error is related to connect",6,[[],["bool",15]]],[11,"is_body","","Returns true if the error is related to the request or …",6,[[],["bool",15]]],[11,"is_decode","","Returns true if the error is related to decoding the …",6,[[],["bool",15]]],[11,"status","","Returns the status code, if the error was generated from …",6,[[],[["option",4],["statuscode",3]]]],[11,"as_bytes","","Returns a reference to the internal data of the <code>Body</code>.",7,[[],["option",4]]],[11,"new","","Constructs a new <code>ClientBuilder</code>.",9,[[],["clientbuilder",3]]],[11,"build","","Returns a <code>Client</code> that uses this <code>ClientBuilder</code> …",9,[[],[["client",3],["result",6]]]],[11,"user_agent","","Sets the <code>User-Agent</code> header to be used by this client.",9,[[],["clientbuilder",3]]],[11,"default_headers","","Sets the default headers for every request.",9,[[["headermap",3]],["clientbuilder",3]]],[11,"no_gzip","","Disable auto response body gzip decompression.",9,[[],["clientbuilder",3]]],[11,"no_brotli","","Disable auto response body brotli decompression.",9,[[],["clientbuilder",3]]],[11,"redirect","","Set a <code>RedirectPolicy</code> for this client.",9,[[["policy",3]],["clientbuilder",3]]],[11,"referer","","Enable or disable automatic setting of the <code>Referer</code> header.",9,[[["bool",15]],["clientbuilder",3]]],[11,"proxy","","Add a <code>Proxy</code> to the list of proxies the <code>Client</code> will use.",9,[[["proxy",3]],["clientbuilder",3]]],[11,"no_proxy","","Clear all <code>Proxies</code>, so <code>Client</code> will use no proxy anymore.",9,[[],["clientbuilder",3]]],[11,"timeout","","Enables a request timeout.",9,[[["duration",3]],["clientbuilder",3]]],[11,"connect_timeout","","Set a timeout for only the connect phase of a <code>Client</code>.",9,[[["duration",3]],["clientbuilder",3]]],[11,"connection_verbose","","Set whether connections should emit verbose logs.",9,[[["bool",15]],["clientbuilder",3]]],[11,"pool_idle_timeout","","Set an optional timeout for idle sockets being kept-alive.",9,[[],["clientbuilder",3]]],[11,"pool_max_idle_per_host","","Sets the maximum idle connection per host allowed in the …",9,[[["usize",15]],["clientbuilder",3]]],[11,"http1_title_case_headers","","Enable case sensitive headers.",9,[[],["clientbuilder",3]]],[11,"http2_prior_knowledge","","Only use HTTP/2.",9,[[],["clientbuilder",3]]],[11,"http2_initial_stream_window_size","","Sets the <code>SETTINGS_INITIAL_WINDOW_SIZE</code> option for HTTP2 …",9,[[],["clientbuilder",3]]],[11,"http2_initial_connection_window_size","","Sets the max connection-level flow control for HTTP2",9,[[],["clientbuilder",3]]],[11,"http2_adaptive_window","","Sets whether to use an adaptive flow control.",9,[[["bool",15]],["clientbuilder",3]]],[11,"http2_max_frame_size","","Sets the maximum frame size to use for HTTP2.",9,[[],["clientbuilder",3]]],[11,"tcp_nodelay","","Set whether sockets have <code>SO_NODELAY</code> enabled.",9,[[["bool",15]],["clientbuilder",3]]],[11,"local_address","","Bind to a local IP Address.",9,[[],["clientbuilder",3]]],[11,"tcp_keepalive","","Set that all sockets have <code>SO_KEEPALIVE</code> set with the …",9,[[],["clientbuilder",3]]],[11,"no_trust_dns","","Disables the trust-dns async resolver.",9,[[],["clientbuilder",3]]],[11,"https_only","","Restrict the Client to be used with HTTPS only requests.",9,[[["bool",15]],["clientbuilder",3]]],[11,"new","","Constructs a new <code>Client</code>.",8,[[],["client",3]]],[11,"builder","","Creates a <code>ClientBuilder</code> to configure a <code>Client</code>.",8,[[],["clientbuilder",3]]],[11,"get","","Convenience method to make a <code>GET</code> request to a URL.",8,[[["intourl",8]],["requestbuilder",3]]],[11,"post","","Convenience method to make a <code>POST</code> request to a URL.",8,[[["intourl",8]],["requestbuilder",3]]],[11,"put","","Convenience method to make a <code>PUT</code> request to a URL.",8,[[["intourl",8]],["requestbuilder",3]]],[11,"patch","","Convenience method to make a <code>PATCH</code> request to a URL.",8,[[["intourl",8]],["requestbuilder",3]]],[11,"delete","","Convenience method to make a <code>DELETE</code> request to a URL.",8,[[["intourl",8]],["requestbuilder",3]]],[11,"head","","Convenience method to make a <code>HEAD</code> request to a URL.",8,[[["intourl",8]],["requestbuilder",3]]],[11,"request","","Start building a <code>Request</code> with the <code>Method</code> and <code>Url</code>.",8,[[["method",3],["intourl",8]],["requestbuilder",3]]],[11,"execute","","Executes a <code>Request</code>.",8,[[["request",3]]]],[11,"new","","Constructs a new request.",10,[[["method",3],["url",3]]]],[11,"method","","Get the method.",10,[[],["method",3]]],[11,"method_mut","","Get a mutable reference to the method.",10,[[],["method",3]]],[11,"url","","Get the url.",10,[[],["url",3]]],[11,"url_mut","","Get a mutable reference to the url.",10,[[],["url",3]]],[11,"headers","","Get the headers.",10,[[],["headermap",3]]],[11,"headers_mut","","Get a mutable reference to the headers.",10,[[],["headermap",3]]],[11,"body","","Get the body.",10,[[],[["body",3],["option",4]]]],[11,"body_mut","","Get a mutable reference to the body.",10,[[],["option",4]]],[11,"timeout","","Get the timeout.",10,[[],[["duration",3],["option",4]]]],[11,"timeout_mut","","Get a mutable reference to the timeout.",10,[[],["option",4]]],[11,"try_clone","","Attempt to clone the request.",10,[[],[["option",4],["request",3]]]],[11,"header","","Add a <code>Header</code> to this Request.",11,[[],["requestbuilder",3]]],[11,"headers","","Add a set of Headers to the existing ones on this Request.",11,[[["headermap",3]],["requestbuilder",3]]],[11,"basic_auth","","Enable HTTP basic authentication.",11,[[["option",4]],["requestbuilder",3]]],[11,"bearer_auth","","Enable HTTP bearer authentication.",11,[[],["requestbuilder",3]]],[11,"body","","Set the request body.",11,[[["body",3],["into",8]],["requestbuilder",3]]],[11,"timeout","","Enables a request timeout.",11,[[["duration",3]],["requestbuilder",3]]],[11,"multipart","","Sends a multipart/form-data body.",11,[[["form",3]],["requestbuilder",3]]],[11,"query","","Modify the query string of the URL.",11,[[],["requestbuilder",3]]],[11,"form","","Send a form body.",11,[[],["requestbuilder",3]]],[11,"json","","Send a JSON body.",11,[[],["requestbuilder",3]]],[11,"fetch_mode_no_cors","","Disable CORS on fetching the request.",11,[[],["requestbuilder",3]]],[11,"build","","Build a <code>Request</code>, which can be inspected, modified and …",11,[[],[["result",6],["request",3]]]],[11,"send","","Constructs the Request and sends it to the target URL, …",11,[[]]],[11,"try_clone","","Attempt to clone the RequestBuilder.",11,[[],[["requestbuilder",3],["option",4]]]],[11,"status","","Get the <code>StatusCode</code> of this <code>Response</code>.",12,[[],["statuscode",3]]],[11,"version","","Get the HTTP <code>Version</code> of this <code>Response</code>.",12,[[],["version",3]]],[11,"headers","","Get the <code>Headers</code> of this <code>Response</code>.",12,[[],["headermap",3]]],[11,"headers_mut","","Get a mutable reference to the <code>Headers</code> of this <code>Response</code>.",12,[[],["headermap",3]]],[11,"content_length","","Get the content-length of this response, if known.",12,[[],[["option",4],["u64",15]]]],[11,"url","","Get the final <code>Url</code> of this <code>Response</code>.",12,[[],["url",3]]],[11,"remote_addr","","Get the remote address used to get this <code>Response</code>.",12,[[],[["socketaddr",4],["option",4]]]],[11,"text","","Get the full response text.",12,[[]]],[11,"text_with_charset","","Get the full response text given a specific encoding.",12,[[["str",15]]]],[11,"json","","Try to deserialize the response body as JSON.",12,[[]]],[11,"bytes","","Get the full response body as <code>Bytes</code>.",12,[[]]],[11,"chunk","","Stream a chunk of the response body.",12,[[]]],[11,"error_for_status","","Turn a response into an error if the server returned an …",12,[[],["result",6]]],[11,"error_for_status_ref","","Turn a reference to a response into an error if the …",12,[[],["result",6]]],[11,"http","","Proxy all HTTP traffic to the passed URL.",13,[[["intoproxyscheme",8]],[["proxy",3],["result",6]]]],[11,"https","","Proxy all HTTPS traffic to the passed URL.",13,[[["intoproxyscheme",8]],[["proxy",3],["result",6]]]],[11,"all","","Proxy <strong>all</strong> traffic to the passed URL.",13,[[["intoproxyscheme",8]],[["proxy",3],["result",6]]]],[11,"custom","","Provide a custom function to determine what traffix to …",13,[[],["proxy",3]]],[11,"basic_auth","","Set the <code>Proxy-Authorization</code> header using Basic auth.",13,[[["str",15]],["proxy",3]]],[11,"or_insert","reqwest::header","Ensures a value is in the entry by inserting the default …",4,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",4,[[]]],[11,"key","","Returns a reference to the entry\'s key",4,[[],["headername",3]]],[11,"iter","","Returns an iterator visiting all values associated with …",16,[[],["valueiter",3]]],[11,"new","","Create an empty <code>HeaderMap</code>.",17,[[],[["headervalue",3],["headermap",3]]]],[11,"with_capacity","","Create an empty <code>HeaderMap</code> with the specified capacity.",17,[[["usize",15]],["headermap",3]]],[11,"len","","Returns the number of headers stored in the map.",17,[[],["usize",15]]],[11,"keys_len","","Returns the number of keys stored in the map.",17,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",17,[[],["bool",15]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",17,[[]]],[11,"capacity","","Returns the number of headers the map can hold without …",17,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more headers to …",17,[[["usize",15]]]],[11,"get","","Returns a reference to the value associated with the key.",17,[[],["option",4]]],[11,"get_mut","","Returns a mutable reference to the value associated with …",17,[[],["option",4]]],[11,"get_all","","Returns a view of all values associated with a key.",17,[[],["getall",3]]],[11,"contains_key","","Returns true if the map contains a value for the …",17,[[],["bool",15]]],[11,"iter","","An iterator visiting all key-value pairs.",17,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs, with mutable …",17,[[],["itermut",3]]],[11,"keys","","An iterator visiting all keys.",17,[[],["keys",3]]],[11,"values","","An iterator visiting all values.",17,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably.",17,[[],["valuesmut",3]]],[11,"drain","","Clears the map, returning all entries as an iterator.",17,[[],["drain",3]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",17,[[],["entry",4]]],[11,"try_entry","","Gets the given key\'s corresponding entry in the map for …",17,[[],[["result",4],["entry",4],["invalidheadername",3]]]],[11,"insert","","Inserts a key-value pair into the map.",17,[[],["option",4]]],[11,"append","","Inserts a key-value pair into the map.",17,[[],["bool",15]]],[11,"remove","","Removes a key from the map, returning the value …",17,[[],["option",4]]],[11,"key","","Returns a reference to the entry\'s key.",22,[[],["headername",3]]],[11,"get","","Get a reference to the first value in the entry.",22,[[]]],[11,"get_mut","","Get a mutable reference to the first value in the entry.",22,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",22,[[]]],[11,"insert","","Sets the value of the entry.",22,[[]]],[11,"insert_mult","","Sets the value of the entry.",22,[[],["valuedrain",3]]],[11,"append","","Insert the value into the entry.",22,[[]]],[11,"remove","","Remove the entry from the map.",22,[[]]],[11,"remove_entry","","Remove the entry from the map.",22,[[]]],[11,"remove_entry_mult","","Remove the entry from the map.",22,[[]]],[11,"iter","","Returns an iterator visiting all values associated with …",22,[[],["valueiter",3]]],[11,"iter_mut","","Returns an iterator mutably visiting all values …",22,[[],["valueitermut",3]]],[11,"key","","Returns a reference to the entry\'s key",23,[[],["headername",3]]],[11,"into_key","","Take ownership of the key",23,[[],["headername",3]]],[11,"insert","","Insert the value into the entry.",23,[[]]],[11,"insert_entry","","Insert the value into the entry.",23,[[],["occupiedentry",3]]],[11,"from_bytes","","Converts a slice of bytes to an HTTP header name.",29,[[],[["headername",3],["result",4],["invalidheadername",3]]]],[11,"from_lowercase","","Converts a slice of bytes to an HTTP header name.",29,[[],[["headername",3],["result",4],["invalidheadername",3]]]],[11,"from_static","","Converts a static string to a HTTP header name.",29,[[["str",15]],["headername",3]]],[11,"as_str","","Returns a <code>str</code> representation of the header.",29,[[],["str",15]]],[11,"from_static","","Convert a static string to a <code>HeaderValue</code>.",31,[[["str",15]],["headervalue",3]]],[11,"from_str","","Attempt to convert a string to a <code>HeaderValue</code>.",31,[[["str",15]],[["invalidheadervalue",3],["result",4],["headervalue",3]]]],[11,"from_name","","Converts a HeaderName into a HeaderValue",31,[[["headername",3]],["headervalue",3]]],[11,"from_bytes","","Attempt to convert a byte slice to a <code>HeaderValue</code>.",31,[[],[["invalidheadervalue",3],["result",4],["headervalue",3]]]],[11,"from_maybe_shared","","Attempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.",31,[[],[["invalidheadervalue",3],["result",4],["headervalue",3]]]],[11,"from_maybe_shared_unchecked","","Convert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …",31,[[],["headervalue",3]]],[11,"to_str","","Yields a <code>&str</code> slice if the <code>HeaderValue</code> only contains …",31,[[],[["str",15],["tostrerror",3],["result",4]]]],[11,"len","","Returns the length of <code>self</code>.",31,[[],["usize",15]]],[11,"is_empty","","Returns true if the <code>HeaderValue</code> has a length of zero …",31,[[],["bool",15]]],[11,"as_bytes","","Converts a <code>HeaderValue</code> to a byte slice.",31,[[]]],[11,"set_sensitive","","Mark that the header value represents sensitive …",31,[[["bool",15]]]],[11,"is_sensitive","","Returns <code>true</code> if the value represents sensitive data.",31,[[],["bool",15]]],[18,"GET","reqwest","GET",34,null],[18,"POST","","POST",34,null],[18,"PUT","","PUT",34,null],[18,"DELETE","","DELETE",34,null],[18,"HEAD","","HEAD",34,null],[18,"OPTIONS","","OPTIONS",34,null],[18,"CONNECT","","CONNECT",34,null],[18,"PATCH","","PATCH",34,null],[18,"TRACE","","TRACE",34,null],[11,"from_bytes","","Converts a slice of bytes to an HTTP method.",34,[[],[["result",4],["invalidmethod",3],["method",3]]]],[11,"is_safe","","Whether a method is considered \\\"safe\\\", meaning the …",34,[[],["bool",15]]],[11,"is_idempotent","","Whether a method is considered \\\"idempotent\\\", meaning the …",34,[[],["bool",15]]],[11,"as_str","","Return a &str representation of the HTTP method",34,[[],["str",15]]],[11,"from_u16","","Converts a u16 to a status code.",35,[[["u16",15]],[["result",4],["invalidstatuscode",3],["statuscode",3]]]],[11,"from_bytes","","Converts a &[u8] to a status code",35,[[],[["result",4],["invalidstatuscode",3],["statuscode",3]]]],[11,"as_u16","","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.",35,[[],["u16",15]]],[11,"as_str","","Returns a &str representation of the <code>StatusCode</code>",35,[[],["str",15]]],[11,"canonical_reason","","Get the standardised <code>reason-phrase</code> for this status code.",35,[[],[["option",4],["str",15]]]],[11,"is_informational","","Check if status is within 100-199.",35,[[],["bool",15]]],[11,"is_success","","Check if status is within 200-299.",35,[[],["bool",15]]],[11,"is_redirection","","Check if status is within 300-399.",35,[[],["bool",15]]],[11,"is_client_error","","Check if status is within 400-499.",35,[[],["bool",15]]],[11,"is_server_error","","Check if status is within 500-599.",35,[[],["bool",15]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",35,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",35,null],[18,"PROCESSING","","102 Processing [RFC2518]",35,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",35,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",35,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",35,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",35,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",35,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",35,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",35,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",35,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",35,null],[18,"IM_USED","","226 IM Used [RFC3229]",35,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",35,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",35,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",35,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",35,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",35,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",35,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",35,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",35,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",35,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",35,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",35,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",35,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",35,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",35,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",35,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",35,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",35,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",35,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",35,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",35,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",35,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",35,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",35,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",35,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",35,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",35,null],[18,"IM_A_TEAPOT","","418 I\'m a teapot [curiously not registered by IANA but …",35,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",35,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",35,null],[18,"LOCKED","","423 Locked [RFC4918]",35,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",35,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",35,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",35,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",35,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",35,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",35,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",35,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",35,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",35,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",35,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",35,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",35,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",35,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",35,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",35,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",35,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",35,null],[18,"HTTP_09","","<code>HTTP/0.9</code>",36,null],[18,"HTTP_10","","<code>HTTP/1.0</code>",36,null],[18,"HTTP_11","","<code>HTTP/1.1</code>",36,null],[18,"HTTP_2","","<code>HTTP/2.0</code>",36,null],[18,"HTTP_3","","<code>HTTP/3.0</code>",36,null],[11,"parse","","Parse an absolute URL from a string.",37,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",37,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",37,[[["str",15]],[["result",4],["url",3],["parseerror",4]]]],[11,"make_relative","","Creates a relative URL if possible, with this URL as the …",37,[[["url",3]],[["option",4],["string",3]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",37,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",37,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",37,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",37,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",37,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",37,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",37,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",37,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",37,[[],[["str",15],["option",4]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",37,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",37,[[],[["str",15],["option",4]]]],[11,"host","","Return the parsed representation of the host for this URL.…",37,[[],[["host",4],["option",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",37,[[],[["str",15],["option",4]]]],[11,"port","","Return the port number for this URL, if any.",37,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",37,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",37,[[],[["vec",3],["result",4],["error",3]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",37,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",37,[[],[["option",4],["split",3]]]],[11,"query","","Return this URL’s query string, if any, as a …",37,[[],[["str",15],["option",4]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",37,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",37,[[],[["str",15],["option",4]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",37,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",37,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",37,[[],[["urlquery",3],["serializer",3]]]],[11,"set_path","","Change this URL’s path.",37,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",37,[[],[["pathsegmentsmut",3],["result",4]]]],[11,"set_port","","Change this URL’s port number.",37,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",37,[[["option",4],["str",15]],[["result",4],["parseerror",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",37,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",37,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",37,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",37,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",37,[[],[["url",3],["result",4]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",37,[[],[["url",3],["result",4]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",37,[[],[["pathbuf",3],["result",4]]]]],"p":[[3,"Form"],[3,"Part"],[3,"Policy"],[3,"Attempt"],[4,"Entry"],[8,"ResponseBuilderExt"],[3,"Error"],[3,"Body"],[3,"Client"],[3,"ClientBuilder"],[3,"Request"],[3,"RequestBuilder"],[3,"Response"],[3,"Proxy"],[3,"Action"],[3,"Drain"],[3,"GetAll"],[3,"HeaderMap"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"ValueDrain"],[3,"ValueIter"],[3,"ValueIterMut"],[3,"Values"],[3,"ValuesMut"],[3,"HeaderName"],[3,"InvalidHeaderName"],[3,"HeaderValue"],[3,"InvalidHeaderValue"],[3,"ToStrError"],[3,"Method"],[3,"StatusCode"],[3,"Version"],[3,"Url"]]},\
"ryu":{"doc":"github crates-io docs-rs","i":[[0,"raw","ryu","Unsafe functions that mirror the API of the C …",null,null],[5,"format32","ryu::raw","Print f32 to the given buffer and return number of bytes …",null,[[["f32",15]],["usize",15]]],[5,"format64","","Print f64 to the given buffer and return number of bytes …",null,[[["f64",15]],["usize",15]]],[3,"Buffer","ryu","Safe API for formatting floating point numbers to text.",null,null],[8,"Float","","A floating point number, f32 or f64, that can be written …",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[]]],[11,"default","","",0,[[]]],[11,"new","","This is a cheap operation; you don\'t need to worry about …",0,[[]]],[11,"format","","Print a floating point number into this buffer and return …",0,[[["float",8]],["str",15]]],[11,"format_finite","","Print a floating point number into this buffer and return …",0,[[["float",8]],["str",15]]]],"p":[[3,"Buffer"]]},\
"serde":{"doc":"SerdeSerde is a framework for <em><strong>ser</strong></em>ializing and <em><strong>de</strong></em>…","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[0,"value","serde::de","Building blocks for deserializing basic values using the …",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can …",null,null],[3,"UnitDeserializer","","A deserializer holding a <code>()</code>.",null,null],[3,"BoolDeserializer","","A deserializer holding a <code>bool</code>.",null,null],[3,"I8Deserializer","","A deserializer holding an <code>i8</code>.",null,null],[3,"I16Deserializer","","A deserializer holding an <code>i16</code>.",null,null],[3,"I32Deserializer","","A deserializer holding an <code>i32</code>.",null,null],[3,"I64Deserializer","","A deserializer holding an <code>i64</code>.",null,null],[3,"IsizeDeserializer","","A deserializer holding an <code>isize</code>.",null,null],[3,"U8Deserializer","","A deserializer holding a <code>u8</code>.",null,null],[3,"U16Deserializer","","A deserializer holding a <code>u16</code>.",null,null],[3,"U64Deserializer","","A deserializer holding a <code>u64</code>.",null,null],[3,"UsizeDeserializer","","A deserializer holding a <code>usize</code>.",null,null],[3,"F32Deserializer","","A deserializer holding an <code>f32</code>.",null,null],[3,"F64Deserializer","","A deserializer holding an <code>f64</code>.",null,null],[3,"CharDeserializer","","A deserializer holding a <code>char</code>.",null,null],[3,"I128Deserializer","","A deserializer holding an <code>i128</code>.",null,null],[3,"U128Deserializer","","A deserializer holding a <code>u128</code>.",null,null],[3,"U32Deserializer","","A deserializer holding a <code>u32</code>.",null,null],[3,"StrDeserializer","","A deserializer holding a <code>&str</code>.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a <code>&str</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",0,[[["str",15]],["borrowedstrdeserializer",3]]],[3,"StringDeserializer","","A deserializer holding a <code>String</code>.",null,null],[3,"CowStrDeserializer","","A deserializer holding a <code>Cow<str></code>.",null,null],[3,"BytesDeserializer","","A deserializer holding a <code>&[u8]</code>. Always calls […",null,null],[11,"new","","Create a new deserializer from the given bytes.",1,[[]]],[3,"BorrowedBytesDeserializer","","A deserializer holding a <code>&[u8]</code> with a lifetime tied to …",null,null],[11,"new","","Create a new borrowed deserializer from the given …",2,[[]]],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[11,"new","","Construct a new <code>SeqDeserializer<I, E></code>.",3,[[]]],[11,"end","","Check for remaining elements after passing a …",3,[[],["result",4]]],[3,"SeqAccessDeserializer","","A deserializer holding a <code>SeqAccess</code>.",null,null],[11,"new","","Construct a new <code>SeqAccessDeserializer<A></code>.",4,[[]]],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[11,"new","","Construct a new <code>MapDeserializer<I, E></code>.",5,[[]]],[11,"end","","Check for remaining elements after passing a …",5,[[],["result",4]]],[3,"MapAccessDeserializer","","A deserializer holding a <code>MapAccess</code>.",null,null],[11,"new","","Construct a new <code>MapAccessDeserializer<A></code>.",6,[[]]],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[8,"Error","","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …",null,null],[10,"custom","","Raised when there is general error when deserializing a …",7,[[]]],[11,"invalid_type","","Raised when a <code>Deserialize</code> receives a type different from …",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_value","","Raised when a <code>Deserialize</code> receives a value of the right …",7,[[["expected",8],["unexpected",4]]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input …",7,[[["usize",15],["expected",8]]]],[11,"unknown_variant","","Raised when a <code>Deserialize</code> enum type received a variant …",7,[[["str",15]]]],[11,"unknown_field","","Raised when a <code>Deserialize</code> struct type received a field …",7,[[["str",15]]]],[11,"missing_field","","Raised when a <code>Deserialize</code> struct type expected to receive …",7,[[["str",15]]]],[11,"duplicate_field","","Raised when a <code>Deserialize</code> struct type received more than …",7,[[["str",15]]]],[4,"Unexpected","","<code>Unexpected</code> represents an unexpected invocation of any one …",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",8,null],[13,"Unsigned","","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or …",8,null],[13,"Signed","","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …",8,null],[13,"Float","","The input contained a floating point <code>f32</code> or <code>f64</code> that was …",8,null],[13,"Char","","The input contained a <code>char</code> that was not expected.",8,null],[13,"Str","","The input contained a <code>&str</code> or <code>String</code> that was not …",8,null],[13,"Bytes","","The input contained a <code>&[u8]</code> or <code>Vec<u8></code> that was not …",8,null],[13,"Unit","","The input contained a unit <code>()</code> that was not expected.",8,null],[13,"Option","","The input contained an <code>Option<T></code> that was not expected.",8,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not …",8,null],[13,"Seq","","The input contained a sequence that was not expected.",8,null],[13,"Map","","The input contained a map that was not expected.",8,null],[13,"Enum","","The input contained an enum that was not expected.",8,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",8,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not …",8,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",8,null],[13,"StructVariant","","The input contained a struct variant that was not …",8,null],[13,"Other","","A message stating what uncategorized thing the input …",8,null],[8,"Expected","","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …",null,null],[10,"fmt","","Format an explanation of what data was being expected. …",9,[[["formatter",3]],["result",6]]],[8,"Deserialize","","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"DeserializeOwned","","A data structure that can be deserialized without …",null,null],[8,"DeserializeSeed","","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …",null,null],[16,"Value","","The type produced by using this seed.",11,null],[10,"deserialize","","Equivalent to the more common <code>Deserialize::deserialize</code> …",11,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Visitor","","This trait represents a visitor that walks through a …",null,null],[16,"Value","","The value produced by this visitor.",13,null],[10,"expecting","","Format a message stating what data this Visitor expects …",13,[[["formatter",3]],["result",6]]],[11,"visit_bool","","The input contains a boolean.",13,[[["bool",15]],["result",4]]],[11,"visit_i8","","The input contains an <code>i8</code>.",13,[[["i8",15]],["result",4]]],[11,"visit_i16","","The input contains an <code>i16</code>.",13,[[["i16",15]],["result",4]]],[11,"visit_i32","","The input contains an <code>i32</code>.",13,[[["i32",15]],["result",4]]],[11,"visit_i64","","The input contains an <code>i64</code>.",13,[[["i64",15]],["result",4]]],[11,"visit_i128","","The input contains a <code>i128</code>.",13,[[["i128",15]],["result",4]]],[11,"visit_u8","","The input contains a <code>u8</code>.",13,[[["u8",15]],["result",4]]],[11,"visit_u16","","The input contains a <code>u16</code>.",13,[[["u16",15]],["result",4]]],[11,"visit_u32","","The input contains a <code>u32</code>.",13,[[["u32",15]],["result",4]]],[11,"visit_u64","","The input contains a <code>u64</code>.",13,[[["u64",15]],["result",4]]],[11,"visit_u128","","The input contains a <code>u128</code>.",13,[[["u128",15]],["result",4]]],[11,"visit_f32","","The input contains an <code>f32</code>.",13,[[["f32",15]],["result",4]]],[11,"visit_f64","","The input contains an <code>f64</code>.",13,[[["f64",15]],["result",4]]],[11,"visit_char","","The input contains a <code>char</code>.",13,[[["char",15]],["result",4]]],[11,"visit_str","","The input contains a string. The lifetime of the string …",13,[[["str",15]],["result",4]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long …",13,[[["str",15]],["result",4]]],[11,"visit_string","","The input contains a string and ownership of the string …",13,[[["string",3]],["result",4]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte …",13,[[],["result",4]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as …",13,[[],["result",4]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte …",13,[[["vec",3],["u8",15]],["result",4]]],[11,"visit_none","","The input contains an optional that is absent.",13,[[],["result",4]]],[11,"visit_some","","The input contains an optional that is present.",13,[[],["result",4]]],[11,"visit_unit","","The input contains a unit <code>()</code>.",13,[[],["result",4]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",13,[[],["result",4]]],[11,"visit_seq","","The input contains a sequence of elements.",13,[[],["result",4]]],[11,"visit_map","","The input contains a key-value map.",13,[[],["result",4]]],[11,"visit_enum","","The input contains an enum.",13,[[],["result",4]]],[8,"SeqAccess","","Provides a <code>Visitor</code> access to each element of a sequence …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",14,null],[10,"next_element_seed","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["option",4],["result",4]]]],[11,"next_element","","This returns <code>Ok(Some(value))</code> for the next value in the …",14,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, …",14,[[],[["usize",15],["option",4]]]],[8,"MapAccess","","Provides a <code>Visitor</code> access to each entry of a map in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",15,null],[10,"next_key_seed","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["option",4],["result",4]]]],[10,"next_value_seed","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry_seed","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["result",4],["option",4]]]],[11,"next_key","","This returns <code>Ok(Some(key))</code> for the next key in the map, …",15,[[],[["option",4],["result",4]]]],[11,"next_value","","This returns a <code>Ok(value)</code> for the next value in the map.",15,[[],["result",4]]],[11,"next_entry","","This returns <code>Ok(Some((key, value)))</code> for the next …",15,[[],[["option",4],["result",4]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if …",15,[[],[["usize",15],["option",4]]]],[8,"EnumAccess","","Provides a <code>Visitor</code> access to the data of an enum in the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",16,null],[16,"Variant","","The <code>Visitor</code> that will be used to deserialize the content …",16,null],[10,"variant_seed","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[11,"variant","","<code>variant</code> is called to identify which variant to …",16,[[],["result",4]]],[8,"VariantAccess","","<code>VariantAccess</code> is a visitor that is created by the …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",17,null],[10,"unit_variant","","Called when deserializing a variant with no values.",17,[[],["result",4]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",17,[[],["result",4]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",17,[[["usize",15]],["result",4]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",17,[[],["result",4]]],[8,"IntoDeserializer","","Converts an existing value into a <code>Deserializer</code> from which …",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",18,null],[10,"into_deserializer","","Convert this value into a deserializer.",18,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a <code>Serializer</code> that does not …",null,null],[8,"Error","","Trait used by <code>Serialize</code> implementations to generically …",null,null],[10,"custom","","Used when a <code>Serialize</code> implementation encounters any error …",19,[[]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[8,"SerializeSeq","","Returned from <code>Serializer::serialize_seq</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",22,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",22,null],[10,"serialize_element","","Serialize a sequence element.",22,[[],["result",4]]],[10,"end","","Finish serializing a sequence.",22,[[],["result",4]]],[8,"SerializeTuple","","Returned from <code>Serializer::serialize_tuple</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",23,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",23,null],[10,"serialize_element","","Serialize a tuple element.",23,[[],["result",4]]],[10,"end","","Finish serializing a tuple.",23,[[],["result",4]]],[8,"SerializeTupleStruct","","Returned from <code>Serializer::serialize_tuple_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",24,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",24,null],[10,"serialize_field","","Serialize a tuple struct field.",24,[[],["result",4]]],[10,"end","","Finish serializing a tuple struct.",24,[[],["result",4]]],[8,"SerializeTupleVariant","","Returned from <code>Serializer::serialize_tuple_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",25,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",25,null],[10,"serialize_field","","Serialize a tuple variant field.",25,[[],["result",4]]],[10,"end","","Finish serializing a tuple variant.",25,[[],["result",4]]],[8,"SerializeMap","","Returned from <code>Serializer::serialize_map</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",26,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",26,null],[10,"serialize_key","","Serialize a map key.",26,[[],["result",4]]],[10,"serialize_value","","Serialize a map value.",26,[[],["result",4]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",26,[[],["result",4]]],[10,"end","","Finish serializing a map.",26,[[],["result",4]]],[8,"SerializeStruct","","Returned from <code>Serializer::serialize_struct</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",27,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",27,null],[10,"serialize_field","","Serialize a struct field.",27,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct field has been skipped.",27,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct.",27,[[],["result",4]]],[8,"SerializeStructVariant","","Returned from <code>Serializer::serialize_struct_variant</code>.",null,null],[16,"Ok","","Must match the <code>Ok</code> type of our <code>Serializer</code>.",28,null],[16,"Error","","Must match the <code>Error</code> type of our <code>Serializer</code>.",28,null],[10,"serialize_field","","Serialize a struct variant field.",28,[[["str",15]],["result",4]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",28,[[["str",15]],["result",4]]],[10,"end","","Finish serializing a struct variant.",28,[[],["result",4]]],[8,"Deserialize","serde","A <strong>data structure</strong> that can be deserialized from any data …",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",10,[[],["result",4]]],[8,"Deserializer","","A <strong>data format</strong> that can deserialize any data structure …",null,null],[16,"Error","","The error type that can be returned if some error occurs …",12,null],[10,"deserialize_any","","Require the <code>Deserializer</code> to figure out how to drive the …",12,[[],["result",4]]],[10,"deserialize_bool","","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.",12,[[],["result",4]]],[10,"deserialize_i8","","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.",12,[[],["result",4]]],[10,"deserialize_i16","","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.",12,[[],["result",4]]],[10,"deserialize_i32","","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.",12,[[],["result",4]]],[10,"deserialize_i64","","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.",12,[[],["result",4]]],[11,"deserialize_i128","","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.",12,[[],["result",4]]],[10,"deserialize_u8","","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.",12,[[],["result",4]]],[10,"deserialize_u16","","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.",12,[[],["result",4]]],[10,"deserialize_u32","","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.",12,[[],["result",4]]],[10,"deserialize_u64","","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.",12,[[],["result",4]]],[11,"deserialize_u128","","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.",12,[[],["result",4]]],[10,"deserialize_f32","","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.",12,[[],["result",4]]],[10,"deserialize_f64","","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.",12,[[],["result",4]]],[10,"deserialize_char","","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.",12,[[],["result",4]]],[10,"deserialize_str","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_string","","Hint that the <code>Deserialize</code> type is expecting a string …",12,[[],["result",4]]],[10,"deserialize_bytes","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_byte_buf","","Hint that the <code>Deserialize</code> type is expecting a byte array …",12,[[],["result",4]]],[10,"deserialize_option","","Hint that the <code>Deserialize</code> type is expecting an optional …",12,[[],["result",4]]],[10,"deserialize_unit","","Hint that the <code>Deserialize</code> type is expecting a unit value.",12,[[],["result",4]]],[10,"deserialize_unit_struct","","Hint that the <code>Deserialize</code> type is expecting a unit struct …",12,[[["str",15]],["result",4]]],[10,"deserialize_newtype_struct","","Hint that the <code>Deserialize</code> type is expecting a newtype …",12,[[["str",15]],["result",4]]],[10,"deserialize_seq","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[],["result",4]]],[10,"deserialize_tuple","","Hint that the <code>Deserialize</code> type is expecting a sequence of …",12,[[["usize",15]],["result",4]]],[10,"deserialize_tuple_struct","","Hint that the <code>Deserialize</code> type is expecting a tuple …",12,[[["usize",15],["str",15]],["result",4]]],[10,"deserialize_map","","Hint that the <code>Deserialize</code> type is expecting a map of …",12,[[],["result",4]]],[10,"deserialize_struct","","Hint that the <code>Deserialize</code> type is expecting a struct with …",12,[[["str",15]],["result",4]]],[10,"deserialize_enum","","Hint that the <code>Deserialize</code> type is expecting an enum value …",12,[[["str",15]],["result",4]]],[10,"deserialize_identifier","","Hint that the <code>Deserialize</code> type is expecting the name of a …",12,[[],["result",4]]],[10,"deserialize_ignored_any","","Hint that the <code>Deserialize</code> type needs to deserialize a …",12,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Deserialize</code> implementations should …",12,[[],["bool",15]]],[8,"Serialize","","A <strong>data structure</strong> that can be serialized into any data …",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",20,[[],["result",4]]],[8,"Serializer","","A <strong>data format</strong> that can serialize any data structure …",null,null],[16,"Ok","","The output type produced by this <code>Serializer</code> during …",21,null],[16,"Error","","The error type when some error occurs during …",21,null],[16,"SerializeSeq","","Type returned from <code>serialize_seq</code> for serializing the …",21,null],[16,"SerializeTuple","","Type returned from <code>serialize_tuple</code> for serializing the …",21,null],[16,"SerializeTupleStruct","","Type returned from <code>serialize_tuple_struct</code> for serializing …",21,null],[16,"SerializeTupleVariant","","Type returned from <code>serialize_tuple_variant</code> for …",21,null],[16,"SerializeMap","","Type returned from <code>serialize_map</code> for serializing the …",21,null],[16,"SerializeStruct","","Type returned from <code>serialize_struct</code> for serializing the …",21,null],[16,"SerializeStructVariant","","Type returned from <code>serialize_struct_variant</code> for …",21,null],[10,"serialize_bool","","Serialize a <code>bool</code> value.",21,[[["bool",15]],["result",4]]],[10,"serialize_i8","","Serialize an <code>i8</code> value.",21,[[["i8",15]],["result",4]]],[10,"serialize_i16","","Serialize an <code>i16</code> value.",21,[[["i16",15]],["result",4]]],[10,"serialize_i32","","Serialize an <code>i32</code> value.",21,[[["i32",15]],["result",4]]],[10,"serialize_i64","","Serialize an <code>i64</code> value.",21,[[["i64",15]],["result",4]]],[11,"serialize_i128","","Serialize an <code>i128</code> value.",21,[[["i128",15]],["result",4]]],[10,"serialize_u8","","Serialize a <code>u8</code> value.",21,[[["u8",15]],["result",4]]],[10,"serialize_u16","","Serialize a <code>u16</code> value.",21,[[["u16",15]],["result",4]]],[10,"serialize_u32","","Serialize a <code>u32</code> value.",21,[[["u32",15]],["result",4]]],[10,"serialize_u64","","Serialize a <code>u64</code> value.",21,[[["u64",15]],["result",4]]],[11,"serialize_u128","","Serialize a <code>u128</code> value.",21,[[["u128",15]],["result",4]]],[10,"serialize_f32","","Serialize an <code>f32</code> value.",21,[[["f32",15]],["result",4]]],[10,"serialize_f64","","Serialize an <code>f64</code> value.",21,[[["f64",15]],["result",4]]],[10,"serialize_char","","Serialize a character.",21,[[["char",15]],["result",4]]],[10,"serialize_str","","Serialize a <code>&str</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",21,[[],["result",4]]],[10,"serialize_none","","Serialize a <code>None</code> value.",21,[[],["result",4]]],[10,"serialize_some","","Serialize a <code>Some(T)</code> value.",21,[[],["result",4]]],[10,"serialize_unit","","Serialize a <code>()</code> value.",21,[[],["result",4]]],[10,"serialize_unit_struct","","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData<T></code>…",21,[[["str",15]],["result",4]]],[10,"serialize_unit_variant","","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.",21,[[["str",15]],["result",4]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.",21,[[["u32",15],["str",15]],["result",4]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose …",21,[[["usize",15]],["result",4]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like <code>E::T</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by …",21,[[["usize",15],["option",4]],["result",4]]],[10,"serialize_struct","","Begin to serialize a struct like …",21,[[["usize",15],["str",15]],["result",4]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like <code>E::S</code> in …",21,[[["u32",15],["str",15],["usize",15]],["result",4]]],[11,"collect_seq","","Collect an iterator as a sequence.",21,[[],["result",4]]],[11,"collect_map","","Collect an iterator as a map.",21,[[],["result",4]]],[11,"collect_str","","Serialize a string produced by an implementation of …",21,[[],["result",4]]],[11,"is_human_readable","","Determine whether <code>Serialize</code> implementations should …",21,[[],["bool",15]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the <code>Deserializer</code> part of a …",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is …",null,null],[11,"from","serde::de::value","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"fmt","serde::de","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde::ser","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"deserialize","serde::de","",50,[[],[["result",4],["ignoredany",3]]]],[11,"deserialize_bool","serde::de::value","",30,[[],["result",4]]],[11,"deserialize_i8","","",30,[[],["result",4]]],[11,"deserialize_i16","","",30,[[],["result",4]]],[11,"deserialize_i32","","",30,[[],["result",4]]],[11,"deserialize_i64","","",30,[[],["result",4]]],[11,"deserialize_i128","","",30,[[],["result",4]]],[11,"deserialize_u8","","",30,[[],["result",4]]],[11,"deserialize_u16","","",30,[[],["result",4]]],[11,"deserialize_u32","","",30,[[],["result",4]]],[11,"deserialize_u64","","",30,[[],["result",4]]],[11,"deserialize_u128","","",30,[[],["result",4]]],[11,"deserialize_f32","","",30,[[],["result",4]]],[11,"deserialize_f64","","",30,[[],["result",4]]],[11,"deserialize_char","","",30,[[],["result",4]]],[11,"deserialize_str","","",30,[[],["result",4]]],[11,"deserialize_string","","",30,[[],["result",4]]],[11,"deserialize_bytes","","",30,[[],["result",4]]],[11,"deserialize_byte_buf","","",30,[[],["result",4]]],[11,"deserialize_unit","","",30,[[],["result",4]]],[11,"deserialize_unit_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",30,[[],["result",4]]],[11,"deserialize_tuple","","",30,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",30,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",30,[[],["result",4]]],[11,"deserialize_struct","","",30,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",30,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",30,[[],["result",4]]],[11,"deserialize_ignored_any","","",30,[[],["result",4]]],[11,"deserialize_any","","",30,[[],["result",4]]],[11,"deserialize_option","","",30,[[],["result",4]]],[11,"deserialize_bool","","",31,[[],["result",4]]],[11,"deserialize_i8","","",31,[[],["result",4]]],[11,"deserialize_i16","","",31,[[],["result",4]]],[11,"deserialize_i32","","",31,[[],["result",4]]],[11,"deserialize_i64","","",31,[[],["result",4]]],[11,"deserialize_i128","","",31,[[],["result",4]]],[11,"deserialize_u8","","",31,[[],["result",4]]],[11,"deserialize_u16","","",31,[[],["result",4]]],[11,"deserialize_u32","","",31,[[],["result",4]]],[11,"deserialize_u64","","",31,[[],["result",4]]],[11,"deserialize_u128","","",31,[[],["result",4]]],[11,"deserialize_f32","","",31,[[],["result",4]]],[11,"deserialize_f64","","",31,[[],["result",4]]],[11,"deserialize_char","","",31,[[],["result",4]]],[11,"deserialize_str","","",31,[[],["result",4]]],[11,"deserialize_string","","",31,[[],["result",4]]],[11,"deserialize_bytes","","",31,[[],["result",4]]],[11,"deserialize_byte_buf","","",31,[[],["result",4]]],[11,"deserialize_option","","",31,[[],["result",4]]],[11,"deserialize_unit","","",31,[[],["result",4]]],[11,"deserialize_unit_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",31,[[],["result",4]]],[11,"deserialize_tuple","","",31,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",31,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",31,[[],["result",4]]],[11,"deserialize_struct","","",31,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",31,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",31,[[],["result",4]]],[11,"deserialize_ignored_any","","",31,[[],["result",4]]],[11,"deserialize_any","","",31,[[],["result",4]]],[11,"deserialize_bool","","",32,[[],["result",4]]],[11,"deserialize_i8","","",32,[[],["result",4]]],[11,"deserialize_i16","","",32,[[],["result",4]]],[11,"deserialize_i32","","",32,[[],["result",4]]],[11,"deserialize_i64","","",32,[[],["result",4]]],[11,"deserialize_i128","","",32,[[],["result",4]]],[11,"deserialize_u8","","",32,[[],["result",4]]],[11,"deserialize_u16","","",32,[[],["result",4]]],[11,"deserialize_u32","","",32,[[],["result",4]]],[11,"deserialize_u64","","",32,[[],["result",4]]],[11,"deserialize_u128","","",32,[[],["result",4]]],[11,"deserialize_f32","","",32,[[],["result",4]]],[11,"deserialize_f64","","",32,[[],["result",4]]],[11,"deserialize_char","","",32,[[],["result",4]]],[11,"deserialize_str","","",32,[[],["result",4]]],[11,"deserialize_string","","",32,[[],["result",4]]],[11,"deserialize_bytes","","",32,[[],["result",4]]],[11,"deserialize_byte_buf","","",32,[[],["result",4]]],[11,"deserialize_option","","",32,[[],["result",4]]],[11,"deserialize_unit","","",32,[[],["result",4]]],[11,"deserialize_unit_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",32,[[],["result",4]]],[11,"deserialize_tuple","","",32,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",32,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",32,[[],["result",4]]],[11,"deserialize_struct","","",32,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",32,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",32,[[],["result",4]]],[11,"deserialize_ignored_any","","",32,[[],["result",4]]],[11,"deserialize_any","","",32,[[],["result",4]]],[11,"deserialize_bool","","",33,[[],["result",4]]],[11,"deserialize_i8","","",33,[[],["result",4]]],[11,"deserialize_i16","","",33,[[],["result",4]]],[11,"deserialize_i32","","",33,[[],["result",4]]],[11,"deserialize_i64","","",33,[[],["result",4]]],[11,"deserialize_i128","","",33,[[],["result",4]]],[11,"deserialize_u8","","",33,[[],["result",4]]],[11,"deserialize_u16","","",33,[[],["result",4]]],[11,"deserialize_u32","","",33,[[],["result",4]]],[11,"deserialize_u64","","",33,[[],["result",4]]],[11,"deserialize_u128","","",33,[[],["result",4]]],[11,"deserialize_f32","","",33,[[],["result",4]]],[11,"deserialize_f64","","",33,[[],["result",4]]],[11,"deserialize_char","","",33,[[],["result",4]]],[11,"deserialize_str","","",33,[[],["result",4]]],[11,"deserialize_string","","",33,[[],["result",4]]],[11,"deserialize_bytes","","",33,[[],["result",4]]],[11,"deserialize_byte_buf","","",33,[[],["result",4]]],[11,"deserialize_option","","",33,[[],["result",4]]],[11,"deserialize_unit","","",33,[[],["result",4]]],[11,"deserialize_unit_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",33,[[],["result",4]]],[11,"deserialize_tuple","","",33,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",33,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",33,[[],["result",4]]],[11,"deserialize_struct","","",33,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",33,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",33,[[],["result",4]]],[11,"deserialize_ignored_any","","",33,[[],["result",4]]],[11,"deserialize_any","","",33,[[],["result",4]]],[11,"deserialize_bool","","",34,[[],["result",4]]],[11,"deserialize_i8","","",34,[[],["result",4]]],[11,"deserialize_i16","","",34,[[],["result",4]]],[11,"deserialize_i32","","",34,[[],["result",4]]],[11,"deserialize_i64","","",34,[[],["result",4]]],[11,"deserialize_i128","","",34,[[],["result",4]]],[11,"deserialize_u8","","",34,[[],["result",4]]],[11,"deserialize_u16","","",34,[[],["result",4]]],[11,"deserialize_u32","","",34,[[],["result",4]]],[11,"deserialize_u64","","",34,[[],["result",4]]],[11,"deserialize_u128","","",34,[[],["result",4]]],[11,"deserialize_f32","","",34,[[],["result",4]]],[11,"deserialize_f64","","",34,[[],["result",4]]],[11,"deserialize_char","","",34,[[],["result",4]]],[11,"deserialize_str","","",34,[[],["result",4]]],[11,"deserialize_string","","",34,[[],["result",4]]],[11,"deserialize_bytes","","",34,[[],["result",4]]],[11,"deserialize_byte_buf","","",34,[[],["result",4]]],[11,"deserialize_option","","",34,[[],["result",4]]],[11,"deserialize_unit","","",34,[[],["result",4]]],[11,"deserialize_unit_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",34,[[],["result",4]]],[11,"deserialize_tuple","","",34,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",34,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",34,[[],["result",4]]],[11,"deserialize_struct","","",34,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",34,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",34,[[],["result",4]]],[11,"deserialize_ignored_any","","",34,[[],["result",4]]],[11,"deserialize_any","","",34,[[],["result",4]]],[11,"deserialize_bool","","",35,[[],["result",4]]],[11,"deserialize_i8","","",35,[[],["result",4]]],[11,"deserialize_i16","","",35,[[],["result",4]]],[11,"deserialize_i32","","",35,[[],["result",4]]],[11,"deserialize_i64","","",35,[[],["result",4]]],[11,"deserialize_i128","","",35,[[],["result",4]]],[11,"deserialize_u8","","",35,[[],["result",4]]],[11,"deserialize_u16","","",35,[[],["result",4]]],[11,"deserialize_u32","","",35,[[],["result",4]]],[11,"deserialize_u64","","",35,[[],["result",4]]],[11,"deserialize_u128","","",35,[[],["result",4]]],[11,"deserialize_f32","","",35,[[],["result",4]]],[11,"deserialize_f64","","",35,[[],["result",4]]],[11,"deserialize_char","","",35,[[],["result",4]]],[11,"deserialize_str","","",35,[[],["result",4]]],[11,"deserialize_string","","",35,[[],["result",4]]],[11,"deserialize_bytes","","",35,[[],["result",4]]],[11,"deserialize_byte_buf","","",35,[[],["result",4]]],[11,"deserialize_option","","",35,[[],["result",4]]],[11,"deserialize_unit","","",35,[[],["result",4]]],[11,"deserialize_unit_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",35,[[],["result",4]]],[11,"deserialize_tuple","","",35,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",35,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",35,[[],["result",4]]],[11,"deserialize_struct","","",35,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",35,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",35,[[],["result",4]]],[11,"deserialize_ignored_any","","",35,[[],["result",4]]],[11,"deserialize_any","","",35,[[],["result",4]]],[11,"deserialize_bool","","",36,[[],["result",4]]],[11,"deserialize_i8","","",36,[[],["result",4]]],[11,"deserialize_i16","","",36,[[],["result",4]]],[11,"deserialize_i32","","",36,[[],["result",4]]],[11,"deserialize_i64","","",36,[[],["result",4]]],[11,"deserialize_i128","","",36,[[],["result",4]]],[11,"deserialize_u8","","",36,[[],["result",4]]],[11,"deserialize_u16","","",36,[[],["result",4]]],[11,"deserialize_u32","","",36,[[],["result",4]]],[11,"deserialize_u64","","",36,[[],["result",4]]],[11,"deserialize_u128","","",36,[[],["result",4]]],[11,"deserialize_f32","","",36,[[],["result",4]]],[11,"deserialize_f64","","",36,[[],["result",4]]],[11,"deserialize_char","","",36,[[],["result",4]]],[11,"deserialize_str","","",36,[[],["result",4]]],[11,"deserialize_string","","",36,[[],["result",4]]],[11,"deserialize_bytes","","",36,[[],["result",4]]],[11,"deserialize_byte_buf","","",36,[[],["result",4]]],[11,"deserialize_option","","",36,[[],["result",4]]],[11,"deserialize_unit","","",36,[[],["result",4]]],[11,"deserialize_unit_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",36,[[],["result",4]]],[11,"deserialize_tuple","","",36,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",36,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",36,[[],["result",4]]],[11,"deserialize_struct","","",36,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",36,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",36,[[],["result",4]]],[11,"deserialize_ignored_any","","",36,[[],["result",4]]],[11,"deserialize_any","","",36,[[],["result",4]]],[11,"deserialize_bool","","",37,[[],["result",4]]],[11,"deserialize_i8","","",37,[[],["result",4]]],[11,"deserialize_i16","","",37,[[],["result",4]]],[11,"deserialize_i32","","",37,[[],["result",4]]],[11,"deserialize_i64","","",37,[[],["result",4]]],[11,"deserialize_i128","","",37,[[],["result",4]]],[11,"deserialize_u8","","",37,[[],["result",4]]],[11,"deserialize_u16","","",37,[[],["result",4]]],[11,"deserialize_u32","","",37,[[],["result",4]]],[11,"deserialize_u64","","",37,[[],["result",4]]],[11,"deserialize_u128","","",37,[[],["result",4]]],[11,"deserialize_f32","","",37,[[],["result",4]]],[11,"deserialize_f64","","",37,[[],["result",4]]],[11,"deserialize_char","","",37,[[],["result",4]]],[11,"deserialize_str","","",37,[[],["result",4]]],[11,"deserialize_string","","",37,[[],["result",4]]],[11,"deserialize_bytes","","",37,[[],["result",4]]],[11,"deserialize_byte_buf","","",37,[[],["result",4]]],[11,"deserialize_option","","",37,[[],["result",4]]],[11,"deserialize_unit","","",37,[[],["result",4]]],[11,"deserialize_unit_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",37,[[],["result",4]]],[11,"deserialize_tuple","","",37,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",37,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",37,[[],["result",4]]],[11,"deserialize_struct","","",37,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",37,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",37,[[],["result",4]]],[11,"deserialize_ignored_any","","",37,[[],["result",4]]],[11,"deserialize_any","","",37,[[],["result",4]]],[11,"deserialize_bool","","",38,[[],["result",4]]],[11,"deserialize_i8","","",38,[[],["result",4]]],[11,"deserialize_i16","","",38,[[],["result",4]]],[11,"deserialize_i32","","",38,[[],["result",4]]],[11,"deserialize_i64","","",38,[[],["result",4]]],[11,"deserialize_i128","","",38,[[],["result",4]]],[11,"deserialize_u8","","",38,[[],["result",4]]],[11,"deserialize_u16","","",38,[[],["result",4]]],[11,"deserialize_u32","","",38,[[],["result",4]]],[11,"deserialize_u64","","",38,[[],["result",4]]],[11,"deserialize_u128","","",38,[[],["result",4]]],[11,"deserialize_f32","","",38,[[],["result",4]]],[11,"deserialize_f64","","",38,[[],["result",4]]],[11,"deserialize_char","","",38,[[],["result",4]]],[11,"deserialize_str","","",38,[[],["result",4]]],[11,"deserialize_string","","",38,[[],["result",4]]],[11,"deserialize_bytes","","",38,[[],["result",4]]],[11,"deserialize_byte_buf","","",38,[[],["result",4]]],[11,"deserialize_option","","",38,[[],["result",4]]],[11,"deserialize_unit","","",38,[[],["result",4]]],[11,"deserialize_unit_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",38,[[],["result",4]]],[11,"deserialize_tuple","","",38,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",38,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",38,[[],["result",4]]],[11,"deserialize_struct","","",38,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",38,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",38,[[],["result",4]]],[11,"deserialize_ignored_any","","",38,[[],["result",4]]],[11,"deserialize_any","","",38,[[],["result",4]]],[11,"deserialize_bool","","",39,[[],["result",4]]],[11,"deserialize_i8","","",39,[[],["result",4]]],[11,"deserialize_i16","","",39,[[],["result",4]]],[11,"deserialize_i32","","",39,[[],["result",4]]],[11,"deserialize_i64","","",39,[[],["result",4]]],[11,"deserialize_i128","","",39,[[],["result",4]]],[11,"deserialize_u8","","",39,[[],["result",4]]],[11,"deserialize_u16","","",39,[[],["result",4]]],[11,"deserialize_u32","","",39,[[],["result",4]]],[11,"deserialize_u64","","",39,[[],["result",4]]],[11,"deserialize_u128","","",39,[[],["result",4]]],[11,"deserialize_f32","","",39,[[],["result",4]]],[11,"deserialize_f64","","",39,[[],["result",4]]],[11,"deserialize_char","","",39,[[],["result",4]]],[11,"deserialize_str","","",39,[[],["result",4]]],[11,"deserialize_string","","",39,[[],["result",4]]],[11,"deserialize_bytes","","",39,[[],["result",4]]],[11,"deserialize_byte_buf","","",39,[[],["result",4]]],[11,"deserialize_option","","",39,[[],["result",4]]],[11,"deserialize_unit","","",39,[[],["result",4]]],[11,"deserialize_unit_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",39,[[],["result",4]]],[11,"deserialize_tuple","","",39,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",39,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",39,[[],["result",4]]],[11,"deserialize_struct","","",39,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",39,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",39,[[],["result",4]]],[11,"deserialize_ignored_any","","",39,[[],["result",4]]],[11,"deserialize_any","","",39,[[],["result",4]]],[11,"deserialize_bool","","",40,[[],["result",4]]],[11,"deserialize_i8","","",40,[[],["result",4]]],[11,"deserialize_i16","","",40,[[],["result",4]]],[11,"deserialize_i32","","",40,[[],["result",4]]],[11,"deserialize_i64","","",40,[[],["result",4]]],[11,"deserialize_i128","","",40,[[],["result",4]]],[11,"deserialize_u8","","",40,[[],["result",4]]],[11,"deserialize_u16","","",40,[[],["result",4]]],[11,"deserialize_u32","","",40,[[],["result",4]]],[11,"deserialize_u64","","",40,[[],["result",4]]],[11,"deserialize_u128","","",40,[[],["result",4]]],[11,"deserialize_f32","","",40,[[],["result",4]]],[11,"deserialize_f64","","",40,[[],["result",4]]],[11,"deserialize_char","","",40,[[],["result",4]]],[11,"deserialize_str","","",40,[[],["result",4]]],[11,"deserialize_string","","",40,[[],["result",4]]],[11,"deserialize_bytes","","",40,[[],["result",4]]],[11,"deserialize_byte_buf","","",40,[[],["result",4]]],[11,"deserialize_option","","",40,[[],["result",4]]],[11,"deserialize_unit","","",40,[[],["result",4]]],[11,"deserialize_unit_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",40,[[],["result",4]]],[11,"deserialize_tuple","","",40,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",40,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",40,[[],["result",4]]],[11,"deserialize_struct","","",40,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",40,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",40,[[],["result",4]]],[11,"deserialize_ignored_any","","",40,[[],["result",4]]],[11,"deserialize_any","","",40,[[],["result",4]]],[11,"deserialize_bool","","",41,[[],["result",4]]],[11,"deserialize_i8","","",41,[[],["result",4]]],[11,"deserialize_i16","","",41,[[],["result",4]]],[11,"deserialize_i32","","",41,[[],["result",4]]],[11,"deserialize_i64","","",41,[[],["result",4]]],[11,"deserialize_i128","","",41,[[],["result",4]]],[11,"deserialize_u8","","",41,[[],["result",4]]],[11,"deserialize_u16","","",41,[[],["result",4]]],[11,"deserialize_u32","","",41,[[],["result",4]]],[11,"deserialize_u64","","",41,[[],["result",4]]],[11,"deserialize_u128","","",41,[[],["result",4]]],[11,"deserialize_f32","","",41,[[],["result",4]]],[11,"deserialize_f64","","",41,[[],["result",4]]],[11,"deserialize_char","","",41,[[],["result",4]]],[11,"deserialize_str","","",41,[[],["result",4]]],[11,"deserialize_string","","",41,[[],["result",4]]],[11,"deserialize_bytes","","",41,[[],["result",4]]],[11,"deserialize_byte_buf","","",41,[[],["result",4]]],[11,"deserialize_option","","",41,[[],["result",4]]],[11,"deserialize_unit","","",41,[[],["result",4]]],[11,"deserialize_unit_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",41,[[],["result",4]]],[11,"deserialize_tuple","","",41,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",41,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",41,[[],["result",4]]],[11,"deserialize_struct","","",41,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",41,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",41,[[],["result",4]]],[11,"deserialize_ignored_any","","",41,[[],["result",4]]],[11,"deserialize_any","","",41,[[],["result",4]]],[11,"deserialize_bool","","",42,[[],["result",4]]],[11,"deserialize_i8","","",42,[[],["result",4]]],[11,"deserialize_i16","","",42,[[],["result",4]]],[11,"deserialize_i32","","",42,[[],["result",4]]],[11,"deserialize_i64","","",42,[[],["result",4]]],[11,"deserialize_i128","","",42,[[],["result",4]]],[11,"deserialize_u8","","",42,[[],["result",4]]],[11,"deserialize_u16","","",42,[[],["result",4]]],[11,"deserialize_u32","","",42,[[],["result",4]]],[11,"deserialize_u64","","",42,[[],["result",4]]],[11,"deserialize_u128","","",42,[[],["result",4]]],[11,"deserialize_f32","","",42,[[],["result",4]]],[11,"deserialize_f64","","",42,[[],["result",4]]],[11,"deserialize_char","","",42,[[],["result",4]]],[11,"deserialize_str","","",42,[[],["result",4]]],[11,"deserialize_string","","",42,[[],["result",4]]],[11,"deserialize_bytes","","",42,[[],["result",4]]],[11,"deserialize_byte_buf","","",42,[[],["result",4]]],[11,"deserialize_option","","",42,[[],["result",4]]],[11,"deserialize_unit","","",42,[[],["result",4]]],[11,"deserialize_unit_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",42,[[],["result",4]]],[11,"deserialize_tuple","","",42,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",42,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",42,[[],["result",4]]],[11,"deserialize_struct","","",42,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",42,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",42,[[],["result",4]]],[11,"deserialize_ignored_any","","",42,[[],["result",4]]],[11,"deserialize_any","","",42,[[],["result",4]]],[11,"deserialize_bool","","",43,[[],["result",4]]],[11,"deserialize_i8","","",43,[[],["result",4]]],[11,"deserialize_i16","","",43,[[],["result",4]]],[11,"deserialize_i32","","",43,[[],["result",4]]],[11,"deserialize_i64","","",43,[[],["result",4]]],[11,"deserialize_i128","","",43,[[],["result",4]]],[11,"deserialize_u8","","",43,[[],["result",4]]],[11,"deserialize_u16","","",43,[[],["result",4]]],[11,"deserialize_u32","","",43,[[],["result",4]]],[11,"deserialize_u64","","",43,[[],["result",4]]],[11,"deserialize_u128","","",43,[[],["result",4]]],[11,"deserialize_f32","","",43,[[],["result",4]]],[11,"deserialize_f64","","",43,[[],["result",4]]],[11,"deserialize_char","","",43,[[],["result",4]]],[11,"deserialize_str","","",43,[[],["result",4]]],[11,"deserialize_string","","",43,[[],["result",4]]],[11,"deserialize_bytes","","",43,[[],["result",4]]],[11,"deserialize_byte_buf","","",43,[[],["result",4]]],[11,"deserialize_option","","",43,[[],["result",4]]],[11,"deserialize_unit","","",43,[[],["result",4]]],[11,"deserialize_unit_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",43,[[],["result",4]]],[11,"deserialize_tuple","","",43,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",43,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",43,[[],["result",4]]],[11,"deserialize_struct","","",43,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",43,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",43,[[],["result",4]]],[11,"deserialize_ignored_any","","",43,[[],["result",4]]],[11,"deserialize_any","","",43,[[],["result",4]]],[11,"deserialize_bool","","",44,[[],["result",4]]],[11,"deserialize_i8","","",44,[[],["result",4]]],[11,"deserialize_i16","","",44,[[],["result",4]]],[11,"deserialize_i32","","",44,[[],["result",4]]],[11,"deserialize_i64","","",44,[[],["result",4]]],[11,"deserialize_i128","","",44,[[],["result",4]]],[11,"deserialize_u8","","",44,[[],["result",4]]],[11,"deserialize_u16","","",44,[[],["result",4]]],[11,"deserialize_u32","","",44,[[],["result",4]]],[11,"deserialize_u64","","",44,[[],["result",4]]],[11,"deserialize_u128","","",44,[[],["result",4]]],[11,"deserialize_f32","","",44,[[],["result",4]]],[11,"deserialize_f64","","",44,[[],["result",4]]],[11,"deserialize_char","","",44,[[],["result",4]]],[11,"deserialize_str","","",44,[[],["result",4]]],[11,"deserialize_string","","",44,[[],["result",4]]],[11,"deserialize_bytes","","",44,[[],["result",4]]],[11,"deserialize_byte_buf","","",44,[[],["result",4]]],[11,"deserialize_option","","",44,[[],["result",4]]],[11,"deserialize_unit","","",44,[[],["result",4]]],[11,"deserialize_unit_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",44,[[],["result",4]]],[11,"deserialize_tuple","","",44,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",44,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",44,[[],["result",4]]],[11,"deserialize_struct","","",44,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",44,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",44,[[],["result",4]]],[11,"deserialize_ignored_any","","",44,[[],["result",4]]],[11,"deserialize_any","","",44,[[],["result",4]]],[11,"deserialize_bool","","",45,[[],["result",4]]],[11,"deserialize_i8","","",45,[[],["result",4]]],[11,"deserialize_i16","","",45,[[],["result",4]]],[11,"deserialize_i32","","",45,[[],["result",4]]],[11,"deserialize_i64","","",45,[[],["result",4]]],[11,"deserialize_i128","","",45,[[],["result",4]]],[11,"deserialize_u8","","",45,[[],["result",4]]],[11,"deserialize_u16","","",45,[[],["result",4]]],[11,"deserialize_u32","","",45,[[],["result",4]]],[11,"deserialize_u64","","",45,[[],["result",4]]],[11,"deserialize_u128","","",45,[[],["result",4]]],[11,"deserialize_f32","","",45,[[],["result",4]]],[11,"deserialize_f64","","",45,[[],["result",4]]],[11,"deserialize_char","","",45,[[],["result",4]]],[11,"deserialize_str","","",45,[[],["result",4]]],[11,"deserialize_string","","",45,[[],["result",4]]],[11,"deserialize_bytes","","",45,[[],["result",4]]],[11,"deserialize_byte_buf","","",45,[[],["result",4]]],[11,"deserialize_option","","",45,[[],["result",4]]],[11,"deserialize_unit","","",45,[[],["result",4]]],[11,"deserialize_unit_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",45,[[],["result",4]]],[11,"deserialize_tuple","","",45,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",45,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",45,[[],["result",4]]],[11,"deserialize_struct","","",45,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",45,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",45,[[],["result",4]]],[11,"deserialize_ignored_any","","",45,[[],["result",4]]],[11,"deserialize_any","","",45,[[],["result",4]]],[11,"deserialize_bool","","",46,[[],["result",4]]],[11,"deserialize_i8","","",46,[[],["result",4]]],[11,"deserialize_i16","","",46,[[],["result",4]]],[11,"deserialize_i32","","",46,[[],["result",4]]],[11,"deserialize_i64","","",46,[[],["result",4]]],[11,"deserialize_i128","","",46,[[],["result",4]]],[11,"deserialize_u8","","",46,[[],["result",4]]],[11,"deserialize_u16","","",46,[[],["result",4]]],[11,"deserialize_u32","","",46,[[],["result",4]]],[11,"deserialize_u64","","",46,[[],["result",4]]],[11,"deserialize_u128","","",46,[[],["result",4]]],[11,"deserialize_f32","","",46,[[],["result",4]]],[11,"deserialize_f64","","",46,[[],["result",4]]],[11,"deserialize_char","","",46,[[],["result",4]]],[11,"deserialize_str","","",46,[[],["result",4]]],[11,"deserialize_string","","",46,[[],["result",4]]],[11,"deserialize_bytes","","",46,[[],["result",4]]],[11,"deserialize_byte_buf","","",46,[[],["result",4]]],[11,"deserialize_option","","",46,[[],["result",4]]],[11,"deserialize_unit","","",46,[[],["result",4]]],[11,"deserialize_unit_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",46,[[],["result",4]]],[11,"deserialize_tuple","","",46,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",46,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",46,[[],["result",4]]],[11,"deserialize_struct","","",46,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",46,[[],["result",4]]],[11,"deserialize_ignored_any","","",46,[[],["result",4]]],[11,"deserialize_any","","",46,[[],["result",4]]],[11,"deserialize_enum","","",46,[[["str",15]],["result",4]]],[11,"deserialize_any","","",47,[[],["result",4]]],[11,"deserialize_enum","","",47,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",47,[[],["result",4]]],[11,"deserialize_i8","","",47,[[],["result",4]]],[11,"deserialize_i16","","",47,[[],["result",4]]],[11,"deserialize_i32","","",47,[[],["result",4]]],[11,"deserialize_i64","","",47,[[],["result",4]]],[11,"deserialize_i128","","",47,[[],["result",4]]],[11,"deserialize_u8","","",47,[[],["result",4]]],[11,"deserialize_u16","","",47,[[],["result",4]]],[11,"deserialize_u32","","",47,[[],["result",4]]],[11,"deserialize_u64","","",47,[[],["result",4]]],[11,"deserialize_u128","","",47,[[],["result",4]]],[11,"deserialize_f32","","",47,[[],["result",4]]],[11,"deserialize_f64","","",47,[[],["result",4]]],[11,"deserialize_char","","",47,[[],["result",4]]],[11,"deserialize_str","","",47,[[],["result",4]]],[11,"deserialize_string","","",47,[[],["result",4]]],[11,"deserialize_bytes","","",47,[[],["result",4]]],[11,"deserialize_byte_buf","","",47,[[],["result",4]]],[11,"deserialize_option","","",47,[[],["result",4]]],[11,"deserialize_unit","","",47,[[],["result",4]]],[11,"deserialize_unit_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",47,[[],["result",4]]],[11,"deserialize_tuple","","",47,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",47,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",47,[[],["result",4]]],[11,"deserialize_struct","","",47,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",47,[[],["result",4]]],[11,"deserialize_ignored_any","","",47,[[],["result",4]]],[11,"deserialize_any","","",0,[[],["result",4]]],[11,"deserialize_enum","","",0,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_i128","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_u128","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"deserialize_any","","",48,[[],["result",4]]],[11,"deserialize_enum","","",48,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",48,[[],["result",4]]],[11,"deserialize_i8","","",48,[[],["result",4]]],[11,"deserialize_i16","","",48,[[],["result",4]]],[11,"deserialize_i32","","",48,[[],["result",4]]],[11,"deserialize_i64","","",48,[[],["result",4]]],[11,"deserialize_i128","","",48,[[],["result",4]]],[11,"deserialize_u8","","",48,[[],["result",4]]],[11,"deserialize_u16","","",48,[[],["result",4]]],[11,"deserialize_u32","","",48,[[],["result",4]]],[11,"deserialize_u64","","",48,[[],["result",4]]],[11,"deserialize_u128","","",48,[[],["result",4]]],[11,"deserialize_f32","","",48,[[],["result",4]]],[11,"deserialize_f64","","",48,[[],["result",4]]],[11,"deserialize_char","","",48,[[],["result",4]]],[11,"deserialize_str","","",48,[[],["result",4]]],[11,"deserialize_string","","",48,[[],["result",4]]],[11,"deserialize_bytes","","",48,[[],["result",4]]],[11,"deserialize_byte_buf","","",48,[[],["result",4]]],[11,"deserialize_option","","",48,[[],["result",4]]],[11,"deserialize_unit","","",48,[[],["result",4]]],[11,"deserialize_unit_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",48,[[],["result",4]]],[11,"deserialize_tuple","","",48,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",48,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",48,[[],["result",4]]],[11,"deserialize_struct","","",48,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",48,[[],["result",4]]],[11,"deserialize_ignored_any","","",48,[[],["result",4]]],[11,"deserialize_any","","",49,[[],["result",4]]],[11,"deserialize_enum","","",49,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",49,[[],["result",4]]],[11,"deserialize_i8","","",49,[[],["result",4]]],[11,"deserialize_i16","","",49,[[],["result",4]]],[11,"deserialize_i32","","",49,[[],["result",4]]],[11,"deserialize_i64","","",49,[[],["result",4]]],[11,"deserialize_i128","","",49,[[],["result",4]]],[11,"deserialize_u8","","",49,[[],["result",4]]],[11,"deserialize_u16","","",49,[[],["result",4]]],[11,"deserialize_u32","","",49,[[],["result",4]]],[11,"deserialize_u64","","",49,[[],["result",4]]],[11,"deserialize_u128","","",49,[[],["result",4]]],[11,"deserialize_f32","","",49,[[],["result",4]]],[11,"deserialize_f64","","",49,[[],["result",4]]],[11,"deserialize_char","","",49,[[],["result",4]]],[11,"deserialize_str","","",49,[[],["result",4]]],[11,"deserialize_string","","",49,[[],["result",4]]],[11,"deserialize_bytes","","",49,[[],["result",4]]],[11,"deserialize_byte_buf","","",49,[[],["result",4]]],[11,"deserialize_option","","",49,[[],["result",4]]],[11,"deserialize_unit","","",49,[[],["result",4]]],[11,"deserialize_unit_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",49,[[],["result",4]]],[11,"deserialize_tuple","","",49,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",49,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",49,[[],["result",4]]],[11,"deserialize_struct","","",49,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",49,[[],["result",4]]],[11,"deserialize_ignored_any","","",49,[[],["result",4]]],[11,"deserialize_any","","",1,[[],["result",4]]],[11,"deserialize_bool","","",1,[[],["result",4]]],[11,"deserialize_i8","","",1,[[],["result",4]]],[11,"deserialize_i16","","",1,[[],["result",4]]],[11,"deserialize_i32","","",1,[[],["result",4]]],[11,"deserialize_i64","","",1,[[],["result",4]]],[11,"deserialize_i128","","",1,[[],["result",4]]],[11,"deserialize_u8","","",1,[[],["result",4]]],[11,"deserialize_u16","","",1,[[],["result",4]]],[11,"deserialize_u32","","",1,[[],["result",4]]],[11,"deserialize_u64","","",1,[[],["result",4]]],[11,"deserialize_u128","","",1,[[],["result",4]]],[11,"deserialize_f32","","",1,[[],["result",4]]],[11,"deserialize_f64","","",1,[[],["result",4]]],[11,"deserialize_char","","",1,[[],["result",4]]],[11,"deserialize_str","","",1,[[],["result",4]]],[11,"deserialize_string","","",1,[[],["result",4]]],[11,"deserialize_bytes","","",1,[[],["result",4]]],[11,"deserialize_byte_buf","","",1,[[],["result",4]]],[11,"deserialize_option","","",1,[[],["result",4]]],[11,"deserialize_unit","","",1,[[],["result",4]]],[11,"deserialize_unit_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",1,[[],["result",4]]],[11,"deserialize_tuple","","",1,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",1,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",1,[[],["result",4]]],[11,"deserialize_struct","","",1,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",1,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",1,[[],["result",4]]],[11,"deserialize_ignored_any","","",1,[[],["result",4]]],[11,"deserialize_any","","",2,[[],["result",4]]],[11,"deserialize_bool","","",2,[[],["result",4]]],[11,"deserialize_i8","","",2,[[],["result",4]]],[11,"deserialize_i16","","",2,[[],["result",4]]],[11,"deserialize_i32","","",2,[[],["result",4]]],[11,"deserialize_i64","","",2,[[],["result",4]]],[11,"deserialize_i128","","",2,[[],["result",4]]],[11,"deserialize_u8","","",2,[[],["result",4]]],[11,"deserialize_u16","","",2,[[],["result",4]]],[11,"deserialize_u32","","",2,[[],["result",4]]],[11,"deserialize_u64","","",2,[[],["result",4]]],[11,"deserialize_u128","","",2,[[],["result",4]]],[11,"deserialize_f32","","",2,[[],["result",4]]],[11,"deserialize_f64","","",2,[[],["result",4]]],[11,"deserialize_char","","",2,[[],["result",4]]],[11,"deserialize_str","","",2,[[],["result",4]]],[11,"deserialize_string","","",2,[[],["result",4]]],[11,"deserialize_bytes","","",2,[[],["result",4]]],[11,"deserialize_byte_buf","","",2,[[],["result",4]]],[11,"deserialize_option","","",2,[[],["result",4]]],[11,"deserialize_unit","","",2,[[],["result",4]]],[11,"deserialize_unit_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",2,[[],["result",4]]],[11,"deserialize_tuple","","",2,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",2,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",2,[[],["result",4]]],[11,"deserialize_struct","","",2,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",2,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",2,[[],["result",4]]],[11,"deserialize_ignored_any","","",2,[[],["result",4]]],[11,"deserialize_any","","",3,[[],["result",4]]],[11,"deserialize_bool","","",3,[[],["result",4]]],[11,"deserialize_i8","","",3,[[],["result",4]]],[11,"deserialize_i16","","",3,[[],["result",4]]],[11,"deserialize_i32","","",3,[[],["result",4]]],[11,"deserialize_i64","","",3,[[],["result",4]]],[11,"deserialize_i128","","",3,[[],["result",4]]],[11,"deserialize_u8","","",3,[[],["result",4]]],[11,"deserialize_u16","","",3,[[],["result",4]]],[11,"deserialize_u32","","",3,[[],["result",4]]],[11,"deserialize_u64","","",3,[[],["result",4]]],[11,"deserialize_u128","","",3,[[],["result",4]]],[11,"deserialize_f32","","",3,[[],["result",4]]],[11,"deserialize_f64","","",3,[[],["result",4]]],[11,"deserialize_char","","",3,[[],["result",4]]],[11,"deserialize_str","","",3,[[],["result",4]]],[11,"deserialize_string","","",3,[[],["result",4]]],[11,"deserialize_bytes","","",3,[[],["result",4]]],[11,"deserialize_byte_buf","","",3,[[],["result",4]]],[11,"deserialize_option","","",3,[[],["result",4]]],[11,"deserialize_unit","","",3,[[],["result",4]]],[11,"deserialize_unit_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",3,[[],["result",4]]],[11,"deserialize_tuple","","",3,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",3,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",3,[[],["result",4]]],[11,"deserialize_struct","","",3,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",3,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",3,[[],["result",4]]],[11,"deserialize_ignored_any","","",3,[[],["result",4]]],[11,"deserialize_any","","",4,[[],["result",4]]],[11,"deserialize_bool","","",4,[[],["result",4]]],[11,"deserialize_i8","","",4,[[],["result",4]]],[11,"deserialize_i16","","",4,[[],["result",4]]],[11,"deserialize_i32","","",4,[[],["result",4]]],[11,"deserialize_i64","","",4,[[],["result",4]]],[11,"deserialize_i128","","",4,[[],["result",4]]],[11,"deserialize_u8","","",4,[[],["result",4]]],[11,"deserialize_u16","","",4,[[],["result",4]]],[11,"deserialize_u32","","",4,[[],["result",4]]],[11,"deserialize_u64","","",4,[[],["result",4]]],[11,"deserialize_u128","","",4,[[],["result",4]]],[11,"deserialize_f32","","",4,[[],["result",4]]],[11,"deserialize_f64","","",4,[[],["result",4]]],[11,"deserialize_char","","",4,[[],["result",4]]],[11,"deserialize_str","","",4,[[],["result",4]]],[11,"deserialize_string","","",4,[[],["result",4]]],[11,"deserialize_bytes","","",4,[[],["result",4]]],[11,"deserialize_byte_buf","","",4,[[],["result",4]]],[11,"deserialize_option","","",4,[[],["result",4]]],[11,"deserialize_unit","","",4,[[],["result",4]]],[11,"deserialize_unit_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",4,[[],["result",4]]],[11,"deserialize_tuple","","",4,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",4,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",4,[[],["result",4]]],[11,"deserialize_struct","","",4,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",4,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",4,[[],["result",4]]],[11,"deserialize_ignored_any","","",4,[[],["result",4]]],[11,"deserialize_any","","",5,[[],["result",4]]],[11,"deserialize_seq","","",5,[[],["result",4]]],[11,"deserialize_tuple","","",5,[[["usize",15]],["result",4]]],[11,"deserialize_bool","","",5,[[],["result",4]]],[11,"deserialize_i8","","",5,[[],["result",4]]],[11,"deserialize_i16","","",5,[[],["result",4]]],[11,"deserialize_i32","","",5,[[],["result",4]]],[11,"deserialize_i64","","",5,[[],["result",4]]],[11,"deserialize_i128","","",5,[[],["result",4]]],[11,"deserialize_u8","","",5,[[],["result",4]]],[11,"deserialize_u16","","",5,[[],["result",4]]],[11,"deserialize_u32","","",5,[[],["result",4]]],[11,"deserialize_u64","","",5,[[],["result",4]]],[11,"deserialize_u128","","",5,[[],["result",4]]],[11,"deserialize_f32","","",5,[[],["result",4]]],[11,"deserialize_f64","","",5,[[],["result",4]]],[11,"deserialize_char","","",5,[[],["result",4]]],[11,"deserialize_str","","",5,[[],["result",4]]],[11,"deserialize_string","","",5,[[],["result",4]]],[11,"deserialize_bytes","","",5,[[],["result",4]]],[11,"deserialize_byte_buf","","",5,[[],["result",4]]],[11,"deserialize_option","","",5,[[],["result",4]]],[11,"deserialize_unit","","",5,[[],["result",4]]],[11,"deserialize_unit_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_tuple_struct","","",5,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",5,[[],["result",4]]],[11,"deserialize_struct","","",5,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",5,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",5,[[],["result",4]]],[11,"deserialize_ignored_any","","",5,[[],["result",4]]],[11,"deserialize_any","","",6,[[],["result",4]]],[11,"deserialize_enum","","",6,[[["str",15]],["result",4]]],[11,"deserialize_bool","","",6,[[],["result",4]]],[11,"deserialize_i8","","",6,[[],["result",4]]],[11,"deserialize_i16","","",6,[[],["result",4]]],[11,"deserialize_i32","","",6,[[],["result",4]]],[11,"deserialize_i64","","",6,[[],["result",4]]],[11,"deserialize_i128","","",6,[[],["result",4]]],[11,"deserialize_u8","","",6,[[],["result",4]]],[11,"deserialize_u16","","",6,[[],["result",4]]],[11,"deserialize_u32","","",6,[[],["result",4]]],[11,"deserialize_u64","","",6,[[],["result",4]]],[11,"deserialize_u128","","",6,[[],["result",4]]],[11,"deserialize_f32","","",6,[[],["result",4]]],[11,"deserialize_f64","","",6,[[],["result",4]]],[11,"deserialize_char","","",6,[[],["result",4]]],[11,"deserialize_str","","",6,[[],["result",4]]],[11,"deserialize_string","","",6,[[],["result",4]]],[11,"deserialize_bytes","","",6,[[],["result",4]]],[11,"deserialize_byte_buf","","",6,[[],["result",4]]],[11,"deserialize_option","","",6,[[],["result",4]]],[11,"deserialize_unit","","",6,[[],["result",4]]],[11,"deserialize_unit_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",6,[[],["result",4]]],[11,"deserialize_tuple","","",6,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",6,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",6,[[],["result",4]]],[11,"deserialize_struct","","",6,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",6,[[],["result",4]]],[11,"deserialize_ignored_any","","",6,[[],["result",4]]],[11,"expecting","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"visit_bool","","",50,[[["bool",15]],["result",4]]],[11,"visit_i64","","",50,[[["i64",15]],["result",4]]],[11,"visit_i128","","",50,[[["i128",15]],["result",4]]],[11,"visit_u64","","",50,[[["u64",15]],["result",4]]],[11,"visit_u128","","",50,[[["u128",15]],["result",4]]],[11,"visit_f64","","",50,[[["f64",15]],["result",4]]],[11,"visit_str","","",50,[[["str",15]],["result",4]]],[11,"visit_none","","",50,[[],["result",4]]],[11,"visit_some","","",50,[[],["result",4]]],[11,"visit_newtype_struct","","",50,[[],["result",4]]],[11,"visit_unit","","",50,[[],["result",4]]],[11,"visit_seq","","",50,[[],["result",4]]],[11,"visit_map","","",50,[[],["result",4]]],[11,"visit_bytes","","",50,[[],["result",4]]],[11,"visit_enum","","",50,[[],["result",4]]],[11,"next_element_seed","serde::de::value","",3,[[],[["option",4],["result",4]]]],[11,"size_hint","","",3,[[],[["usize",15],["option",4]]]],[11,"next_element_seed","","",5,[[],[["option",4],["result",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"next_key_seed","","",5,[[],[["result",4],["option",4]]]],[11,"next_value_seed","","",5,[[],["result",4]]],[11,"next_entry_seed","","",5,[[],[["result",4],["option",4]]]],[11,"size_hint","","",5,[[],[["usize",15],["option",4]]]],[11,"variant_seed","","",46,[[],["result",4]]],[11,"variant_seed","","",47,[[],["result",4]]],[11,"variant_seed","","",0,[[],["result",4]]],[11,"variant_seed","","",48,[[],["result",4]]],[11,"variant_seed","","",49,[[],["result",4]]],[11,"variant_seed","","",6,[[],["result",4]]],[11,"serialize_element","serde::ser","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_element","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_key","","",51,[[],["result",4]]],[11,"serialize_value","","",51,[[],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"serialize_field","","",51,[[["str",15]],["result",4]]],[11,"end","","",51,[[],["result",4]]],[11,"custom","serde::de::value","",29,[[]]],[11,"custom","","",29,[[]]],[11,"clone","","",29,[[],["error",3]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",0,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[],["seqdeserializer",3]]],[11,"clone","","",4,[[],["seqaccessdeserializer",3]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[],["mapaccessdeserializer",3]]],[11,"clone","serde::de","",50,[[],["ignoredany",3]]],[11,"clone","","",8,[[],["unexpected",4]]],[11,"default","","",50,[[],["ignoredany",3]]],[11,"eq","serde::de::value","",29,[[["error",3]],["bool",15]]],[11,"ne","","",29,[[["error",3]],["bool",15]]],[11,"eq","serde::de","",8,[[["unexpected",4]],["bool",15]]],[11,"ne","","",8,[[["unexpected",4]],["bool",15]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de::value","",29,[[["formatter",3]],["result",6]]],[11,"fmt","serde::de","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"description","serde::de::value","",29,[[],["str",15]]]],"p":[[3,"BorrowedStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[4,"Unexpected"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"IgnoredAny"],[3,"Impossible"]]},\
"serde_derive":{"doc":"This crate provides Serde\'s two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]},\
"serde_json":{"doc":"Serde JSONJSON is a ubiquitous open-standard format that …","i":[[0,"de","serde_json","Deserialize JSON data to a Rust data structure.",null,null],[8,"Read","serde_json::de","Trait used by the deserializer for iterating over input. …",null,null],[3,"SliceRead","","JSON input source that reads from a slice of bytes.",null,null],[3,"StrRead","","JSON input source that reads from a UTF-8 string.",null,null],[3,"IoRead","","JSON input source that reads from a std::io input stream.",null,null],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[11,"new","","Create a JSON deserializer from one of the possible …",0,[[]]],[11,"from_reader","","Creates a JSON deserializer from an <code>io::Read</code>.",0,[[]]],[11,"from_slice","","Creates a JSON deserializer from a <code>&[u8]</code>.",0,[[]]],[11,"from_str","","Creates a JSON deserializer from a <code>&str</code>.",0,[[["str",15]]]],[11,"end","","The <code>Deserializer::end</code> method should be called after a …",0,[[],["result",6]]],[11,"into_iter","","Turn a JSON deserializer into an iterator over values of …",0,[[],["streamdeserializer",3]]],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON …",null,null],[11,"new","","Create a JSON stream deserializer from one of the …",1,[[]]],[11,"byte_offset","","Returns the number of bytes so far deserialized into a …",1,[[],["usize",15]]],[5,"from_reader","","Deserialize an instance of type <code>T</code> from an IO stream of …",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type <code>T</code> from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type <code>T</code> from a string of JSON …",null,[[["str",15]],["result",6]]],[0,"error","serde_json","When serializing or deserializing JSON goes wrong.",null,null],[3,"Error","serde_json::error","This type represents all possible errors that can occur …",null,null],[6,"Result","","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.",null,null],[11,"line","","One-based line number at which the error was detected.",2,[[],["usize",15]]],[11,"column","","One-based column number at which the error was detected.",2,[[],["usize",15]]],[11,"classify","","Categorizes the cause of this error.",2,[[],["category",4]]],[11,"is_io","","Returns true if this error was caused by a failure to …",2,[[],["bool",15]]],[11,"is_syntax","","Returns true if this error was caused by input that was …",2,[[],["bool",15]]],[11,"is_data","","Returns true if this error was caused by input data that …",2,[[],["bool",15]]],[11,"is_eof","","Returns true if this error was caused by prematurely …",2,[[],["bool",15]]],[4,"Category","","Categorizes the cause of a <code>serde_json::Error</code>.",null,null],[13,"Io","","The error was caused by a failure to read or write bytes …",3,null],[13,"Syntax","","The error was caused by input that was not syntactically …",3,null],[13,"Data","","The error was caused by input data that was semantically …",3,null],[13,"Eof","","The error was caused by prematurely reaching the end of …",3,null],[0,"map","serde_json","A map of String to serde_json::Value.",null,null],[3,"Map","serde_json::map","Represents a JSON key/value type.",null,null],[11,"new","","Makes a new empty Map.",4,[[]]],[11,"with_capacity","","Makes a new empty Map with the given initial capacity.",4,[[["usize",15]]]],[11,"clear","","Clears the map, removing all values.",4,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",4,[[],[["option",4],["value",4]]]],[11,"contains_key","","Returns true if the map contains a value for the …",4,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",4,[[],[["value",4],["option",4]]]],[11,"insert","","Inserts a key-value pair into the map.",4,[[["value",4],["string",3]],[["value",4],["option",4]]]],[11,"remove","","Removes a key from the map, returning the value at the …",4,[[],[["value",4],["option",4]]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",4,[[],["option",4]]],[11,"append","","Moves all elements from other into Self, leaving other …",4,[[]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",4,[[],["entry",4]]],[11,"len","","Returns the number of elements in the map.",4,[[],["usize",15]]],[11,"is_empty","","Returns true if the map contains no elements.",4,[[],["bool",15]]],[11,"iter","","Gets an iterator over the entries of the map.",4,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",4,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map.",4,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map.",4,[[],["values",3]]],[11,"values_mut","","Gets an iterator over mutable values of the map.",4,[[],["valuesmut",3]]],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Vacant","","A vacant Entry.",5,null],[13,"Occupied","","An occupied Entry.",5,null],[3,"VacantEntry","","A vacant Entry. It is part of the <code>Entry</code> enum.",null,null],[3,"OccupiedEntry","","An occupied Entry. It is part of the <code>Entry</code> enum.",null,null],[11,"key","","Returns a reference to this entry\'s key.",5,[[],["string",3]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",5,[[["value",4]],["value",4]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",5,[[],["value",4]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",5,[[]]],[11,"key","","Gets a reference to the key that would be used when …",6,[[],["string",3]]],[11,"insert","","Sets the value of the entry with the VacantEntry\'s key, …",6,[[["value",4]],["value",4]]],[11,"key","","Gets a reference to the key in the entry.",7,[[],["string",3]]],[11,"get","","Gets a reference to the value in the entry.",7,[[],["value",4]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",7,[[],["value",4]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",7,[[],["value",4]]],[11,"insert","","Sets the value of the entry with the <code>OccupiedEntry</code>\'s key, …",7,[[["value",4]],["value",4]]],[11,"remove","","Takes the value of the entry out of the map, and returns …",7,[[],["value",4]]],[3,"Iter","","An iterator over a serde_json::Map\'s entries.",null,null],[3,"IterMut","","A mutable iterator over a serde_json::Map\'s entries.",null,null],[3,"IntoIter","","An owning iterator over a serde_json::Map\'s entries.",null,null],[3,"Keys","","An iterator over a serde_json::Map\'s keys.",null,null],[3,"Values","","An iterator over a serde_json::Map\'s values.",null,null],[3,"ValuesMut","","A mutable iterator over a serde_json::Map\'s values.",null,null],[0,"ser","serde_json","Serialize a Rust data structure into JSON data.",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[11,"new","","Creates a new JSON serializer.",8,[[]]],[11,"pretty","","Creates a new JSON pretty print serializer.",8,[[]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written …",8,[[]]],[11,"into_inner","","Unwrap the <code>Writer</code> from the <code>Serializer</code>.",8,[[]]],[4,"CharEscape","","Represents a character escape code in a type-safe manner.",null,null],[13,"Quote","","An escaped quote <code>\\\"</code>",9,null],[13,"ReverseSolidus","","An escaped reverse solidus <code>\\\\</code>",9,null],[13,"Solidus","","An escaped solidus <code>/</code>",9,null],[13,"Backspace","","An escaped backspace character (usually escaped as <code>\\\\b</code>)",9,null],[13,"FormFeed","","An escaped form feed character (usually escaped as <code>\\\\f</code>)",9,null],[13,"LineFeed","","An escaped line feed character (usually escaped as <code>\\\\n</code>)",9,null],[13,"CarriageReturn","","An escaped carriage return character (usually escaped as …",9,null],[13,"Tab","","An escaped tab character (usually escaped as <code>\\\\t</code>)",9,null],[13,"AsciiControl","","An escaped ASCII plane control character (usually escaped …",9,null],[8,"Formatter","","This trait abstracts away serializing the JSON control …",null,null],[11,"write_null","","Writes a <code>null</code> value to the specified writer.",10,[[],["result",6]]],[11,"write_bool","","Writes a <code>true</code> or <code>false</code> value to the specified writer.",10,[[["bool",15]],["result",6]]],[11,"write_i8","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i8",15]],["result",6]]],[11,"write_i16","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i16",15]],["result",6]]],[11,"write_i32","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i32",15]],["result",6]]],[11,"write_i64","","Writes an integer value like <code>-123</code> to the specified writer.",10,[[["i64",15]],["result",6]]],[11,"write_u8","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u8",15]],["result",6]]],[11,"write_u16","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u16",15]],["result",6]]],[11,"write_u32","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u32",15]],["result",6]]],[11,"write_u64","","Writes an integer value like <code>123</code> to the specified writer.",10,[[["u64",15]],["result",6]]],[11,"write_f32","","Writes a floating point value like <code>-31.26e+12</code> to the …",10,[[["f32",15]],["result",6]]],[11,"write_f64","","Writes a floating point value like <code>-31.26e+12</code> to the …",10,[[["f64",15]],["result",6]]],[11,"write_number_str","","Writes a number that has already been rendered to a …",10,[[["str",15]],["result",6]]],[11,"begin_string","","Called before each series of <code>write_string_fragment</code> and …",10,[[],["result",6]]],[11,"end_string","","Called after each series of <code>write_string_fragment</code> and …",10,[[],["result",6]]],[11,"write_string_fragment","","Writes a string fragment that doesn\'t need any escaping …",10,[[["str",15]],["result",6]]],[11,"write_char_escape","","Writes a character escape code to the specified writer.",10,[[["charescape",4]],["result",6]]],[11,"begin_array","","Called before every array.  Writes a <code>[</code> to the specified …",10,[[],["result",6]]],[11,"end_array","","Called after every array.  Writes a <code>]</code> to the specified …",10,[[],["result",6]]],[11,"begin_array_value","","Called before every array value.  Writes a <code>,</code> if needed to …",10,[[["bool",15]],["result",6]]],[11,"end_array_value","","Called after every array value.",10,[[],["result",6]]],[11,"begin_object","","Called before every object.  Writes a <code>{</code> to the specified …",10,[[],["result",6]]],[11,"end_object","","Called after every object.  Writes a <code>}</code> to the specified …",10,[[],["result",6]]],[11,"begin_object_key","","Called before every object key.",10,[[["bool",15]],["result",6]]],[11,"end_object_key","","Called after every object key.  A <code>:</code> should be written to …",10,[[],["result",6]]],[11,"begin_object_value","","Called before every object value.  A <code>:</code> should be written …",10,[[],["result",6]]],[11,"end_object_value","","Called after every object value.",10,[[],["result",6]]],[11,"write_raw_fragment","","Writes a raw JSON fragment that doesn\'t need any escaping …",10,[[["str",15]],["result",6]]],[3,"CompactFormatter","","This structure compacts a JSON value with no extra …",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it …",null,null],[11,"new","","Construct a pretty printer formatter that defaults to …",11,[[]]],[11,"with_indent","","Construct a pretty printer formatter that uses the <code>indent</code> …",11,[[]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO …",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON …",null,[[],["result",6]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["vec",3],["result",6]]]],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["string",3],["result",6]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["string",3],["result",6]]]],[0,"value","serde_json","The Value enum, a loosely typed way of representing any …",null,null],[8,"Index","serde_json::value","A type that can be used to index into a <code>serde_json::Value</code>.",null,null],[3,"Serializer","","Serializer whose output is a <code>Value</code>.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating …",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",12,null],[13,"Bool","","Represents a JSON boolean.",12,null],[13,"Number","","Represents a JSON number, whether integer or floating …",12,null],[13,"String","","Represents a JSON string.",12,null],[13,"Array","","Represents a JSON array.",12,null],[13,"Object","","Represents a JSON object.",12,null],[11,"get","","Index into a JSON array or map. A string index can be …",12,[[["index",8]],[["option",4],["value",4]]]],[11,"get_mut","","Mutably index into a JSON array or map. A string index …",12,[[["index",8]],[["value",4],["option",4]]]],[11,"is_object","","Returns true if the <code>Value</code> is an Object. Returns false …",12,[[],["bool",15]]],[11,"as_object","","If the <code>Value</code> is an Object, returns the associated Map. …",12,[[],[["map",3],["option",4]]]],[11,"as_object_mut","","If the <code>Value</code> is an Object, returns the associated mutable …",12,[[],[["map",3],["option",4]]]],[11,"is_array","","Returns true if the <code>Value</code> is an Array. Returns false …",12,[[],["bool",15]]],[11,"as_array","","If the <code>Value</code> is an Array, returns the associated vector. …",12,[[],[["option",4],["vec",3]]]],[11,"as_array_mut","","If the <code>Value</code> is an Array, returns the associated mutable …",12,[[],[["option",4],["vec",3]]]],[11,"is_string","","Returns true if the <code>Value</code> is a String. Returns false …",12,[[],["bool",15]]],[11,"as_str","","If the <code>Value</code> is a String, returns the associated str. …",12,[[],[["option",4],["str",15]]]],[11,"is_number","","Returns true if the <code>Value</code> is a Number. Returns false …",12,[[],["bool",15]]],[11,"is_i64","","Returns true if the <code>Value</code> is an integer between <code>i64::MIN</code> …",12,[[],["bool",15]]],[11,"is_u64","","Returns true if the <code>Value</code> is an integer between zero and …",12,[[],["bool",15]]],[11,"is_f64","","Returns true if the <code>Value</code> is a number that can be …",12,[[],["bool",15]]],[11,"as_i64","","If the <code>Value</code> is an integer, represent it as i64 if …",12,[[],[["i64",15],["option",4]]]],[11,"as_u64","","If the <code>Value</code> is an integer, represent it as u64 if …",12,[[],[["option",4],["u64",15]]]],[11,"as_f64","","If the <code>Value</code> is a number, represent it as f64 if …",12,[[],[["f64",15],["option",4]]]],[11,"is_boolean","","Returns true if the <code>Value</code> is a Boolean. Returns false …",12,[[],["bool",15]]],[11,"as_bool","","If the <code>Value</code> is a Boolean, returns the associated bool. …",12,[[],[["bool",15],["option",4]]]],[11,"is_null","","Returns true if the <code>Value</code> is a Null. Returns false …",12,[[],["bool",15]]],[11,"as_null","","If the <code>Value</code> is a Null, returns (). Returns None …",12,[[],["option",4]]],[11,"pointer","","Looks up a value by a JSON Pointer.",12,[[["str",15]],[["option",4],["value",4]]]],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable …",12,[[["str",15]],[["value",4],["option",4]]]],[11,"take","","Takes the value out of the <code>Value</code>, leaving a <code>Null</code> in its …",12,[[],["value",4]]],[5,"to_value","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …",null,[[],[["result",4],["value",4],["error",3]]]],[5,"from_value","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.",null,[[["value",4]],[["error",3],["result",4]]]],[11,"is_i64","","Returns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …",13,[[],["bool",15]]],[11,"is_u64","","Returns true if the <code>Number</code> is an integer between zero and …",13,[[],["bool",15]]],[11,"is_f64","","Returns true if the <code>Number</code> can be represented by f64.",13,[[],["bool",15]]],[11,"as_i64","","If the <code>Number</code> is an integer, represent it as i64 if …",13,[[],[["i64",15],["option",4]]]],[11,"as_u64","","If the <code>Number</code> is an integer, represent it as u64 if …",13,[[],[["option",4],["u64",15]]]],[11,"as_f64","","Represents the number as f64 if possible. Returns None …",13,[[],[["f64",15],["option",4]]]],[11,"from_f64","","Converts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values …",13,[[["f64",15]],[["number",3],["option",4]]]],[11,"new","serde_json::de","Create a JSON input source to read from a std::io input …",14,[[]]],[11,"new","","Create a JSON input source to read from a slice of bytes.",15,[[]]],[11,"new","","Create a JSON input source to read from a UTF-8 string.",16,[[["str",15]]]],[5,"from_reader","serde_json","Deserialize an instance of type <code>T</code> from an IO stream of …",null,[[],["result",6]]],[5,"from_slice","","Deserialize an instance of type <code>T</code> from bytes of JSON text.",null,[[],["result",6]]],[5,"from_str","","Deserialize an instance of type <code>T</code> from a string of JSON …",null,[[["str",15]],["result",6]]],[3,"Deserializer","","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON …",null,null],[3,"Error","","This type represents all possible errors that can occur …",null,null],[6,"Result","","Alias for a <code>Result</code> with the error type <code>serde_json::Error</code>.",null,null],[5,"to_string","","Serialize the given data structure as a String of JSON.",null,[[],[["string",3],["result",6]]]],[5,"to_string_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["string",3],["result",6]]]],[5,"to_vec","","Serialize the given data structure as a JSON byte vector.",null,[[],[["vec",3],["result",6]]]],[5,"to_vec_pretty","","Serialize the given data structure as a pretty-printed …",null,[[],[["vec",3],["result",6]]]],[5,"to_writer","","Serialize the given data structure as JSON into the IO …",null,[[],["result",6]]],[5,"to_writer_pretty","","Serialize the given data structure as pretty-printed JSON …",null,[[],["result",6]]],[3,"Serializer","","A structure for serializing Rust values into JSON.",null,null],[5,"from_value","","Interpret a <code>serde_json::Value</code> as an instance of type <code>T</code>.",null,[[["value",4]],[["error",3],["result",4]]]],[5,"to_value","","Convert a <code>T</code> into <code>serde_json::Value</code> which is an enum that …",null,[[],[["result",4],["value",4],["error",3]]]],[3,"Map","","Represents a JSON key/value type.",null,null],[3,"Number","","Represents a JSON number, whether integer or floating …",null,null],[4,"Value","","Represents any valid JSON value.",null,null],[13,"Null","","Represents a JSON null value.",12,null],[13,"Bool","","Represents a JSON boolean.",12,null],[13,"Number","","Represents a JSON number, whether integer or floating …",12,null],[13,"String","","Represents a JSON string.",12,null],[13,"Array","","Represents a JSON array.",12,null],[13,"Object","","Represents a JSON object.",12,null],[14,"json","","Construct a <code>serde_json::Value</code> from a JSON literal.",null,null],[11,"from","serde_json::de","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","serde_json","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into_iter","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","serde_json::error","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_json","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","serde_json::map","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"into_iter","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"into_iter","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"into_iter","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","serde_json","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","serde_json::ser","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","serde_json::value","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serde_json","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"begin_array","serde_json::ser","",11,[[],["result",6]]],[11,"end_array","","",11,[[],["result",6]]],[11,"begin_array_value","","",11,[[["bool",15]],["result",6]]],[11,"end_array_value","","",11,[[],["result",6]]],[11,"begin_object","","",11,[[],["result",6]]],[11,"end_object","","",11,[[],["result",6]]],[11,"begin_object_key","","",11,[[["bool",15]],["result",6]]],[11,"begin_object_value","","",11,[[],["result",6]]],[11,"end_object_value","","",11,[[],["result",6]]],[11,"next","serde_json::de","",14,[[],[["result",6],["option",4]]]],[11,"peek","","",14,[[],[["result",6],["option",4]]]],[11,"discard","","",14,[[]]],[11,"position","","",14,[[],["position",3]]],[11,"peek_position","","",14,[[],["position",3]]],[11,"byte_offset","","",14,[[],["usize",15]]],[11,"parse_str","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",14,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",14,[[],["result",6]]],[11,"decode_hex_escape","","",14,[[],[["result",6],["u16",15]]]],[11,"set_failed","","",14,[[["bool",15]]]],[11,"next","","",15,[[],[["result",6],["option",4]]]],[11,"peek","","",15,[[],[["result",6],["option",4]]]],[11,"discard","","",15,[[]]],[11,"position","","",15,[[],["position",3]]],[11,"peek_position","","",15,[[],["position",3]]],[11,"byte_offset","","",15,[[],["usize",15]]],[11,"parse_str","","",15,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",15,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",15,[[],["result",6]]],[11,"decode_hex_escape","","",15,[[],[["result",6],["u16",15]]]],[11,"set_failed","","",15,[[["bool",15]]]],[11,"next","","",16,[[],[["result",6],["option",4]]]],[11,"peek","","",16,[[],[["result",6],["option",4]]]],[11,"discard","","",16,[[]]],[11,"position","","",16,[[],["position",3]]],[11,"peek_position","","",16,[[],["position",3]]],[11,"byte_offset","","",16,[[],["usize",15]]],[11,"parse_str","","",16,[[["vec",3]],[["reference",4],["result",6]]]],[11,"parse_str_raw","","",16,[[["vec",3]],[["reference",4],["result",6]]]],[11,"ignore_str","","",16,[[],["result",6]]],[11,"decode_hex_escape","","",16,[[],[["result",6],["u16",15]]]],[11,"set_failed","","",16,[[["bool",15]]]],[11,"from","serde_json","",12,[[["i8",15]]]],[11,"from","","",12,[[["i16",15]]]],[11,"from","","",12,[[["i32",15]]]],[11,"from","","",12,[[["i64",15]]]],[11,"from","","",12,[[["isize",15]]]],[11,"from","","",12,[[["u8",15]]]],[11,"from","","",12,[[["u16",15]]]],[11,"from","","",12,[[["u32",15]]]],[11,"from","","",12,[[["u64",15]]]],[11,"from","","",12,[[["usize",15]]]],[11,"from","","Convert 32-bit floating point number to <code>Value</code>",12,[[["f32",15]]]],[11,"from","","Convert 64-bit floating point number to <code>Value</code>",12,[[["f64",15]]]],[11,"from","","Convert boolean to <code>Value</code>",12,[[["bool",15]]]],[11,"from","","Convert <code>String</code> to <code>Value</code>",12,[[["string",3]]]],[11,"from","","Convert string slice to <code>Value</code>",12,[[["str",15]]]],[11,"from","","Convert copy-on-write string to <code>Value</code>",12,[[["cow",4],["str",15]]]],[11,"from","","Convert <code>Number</code> to <code>Value</code>",12,[[["number",3]]]],[11,"from","","Convert map (with string keys) to <code>Value</code>",12,[[["map",3],["string",3],["value",4]]]],[11,"from","","Convert a <code>Vec</code> to <code>Value</code>",12,[[["vec",3]]]],[11,"from","","Convert a slice to <code>Value</code>",12,[[]]],[11,"from","","Convert <code>()</code> to <code>Value</code>",12,[[]]],[11,"from","serde_json::value","",13,[[["u8",15]]]],[11,"from","","",13,[[["u16",15]]]],[11,"from","","",13,[[["u32",15]]]],[11,"from","","",13,[[["u64",15]]]],[11,"from","","",13,[[["usize",15]]]],[11,"from","","",13,[[["i8",15]]]],[11,"from","","",13,[[["i16",15]]]],[11,"from","","",13,[[["i32",15]]]],[11,"from","","",13,[[["i64",15]]]],[11,"from","","",13,[[["isize",15]]]],[11,"next_back","serde_json::map","",17,[[],["option",4]]],[11,"next_back","","",18,[[],["option",4]]],[11,"next_back","","",19,[[],["option",4]]],[11,"next_back","","",20,[[],["option",4]]],[11,"next_back","","",21,[[],["option",4]]],[11,"next_back","","",22,[[],["option",4]]],[11,"len","","",17,[[],["usize",15]]],[11,"len","","",18,[[],["usize",15]]],[11,"len","","",19,[[],["usize",15]]],[11,"len","","",20,[[],["usize",15]]],[11,"len","","",21,[[],["usize",15]]],[11,"len","","",22,[[],["usize",15]]],[11,"extend","serde_json","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"next","","",1,[[],[["option",4],["result",6]]]],[11,"next","serde_json::map","",17,[[],["option",4]]],[11,"size_hint","","",17,[[]]],[11,"next","","",18,[[],["option",4]]],[11,"size_hint","","",18,[[]]],[11,"next","","",19,[[],["option",4]]],[11,"size_hint","","",19,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"next","","",21,[[],["option",4]]],[11,"size_hint","","",21,[[]]],[11,"next","","",22,[[],["option",4]]],[11,"size_hint","","",22,[[]]],[11,"clone","serde_json::error","",3,[[],["category",4]]],[11,"clone","serde_json","",4,[[]]],[11,"clone","serde_json::ser","",23,[[],["compactformatter",3]]],[11,"clone","","",11,[[],["prettyformatter",3]]],[11,"clone","serde_json","",12,[[],["value",4]]],[11,"clone","serde_json::value","",13,[[],["number",3]]],[11,"default","serde_json","",4,[[]]],[11,"default","serde_json::ser","",11,[[]]],[11,"default","serde_json","",12,[[],["value",4]]],[11,"eq","serde_json::error","",3,[[["category",4]],["bool",15]]],[11,"eq","serde_json","",4,[[],["bool",15]]],[11,"eq","","",12,[[["value",4]],["bool",15]]],[11,"ne","","",12,[[["value",4]],["bool",15]]],[11,"eq","","",12,[[["str",15]],["bool",15]]],[11,"eq","","",12,[[["str",15]],["bool",15]]],[11,"eq","","",12,[[["string",3]],["bool",15]]],[11,"eq","","",12,[[["i8",15]],["bool",15]]],[11,"eq","","",12,[[["i16",15]],["bool",15]]],[11,"eq","","",12,[[["i32",15]],["bool",15]]],[11,"eq","","",12,[[["i64",15]],["bool",15]]],[11,"eq","","",12,[[["isize",15]],["bool",15]]],[11,"eq","","",12,[[["u8",15]],["bool",15]]],[11,"eq","","",12,[[["u16",15]],["bool",15]]],[11,"eq","","",12,[[["u32",15]],["bool",15]]],[11,"eq","","",12,[[["u64",15]],["bool",15]]],[11,"eq","","",12,[[["usize",15]],["bool",15]]],[11,"eq","","",12,[[["f32",15]],["bool",15]]],[11,"eq","","",12,[[["f64",15]],["bool",15]]],[11,"eq","","",12,[[["bool",15]],["bool",15]]],[11,"eq","serde_json::value","",13,[[["number",3]],["bool",15]]],[11,"ne","","",13,[[["number",3]],["bool",15]]],[11,"fmt","serde_json::error","",3,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","serde_json::ser","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","Display a JSON value as a string.",12,[[["formatter",3]],["result",6]]],[11,"fmt","serde_json::value","",13,[[["formatter",3]],["result",6]]],[11,"index","serde_json","",4,[[],["value",4]]],[11,"index","","Index into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> …",12,[[],["value",4]]],[11,"index_mut","","",4,[[],["value",4]]],[11,"index_mut","","Write into a <code>serde_json::Value</code> using the syntax …",12,[[],["value",4]]],[11,"from_str","serde_json::value","",13,[[["str",15]],["result",4]]],[11,"from_str","serde_json","",12,[[["str",15]],[["result",4],["value",4],["error",3]]]],[11,"from_iter","","",4,[[]]],[11,"from_iter","","Convert an iteratable type to a <code>Value</code>",12,[[["intoiterator",8]]]],[11,"from_iter","","Convert an iteratable type to a <code>Value</code>",12,[[["intoiterator",8]]]],[11,"source","","",2,[[],[["error",8],["option",4]]]],[11,"deserialize_any","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_option","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_enum","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_newtype_struct","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_bool","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_char","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_str","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_string","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_bytes","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_byte_buf","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_unit","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_unit_struct","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_seq","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_tuple","","",12,[[["usize",15]],[["error",3],["result",4]]]],[11,"deserialize_tuple_struct","","",12,[[["usize",15],["str",15]],[["error",3],["result",4]]]],[11,"deserialize_map","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_struct","","",12,[[["str",15]],[["error",3],["result",4]]]],[11,"deserialize_identifier","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_ignored_any","","",12,[[],[["error",3],["result",4]]]],[11,"deserialize_any","serde_json::value","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u8","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u16","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f32","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_f64","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_i128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_u128","","",13,[[],[["error",3],["result",4]]]],[11,"deserialize_bool","","",13,[[],["result",4]]],[11,"deserialize_char","","",13,[[],["result",4]]],[11,"deserialize_str","","",13,[[],["result",4]]],[11,"deserialize_string","","",13,[[],["result",4]]],[11,"deserialize_bytes","","",13,[[],["result",4]]],[11,"deserialize_byte_buf","","",13,[[],["result",4]]],[11,"deserialize_option","","",13,[[],["result",4]]],[11,"deserialize_unit","","",13,[[],["result",4]]],[11,"deserialize_unit_struct","","",13,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",13,[[["str",15]],["result",4]]],[11,"deserialize_seq","","",13,[[],["result",4]]],[11,"deserialize_tuple","","",13,[[["usize",15]],["result",4]]],[11,"deserialize_tuple_struct","","",13,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_map","","",13,[[],["result",4]]],[11,"deserialize_struct","","",13,[[["str",15]],["result",4]]],[11,"deserialize_enum","","",13,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",13,[[],["result",4]]],[11,"deserialize_ignored_any","","",13,[[],["result",4]]],[11,"into_deserializer","serde_json","",12,[[]]],[11,"custom","","",2,[[["display",8]],["error",3]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","serde_json::value","",13,[[],["result",4]]],[11,"serialize_bool","","",24,[[["bool",15]],[["result",6],["value",4]]]],[11,"serialize_i8","","",24,[[["i8",15]],[["result",6],["value",4]]]],[11,"serialize_i16","","",24,[[["i16",15]],[["result",6],["value",4]]]],[11,"serialize_i32","","",24,[[["i32",15]],[["result",6],["value",4]]]],[11,"serialize_i64","","",24,[[["i64",15]],[["result",6],["value",4]]]],[11,"serialize_u8","","",24,[[["u8",15]],[["result",6],["value",4]]]],[11,"serialize_u16","","",24,[[["u16",15]],[["result",6],["value",4]]]],[11,"serialize_u32","","",24,[[["u32",15]],[["result",6],["value",4]]]],[11,"serialize_u64","","",24,[[["u64",15]],[["result",6],["value",4]]]],[11,"serialize_f32","","",24,[[["f32",15]],[["result",6],["value",4]]]],[11,"serialize_f64","","",24,[[["f64",15]],[["result",6],["value",4]]]],[11,"serialize_char","","",24,[[["char",15]],[["result",6],["value",4]]]],[11,"serialize_str","","",24,[[["str",15]],[["result",6],["value",4]]]],[11,"serialize_bytes","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_unit_struct","","",24,[[["str",15]],[["result",6],["value",4]]]],[11,"serialize_unit_variant","","",24,[[["u32",15],["str",15]],[["result",6],["value",4]]]],[11,"serialize_newtype_struct","","",24,[[["str",15]],[["result",6],["value",4]]]],[11,"serialize_newtype_variant","","",24,[[["u32",15],["str",15]],[["result",6],["value",4]]]],[11,"serialize_none","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_some","","",24,[[],[["result",6],["value",4]]]],[11,"serialize_seq","","",24,[[["usize",15],["option",4]],["result",6]]],[11,"serialize_tuple","","",24,[[["usize",15]],["result",6]]],[11,"serialize_tuple_struct","","",24,[[["usize",15],["str",15]],["result",6]]],[11,"serialize_tuple_variant","","",24,[[["u32",15],["str",15],["usize",15]],["result",6]]],[11,"serialize_map","","",24,[[["usize",15],["option",4]],["result",6]]],[11,"serialize_struct","","",24,[[["usize",15],["str",15]],["result",6]]],[11,"serialize_struct_variant","","",24,[[["u32",15],["str",15],["usize",15]],["result",6]]],[11,"collect_str","","",24,[[],[["result",6],["value",4]]]],[11,"deserialize","serde_json","",4,[[],["result",4]]],[11,"deserialize","","",12,[[],[["result",4],["value",4]]]],[11,"deserialize","serde_json::value","",13,[[],[["number",3],["result",4]]]],[11,"custom","serde_json","",2,[[["display",8]],["error",3]]],[11,"invalid_type","","",2,[[["unexpected",4],["expected",8]]]]],"p":[[3,"Deserializer"],[3,"StreamDeserializer"],[3,"Error"],[4,"Category"],[3,"Map"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Serializer"],[4,"CharEscape"],[8,"Formatter"],[3,"PrettyFormatter"],[4,"Value"],[3,"Number"],[3,"IoRead"],[3,"SliceRead"],[3,"StrRead"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"CompactFormatter"],[3,"Serializer"]]},\
"serde_urlencoded":{"doc":"<code>x-www-form-urlencoded</code> meets Serde","i":[[0,"de","serde_urlencoded","Deserialization support for the …",null,null],[3,"Error","serde_urlencoded::de","A minimal representation of all possible errors that can …",null,null],[5,"from_bytes","","Deserializes a <code>application/x-www-form-urlencoded</code> value …",null,[[],[["error",3],["result",4]]]],[5,"from_str","","Deserializes a <code>application/x-www-form-urlencoded</code> value …",null,[[["str",15]],[["error",3],["result",4]]]],[5,"from_reader","","Convenience function that reads all bytes from <code>reader</code> and …",null,[[],[["error",3],["result",4]]]],[3,"Deserializer","","A deserializer for the <code>application/x-www-form-urlencoded</code> …",null,null],[11,"new","","Returns a new <code>Deserializer</code>.",0,[[["urlencodedparse",3]]]],[0,"ser","serde_urlencoded","Serialization support for the …",null,null],[5,"to_string","serde_urlencoded::ser","Serializes a value into a …",null,[[["serialize",8]],[["string",3],["result",4],["error",4]]]],[3,"Serializer","","A serializer for the <code>application/x-www-form-urlencoded</code> …",null,null],[11,"new","","Returns a new <code>Serializer</code>.",1,[[["urlencodedserializer",3]]]],[4,"Error","","Errors returned during serializing to …",null,null],[13,"Custom","","",2,null],[13,"Utf8","","",2,null],[3,"SeqSerializer","","Sequence serializer.",null,null],[3,"TupleSerializer","","Tuple serializer.",null,null],[3,"TupleStructSerializer","","Tuple struct serializer.",null,null],[3,"TupleVariantSerializer","","Tuple variant serializer.",null,null],[3,"MapSerializer","","Map serializer.",null,null],[3,"StructSerializer","","Struct serializer.",null,null],[3,"StructVariantSerializer","","Struct variant serializer.",null,null],[5,"from_bytes","serde_urlencoded","Deserializes a <code>application/x-www-form-urlencoded</code> value …",null,[[],[["error",3],["result",4]]]],[5,"from_reader","","Convenience function that reads all bytes from <code>reader</code> and …",null,[[],[["error",3],["result",4]]]],[5,"from_str","","Deserializes a <code>application/x-www-form-urlencoded</code> value …",null,[[["str",15]],[["error",3],["result",4]]]],[3,"Deserializer","","A deserializer for the <code>application/x-www-form-urlencoded</code> …",null,null],[5,"to_string","","Serializes a value into a …",null,[[["serialize",8]],[["string",3],["result",4],["error",4]]]],[3,"Serializer","","A serializer for the <code>application/x-www-form-urlencoded</code> …",null,null],[11,"from","serde_urlencoded::de","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","serde_urlencoded","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","serde_urlencoded::ser","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"fmt","serde_urlencoded::de","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",3,[[],["error",3]]],[11,"custom","","",3,[[],["error",3]]],[11,"description","","",3,[[],["str",15]]],[11,"custom","","",3,[[],["error",3]]],[11,"eq","","",3,[[["error",3]],["bool",15]]],[11,"ne","","",3,[[["error",3]],["bool",15]]],[11,"clone","serde_urlencoded::ser","",2,[[],["error",4]]],[11,"eq","","",2,[[["error",4]],["bool",15]]],[11,"ne","","",2,[[["error",4]],["bool",15]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"description","","",2,[[],["str",15]]],[11,"cause","","The lower-level cause of this error, in the case of a <code>Utf8</code>…",2,[[],[["error",8],["option",4]]]],[11,"source","","The lower-level source of this error, in the case of a …",2,[[],[["option",4],["error",8]]]],[11,"deserialize_any","serde_urlencoded","",0,[[],["result",4]]],[11,"deserialize_map","","",0,[[],["result",4]]],[11,"deserialize_seq","","",0,[[],["result",4]]],[11,"deserialize_unit","","",0,[[],["result",4]]],[11,"deserialize_bool","","",0,[[],["result",4]]],[11,"deserialize_u8","","",0,[[],["result",4]]],[11,"deserialize_u16","","",0,[[],["result",4]]],[11,"deserialize_u32","","",0,[[],["result",4]]],[11,"deserialize_u64","","",0,[[],["result",4]]],[11,"deserialize_i8","","",0,[[],["result",4]]],[11,"deserialize_i16","","",0,[[],["result",4]]],[11,"deserialize_i32","","",0,[[],["result",4]]],[11,"deserialize_i64","","",0,[[],["result",4]]],[11,"deserialize_f32","","",0,[[],["result",4]]],[11,"deserialize_f64","","",0,[[],["result",4]]],[11,"deserialize_char","","",0,[[],["result",4]]],[11,"deserialize_str","","",0,[[],["result",4]]],[11,"deserialize_string","","",0,[[],["result",4]]],[11,"deserialize_option","","",0,[[],["result",4]]],[11,"deserialize_bytes","","",0,[[],["result",4]]],[11,"deserialize_byte_buf","","",0,[[],["result",4]]],[11,"deserialize_unit_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_newtype_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_tuple_struct","","",0,[[["usize",15],["str",15]],["result",4]]],[11,"deserialize_struct","","",0,[[["str",15]],["result",4]]],[11,"deserialize_identifier","","",0,[[],["result",4]]],[11,"deserialize_tuple","","",0,[[["usize",15]],["result",4]]],[11,"deserialize_enum","","",0,[[["str",15]],["result",4]]],[11,"deserialize_ignored_any","","",0,[[],["result",4]]],[11,"custom","serde_urlencoded::ser","",2,[[["display",8]]]],[11,"serialize_bool","serde_urlencoded","Returns an error.",1,[[["bool",15]],[["result",4],["error",4]]]],[11,"serialize_i8","","Returns an error.",1,[[["i8",15]],[["result",4],["error",4]]]],[11,"serialize_i16","","Returns an error.",1,[[["i16",15]],[["result",4],["error",4]]]],[11,"serialize_i32","","Returns an error.",1,[[["i32",15]],[["result",4],["error",4]]]],[11,"serialize_i64","","Returns an error.",1,[[["i64",15]],[["result",4],["error",4]]]],[11,"serialize_u8","","Returns an error.",1,[[["u8",15]],[["result",4],["error",4]]]],[11,"serialize_u16","","Returns an error.",1,[[["u16",15]],[["result",4],["error",4]]]],[11,"serialize_u32","","Returns an error.",1,[[["u32",15]],[["result",4],["error",4]]]],[11,"serialize_u64","","Returns an error.",1,[[["u64",15]],[["result",4],["error",4]]]],[11,"serialize_f32","","Returns an error.",1,[[["f32",15]],[["result",4],["error",4]]]],[11,"serialize_f64","","Returns an error.",1,[[["f64",15]],[["result",4],["error",4]]]],[11,"serialize_char","","Returns an error.",1,[[["char",15]],[["result",4],["error",4]]]],[11,"serialize_str","","Returns an error.",1,[[["str",15]],[["result",4],["error",4]]]],[11,"serialize_bytes","","Returns an error.",1,[[],[["result",4],["error",4]]]],[11,"serialize_unit","","Returns <code>Ok</code>.",1,[[],[["result",4],["error",4]]]],[11,"serialize_unit_struct","","Returns <code>Ok</code>.",1,[[["str",15]],[["result",4],["error",4]]]],[11,"serialize_unit_variant","","Returns an error.",1,[[["u32",15],["str",15]],[["result",4],["error",4]]]],[11,"serialize_newtype_struct","","Serializes the inner value, ignoring the newtype name.",1,[[["str",15]],[["result",4],["error",4]]]],[11,"serialize_newtype_variant","","Returns an error.",1,[[["u32",15],["str",15]],[["result",4],["error",4]]]],[11,"serialize_none","","Returns <code>Ok</code>.",1,[[],[["result",4],["error",4]]]],[11,"serialize_some","","Serializes the given value.",1,[[],[["result",4],["error",4]]]],[11,"serialize_seq","","Serialize a sequence, given length (if any) is ignored.",1,[[["usize",15],["option",4]],[["result",4],["error",4]]]],[11,"serialize_tuple","","Returns an error.",1,[[["usize",15]],[["result",4],["error",4]]]],[11,"serialize_tuple_struct","","Returns an error.",1,[[["usize",15],["str",15]],[["result",4],["error",4]]]],[11,"serialize_tuple_variant","","Returns an error.",1,[[["u32",15],["str",15],["usize",15]],[["result",4],["error",4]]]],[11,"serialize_map","","Serializes a map, given length is ignored.",1,[[["usize",15],["option",4]],[["error",4],["result",4]]]],[11,"serialize_struct","","Serializes a struct, given length is ignored.",1,[[["usize",15],["str",15]],[["result",4],["error",4]]]],[11,"serialize_struct_variant","","Returns an error.",1,[[["u32",15],["str",15],["usize",15]],[["error",4],["result",4]]]],[11,"serialize_element","serde_urlencoded::ser","",5,[[],[["result",4],["error",4]]]],[11,"end","","",5,[[],[["result",4],["error",4]]]],[11,"serialize_entry","","",8,[[],[["result",4],["error",4]]]],[11,"serialize_key","","",8,[[],[["result",4],["error",4]]]],[11,"serialize_value","","",8,[[],[["result",4],["error",4]]]],[11,"end","","",8,[[],[["error",4],["result",4]]]],[11,"serialize_element","","",4,[[],[["result",4],["error",4]]]],[11,"end","","",4,[[],[["result",4],["error",4]]]],[11,"serialize_field","","",9,[[["str",15]],[["result",4],["error",4]]]],[11,"end","","",9,[[],[["error",4],["result",4]]]],[11,"serialize_field","","",10,[[["str",15]],[["result",4],["error",4]]]],[11,"end","","",10,[[],[["error",4],["result",4]]]],[11,"serialize_field","","",6,[[],[["result",4],["error",4]]]],[11,"end","","",6,[[],[["result",4],["error",4]]]],[11,"serialize_field","","",7,[[],[["result",4],["error",4]]]],[11,"end","","",7,[[],[["error",4],["result",4]]]]],"p":[[3,"Deserializer"],[3,"Serializer"],[4,"Error"],[3,"Error"],[3,"SeqSerializer"],[3,"TupleSerializer"],[3,"TupleStructSerializer"],[3,"TupleVariantSerializer"],[3,"MapSerializer"],[3,"StructSerializer"],[3,"StructVariantSerializer"]]},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","i":[[3,"Slab","slab","Pre-allocated storage for a uniform data type",null,null],[3,"VacantEntry","","A handle to a vacant entry in a <code>Slab</code>.",null,null],[3,"IntoIter","","A consuming iterator over the values stored in a <code>Slab</code>",null,null],[3,"Iter","","An iterator over the values stored in the <code>Slab</code>",null,null],[3,"IterMut","","A mutable iterator over the values stored in the <code>Slab</code>",null,null],[3,"Drain","","A draining iterator for <code>Slab</code>",null,null],[11,"new","","Construct a new, empty <code>Slab</code>.",0,[[],["slab",3]]],[11,"with_capacity","","Construct a new, empty <code>Slab</code> with the specified capacity.",0,[[["usize",15]],["slab",3]]],[11,"capacity","","Return the number of values the slab can store without …",0,[[],["usize",15]]],[11,"reserve","","Reserve capacity for at least <code>additional</code> more values to …",0,[[["usize",15]]]],[11,"reserve_exact","","Reserve the minimum capacity required to store exactly …",0,[[["usize",15]]]],[11,"shrink_to_fit","","Shrink the capacity of the slab as much as possible …",0,[[]]],[11,"compact","","Reduce the capacity as much as possible, changing the key …",0,[[]]],[11,"clear","","Clear the slab of all values.",0,[[]]],[11,"len","","Return the number of stored values.",0,[[],["usize",15]]],[11,"is_empty","","Return <code>true</code> if there are no values stored in the slab.",0,[[],["bool",15]]],[11,"iter","","Return an iterator over the slab.",0,[[],["iter",3]]],[11,"iter_mut","","Return an iterator that allows modifying each value.",0,[[],["itermut",3]]],[11,"get","","Return a reference to the value associated with the given …",0,[[["usize",15]],["option",4]]],[11,"get_mut","","Return a mutable reference to the value associated with …",0,[[["usize",15]],["option",4]]],[11,"get2_mut","","Return two mutable references to the values associated …",0,[[["usize",15]],["option",4]]],[11,"get_unchecked","","Return a reference to the value associated with the given …",0,[[["usize",15]]]],[11,"get_unchecked_mut","","Return a mutable reference to the value associated with …",0,[[["usize",15]]]],[11,"get2_unchecked_mut","","Return two mutable references to the values associated …",0,[[["usize",15]]]],[11,"key_of","","Get the key for an element in the slab.",0,[[],["usize",15]]],[11,"insert","","Insert a value in the slab, returning key assigned to the …",0,[[],["usize",15]]],[11,"vacant_entry","","Return a handle to a vacant entry allowing for further …",0,[[],["vacantentry",3]]],[11,"remove","","Remove and return the value associated with the given key.",0,[[["usize",15]]]],[11,"contains","","Return <code>true</code> if a value is associated with the given key.",0,[[["usize",15]],["bool",15]]],[11,"retain","","Retain only the elements specified by the predicate.",0,[[]]],[11,"drain","","Return a draining iterator that removes all elements from …",0,[[],["drain",3]]],[11,"insert","","Insert a value in the entry, returning a mutable …",1,[[]]],[11,"key","","Return the key associated with this entry.",1,[[],["usize",15]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",3,[[],["option",4]]],[11,"next_back","","",4,[[],["option",4]]],[11,"next_back","","",5,[[],["option",4]]],[11,"into_iter","","",0,[[],["intoiter",3]]],[11,"next","","",2,[[],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"next","","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"clone","","",0,[[],["slab",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"index","","",0,[[["usize",15]]]],[11,"index_mut","","",0,[[["usize",15]]]],[11,"from_iter","","",0,[[]]]],"p":[[3,"Slab"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Drain"]]},\
"socket2":{"doc":"Utilities for creating and using sockets.","i":[[3,"SockAddr","socket2","The address of a socket.",null,null],[3,"Socket","","Owned wrapper around a system socket.",null,null],[3,"SockRef","","A reference to a [<code>Socket</code>] that can be used to configure …",null,null],[3,"Domain","","Specification of the communication domain for a socket.",null,null],[18,"IPV4","","Domain for IPv4 communication, corresponding to <code>AF_INET</code>.",0,null],[18,"IPV6","","Domain for IPv6 communication, corresponding to <code>AF_INET6</code>.",0,null],[11,"for_address","","Returns the correct domain for <code>address</code>.",0,[[["socketaddr",4]],["domain",3]]],[3,"Type","","Specification of communication semantics on a socket.",null,null],[18,"STREAM","","Type corresponding to <code>SOCK_STREAM</code>.",1,null],[18,"DGRAM","","Type corresponding to <code>SOCK_DGRAM</code>.",1,null],[3,"Protocol","","Protocol specification used for creating sockets via …",null,null],[18,"ICMPV4","","Protocol corresponding to <code>ICMPv4</code>.",2,null],[18,"ICMPV6","","Protocol corresponding to <code>ICMPv6</code>.",2,null],[18,"TCP","","Protocol corresponding to <code>TCP</code>.",2,null],[18,"UDP","","Protocol corresponding to <code>UDP</code>.",2,null],[3,"RecvFlags","","Flags for incoming messages.",null,null],[11,"is_truncated","","Check if the message contains a truncated datagram.",3,[[],["bool",15]]],[3,"MaybeUninitSlice","","A version of <code>IoSliceMut</code> that allows the buffer to be …",null,null],[11,"new","","Creates a new <code>MaybeUninitSlice</code> wrapping a byte slice.",4,[[],["maybeuninitslice",3]]],[3,"TcpKeepalive","","Configures a socket\'s TCP keepalive parameters.",null,null],[11,"new","","Returns a new, empty set of TCP keepalive parameters.",5,[[],["tcpkeepalive",3]]],[11,"with_time","","Set the amount of time after which TCP keepalive probes …",5,[[["duration",3]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",7,[[]]],[11,"from","","",6,[[["socketaddr",4]],["sockaddr",3]]],[11,"from","","",6,[[["socketaddrv4",3]],["sockaddr",3]]],[11,"from","","",6,[[["socketaddrv6",3]],["sockaddr",3]]],[11,"from","","",7,[[["tcpstream",3]],["socket",3]]],[11,"from","","",7,[[["tcplistener",3]],["socket",3]]],[11,"from","","",7,[[["udpsocket",3]],["socket",3]]],[11,"from","","The caller must ensure <code>S</code> is actually a socket.",8,[[]]],[11,"from","","",0,[[["c_int",6]],["domain",3]]],[11,"from","","",1,[[["c_int",6]],["type",3]]],[11,"from","","",2,[[["c_int",6]],["protocol",3]]],[11,"clone","","",0,[[],["domain",3]]],[11,"clone","","",1,[[],["type",3]]],[11,"clone","","",2,[[],["protocol",3]]],[11,"clone","","",3,[[],["recvflags",3]]],[11,"clone","","",5,[[],["tcpkeepalive",3]]],[11,"eq","","",0,[[["domain",3]],["bool",15]]],[11,"ne","","",0,[[["domain",3]],["bool",15]]],[11,"eq","","",1,[[["type",3]],["bool",15]]],[11,"ne","","",1,[[["type",3]],["bool",15]]],[11,"eq","","",2,[[["protocol",3]],["bool",15]]],[11,"ne","","",2,[[["protocol",3]],["bool",15]]],[11,"eq","","",3,[[["recvflags",3]],["bool",15]]],[11,"ne","","",3,[[["recvflags",3]],["bool",15]]],[11,"deref","","",8,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"read","","",7,[[],[["result",6],["usize",15]]]],[11,"read_vectored","","",7,[[],[["result",6],["usize",15]]]],[11,"write","","",7,[[],[["result",6],["usize",15]]]],[11,"write_vectored","","",7,[[],[["result",6],["usize",15]]]],[11,"flush","","",7,[[],["result",6]]],[11,"as_raw_fd","","",7,[[],["c_int",6]]],[11,"from_raw_fd","","",7,[[["c_int",6]],["socket",3]]],[11,"into_raw_fd","","",7,[[],["c_int",6]]],[11,"init","","Initialise a <code>SockAddr</code> by calling the function <code>init</code>.",6,[[],["result",6]]],[11,"family","","Returns this address\'s family.",6,[[],["sa_family_t",6]]],[11,"len","","Returns the size of this address in bytes.",6,[[],["socklen_t",6]]],[11,"as_ptr","","Returns a raw pointer to the address.",6,[[]]],[11,"as_socket","","Returns this address as a <code>SocketAddr</code> if it is in the …",6,[[],[["option",4],["socketaddr",4]]]],[11,"as_socket_ipv4","","Returns this address as a <code>SocketAddrV4</code> if it is in the …",6,[[],[["option",4],["socketaddrv4",3]]]],[11,"as_socket_ipv6","","Returns this address as a <code>SocketAddrV6</code> if it is in the …",6,[[],[["option",4],["socketaddrv6",3]]]],[11,"new","","Creates a new socket and sets common flags.",7,[[["type",3],["protocol",3],["option",4],["domain",3]],[["socket",3],["result",6]]]],[11,"new_raw","","Creates a new socket ready to be configured.",7,[[["type",3],["protocol",3],["option",4],["domain",3]],[["socket",3],["result",6]]]],[11,"bind","","Binds this socket to the specified address.",7,[[["sockaddr",3]],["result",6]]],[11,"connect","","Initiate a connection on this socket to the specified …",7,[[["sockaddr",3]],["result",6]]],[11,"connect_timeout","","Initiate a connection on this socket to the specified …",7,[[["sockaddr",3],["duration",3]],["result",6]]],[11,"listen","","Mark a socket as ready to accept incoming connection …",7,[[["c_int",6]],["result",6]]],[11,"accept","","Accept a new incoming connection from this listener.",7,[[],["result",6]]],[11,"accept_raw","","Accept a new incoming connection from this listener.",7,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this …",7,[[],[["sockaddr",3],["result",6]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this …",7,[[],[["sockaddr",3],["result",6]]]],[11,"try_clone","","Creates a new independently owned handle to the …",7,[[],[["socket",3],["result",6]]]],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",7,[[["bool",15]],["result",6]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",7,[[["shutdown",4]],["result",6]]],[11,"recv","","Receives data on the socket from the remote address to …",7,[[],[["result",6],["usize",15]]]],[11,"recv_out_of_band","","Receives out-of-band (OOB) data on the socket from the …",7,[[],[["result",6],["usize",15]]]],[11,"recv_with_flags","","Identical to <code>recv</code> but allows for specification of …",7,[[["c_int",6]],[["result",6],["usize",15]]]],[11,"recv_vectored","","Receives data on the socket from the remote address to …",7,[[],["result",6]]],[11,"recv_vectored_with_flags","","Identical to <code>recv_vectored</code> but allows for specification …",7,[[["c_int",6]],["result",6]]],[11,"peek","","Receives data on the socket from the remote adress to …",7,[[],[["result",6],["usize",15]]]],[11,"recv_from","","Receives data from the socket. On success, returns the …",7,[[],["result",6]]],[11,"recv_from_with_flags","","Identical to <code>recv_from</code> but allows for specification of …",7,[[["c_int",6]],["result",6]]],[11,"recv_from_vectored","","Receives data from the socket. Returns the amount of …",7,[[],["result",6]]],[11,"recv_from_vectored_with_flags","","Identical to <code>recv_from_vectored</code> but allows for …",7,[[["c_int",6]],["result",6]]],[11,"peek_from","","Receives data from the socket, without removing it from …",7,[[],["result",6]]],[11,"send","","Sends data on the socket to a connected peer.",7,[[],[["result",6],["usize",15]]]],[11,"send_with_flags","","Identical to <code>send</code> but allows for specification of …",7,[[["c_int",6]],[["result",6],["usize",15]]]],[11,"send_vectored","","Send data to the connected peer. Returns the amount of …",7,[[],[["result",6],["usize",15]]]],[11,"send_vectored_with_flags","","Identical to <code>send_vectored</code> but allows for specification …",7,[[["c_int",6]],[["result",6],["usize",15]]]],[11,"send_out_of_band","","Sends out-of-band (OOB) data on the socket to connected …",7,[[],[["result",6],["usize",15]]]],[11,"send_to","","Sends data on the socket to the given address. On …",7,[[["sockaddr",3]],[["result",6],["usize",15]]]],[11,"send_to_with_flags","","Identical to <code>send_to</code> but allows for specification of …",7,[[["sockaddr",3],["c_int",6]],[["result",6],["usize",15]]]],[11,"send_to_vectored","","Send data to a peer listening on <code>addr</code>. Returns the amount …",7,[[["sockaddr",3]],[["result",6],["usize",15]]]],[11,"send_to_vectored_with_flags","","Identical to <code>send_to_vectored</code> but allows for …",7,[[["sockaddr",3],["c_int",6]],[["result",6],["usize",15]]]],[11,"broadcast","","Get the value of the <code>SO_BROADCAST</code> option for this socket.",7,[[],[["result",6],["bool",15]]]],[11,"set_broadcast","","Set the value of the <code>SO_BROADCAST</code> option for this socket.",7,[[["bool",15]],["result",6]]],[11,"take_error","","Get the value of the <code>SO_ERROR</code> option on this socket.",7,[[],[["result",6],["option",4]]]],[11,"keepalive","","Get the value of the <code>SO_KEEPALIVE</code> option on this socket.",7,[[],[["result",6],["bool",15]]]],[11,"set_keepalive","","Set value for the <code>SO_KEEPALIVE</code> option on this socket.",7,[[["bool",15]],["result",6]]],[11,"linger","","Get the value of the <code>SO_LINGER</code> option on this socket.",7,[[],[["result",6],["option",4]]]],[11,"set_linger","","Set value for the <code>SO_LINGER</code> option on this socket.",7,[[["option",4],["duration",3]],["result",6]]],[11,"out_of_band_inline","","Get value for the <code>SO_OOBINLINE</code> option on this socket.",7,[[],[["result",6],["bool",15]]]],[11,"set_out_of_band_inline","","Set value for the <code>SO_OOBINLINE</code> option on this socket.",7,[[["bool",15]],["result",6]]],[11,"recv_buffer_size","","Get value for the <code>SO_RCVBUF</code> option on this socket.",7,[[],[["result",6],["usize",15]]]],[11,"set_recv_buffer_size","","Set value for the <code>SO_RCVBUF</code> option on this socket.",7,[[["usize",15]],["result",6]]],[11,"read_timeout","","Get value for the <code>SO_RCVTIMEO</code> option on this socket.",7,[[],[["result",6],["option",4]]]],[11,"set_read_timeout","","Set value for the <code>SO_RCVTIMEO</code> option on this socket.",7,[[["option",4],["duration",3]],["result",6]]],[11,"reuse_address","","Get the value of the <code>SO_REUSEADDR</code> option on this socket.",7,[[],[["result",6],["bool",15]]]],[11,"set_reuse_address","","Set value for the <code>SO_REUSEADDR</code> option on this socket.",7,[[["bool",15]],["result",6]]],[11,"send_buffer_size","","Get the value of the <code>SO_SNDBUF</code> option on this socket.",7,[[],[["result",6],["usize",15]]]],[11,"set_send_buffer_size","","Set value for the <code>SO_SNDBUF</code> option on this socket.",7,[[["usize",15]],["result",6]]],[11,"write_timeout","","Get value for the <code>SO_SNDTIMEO</code> option on this socket.",7,[[],[["result",6],["option",4]]]],[11,"set_write_timeout","","Set value for the <code>SO_SNDTIMEO</code> option on this socket.",7,[[["option",4],["duration",3]],["result",6]]],[11,"join_multicast_v4","","Join a multicast group using <code>IP_ADD_MEMBERSHIP</code> option on …",7,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v4","","Leave a multicast group using <code>IP_DROP_MEMBERSHIP</code> option …",7,[[["ipv4addr",3]],["result",6]]],[11,"multicast_if_v4","","Get the value of the <code>IP_MULTICAST_IF</code> option for this …",7,[[],[["result",6],["ipv4addr",3]]]],[11,"set_multicast_if_v4","","Set the value of the <code>IP_MULTICAST_IF</code> option for this …",7,[[["ipv4addr",3]],["result",6]]],[11,"multicast_loop_v4","","Get the value of the <code>IP_MULTICAST_LOOP</code> option for this …",7,[[],[["result",6],["bool",15]]]],[11,"set_multicast_loop_v4","","Set the value of the <code>IP_MULTICAST_LOOP</code> option for this …",7,[[["bool",15]],["result",6]]],[11,"multicast_ttl_v4","","Get the value of the <code>IP_MULTICAST_TTL</code> option for this …",7,[[],[["result",6],["u32",15]]]],[11,"set_multicast_ttl_v4","","Set the value of the <code>IP_MULTICAST_TTL</code> option for this …",7,[[["u32",15]],["result",6]]],[11,"ttl","","Get the value of the <code>IP_TTL</code> option for this socket.",7,[[],[["result",6],["u32",15]]]],[11,"set_ttl","","Set the value of the <code>IP_TTL</code> option for this socket.",7,[[["u32",15]],["result",6]]],[11,"join_multicast_v6","","Join a multicast group using <code>IPV6_ADD_MEMBERSHIP</code> option …",7,[[["u32",15],["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v6","","Leave a multicast group using <code>IPV6_DROP_MEMBERSHIP</code> option …",7,[[["u32",15],["ipv6addr",3]],["result",6]]],[11,"multicast_hops_v6","","Get the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …",7,[[],[["result",6],["u32",15]]]],[11,"set_multicast_hops_v6","","Set the value of the <code>IPV6_MULTICAST_HOPS</code> option for this …",7,[[["u32",15]],["result",6]]],[11,"multicast_if_v6","","Get the value of the <code>IPV6_MULTICAST_IF</code> option for this …",7,[[],[["result",6],["u32",15]]]],[11,"set_multicast_if_v6","","Set the value of the <code>IPV6_MULTICAST_IF</code> option for this …",7,[[["u32",15]],["result",6]]],[11,"multicast_loop_v6","","Get the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",7,[[],[["result",6],["bool",15]]]],[11,"set_multicast_loop_v6","","Set the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",7,[[["bool",15]],["result",6]]],[11,"unicast_hops_v6","","Get the value of the <code>IPV6_UNICAST_HOPS</code> option for this …",7,[[],[["result",6],["u32",15]]]],[11,"set_unicast_hops_v6","","Set the value for the <code>IPV6_UNICAST_HOPS</code> option on this …",7,[[["u32",15]],["result",6]]],[11,"only_v6","","Get the value of the <code>IPV6_V6ONLY</code> option for this socket.",7,[[],[["result",6],["bool",15]]]],[11,"set_only_v6","","Set the value for the <code>IPV6_V6ONLY</code> option on this socket.",7,[[["bool",15]],["result",6]]],[11,"set_tcp_keepalive","","Set parameters configuring TCP keepalive probes for this …",7,[[["tcpkeepalive",3]],["result",6]]],[11,"nodelay","","Get the value of the <code>TCP_NODELAY</code> option on this socket.",7,[[],[["result",6],["bool",15]]]],[11,"set_nodelay","","Set the value of the <code>TCP_NODELAY</code> option on this socket.",7,[[["bool",15]],["result",6]]],[18,"UNIX","","Domain for Unix socket communication, corresponding to …",0,null],[11,"is_end_of_record","","Check if the message terminates a record.",3,[[],["bool",15]]],[11,"is_out_of_band","","Check if the message contains out-of-band data.",3,[[],["bool",15]]]],"p":[[3,"Domain"],[3,"Type"],[3,"Protocol"],[3,"RecvFlags"],[3,"MaybeUninitSlice"],[3,"TcpKeepalive"],[3,"SockAddr"],[3,"Socket"],[3,"SockRef"]]},\
"syn":{"doc":"github crates-io docs-rs","i":[[0,"token","syn","Tokens representing Rust punctuation, keywords, and …",null,null],[8,"Token","syn::token","Marker trait for types that represent single tokens.",null,null],[3,"Underscore","","<code>_</code>",null,null],[12,"spans","","",0,null],[3,"Abstract","","<code>abstract</code>",null,null],[12,"span","","",1,null],[3,"As","","<code>as</code>",null,null],[12,"span","","",2,null],[3,"Async","","<code>async</code>",null,null],[12,"span","","",3,null],[3,"Auto","","<code>auto</code>",null,null],[12,"span","","",4,null],[3,"Await","","<code>await</code>",null,null],[12,"span","","",5,null],[3,"Become","","<code>become</code>",null,null],[12,"span","","",6,null],[3,"Box","","<code>box</code>",null,null],[12,"span","","",7,null],[3,"Break","","<code>break</code>",null,null],[12,"span","","",8,null],[3,"Const","","<code>const</code>",null,null],[12,"span","","",9,null],[3,"Continue","","<code>continue</code>",null,null],[12,"span","","",10,null],[3,"Crate","","<code>crate</code>",null,null],[12,"span","","",11,null],[3,"Default","","<code>default</code>",null,null],[12,"span","","",12,null],[3,"Do","","<code>do</code>",null,null],[12,"span","","",13,null],[3,"Dyn","","<code>dyn</code>",null,null],[12,"span","","",14,null],[3,"Else","","<code>else</code>",null,null],[12,"span","","",15,null],[3,"Enum","","<code>enum</code>",null,null],[12,"span","","",16,null],[3,"Extern","","<code>extern</code>",null,null],[12,"span","","",17,null],[3,"Final","","<code>final</code>",null,null],[12,"span","","",18,null],[3,"Fn","","<code>fn</code>",null,null],[12,"span","","",19,null],[3,"For","","<code>for</code>",null,null],[12,"span","","",20,null],[3,"If","","<code>if</code>",null,null],[12,"span","","",21,null],[3,"Impl","","<code>impl</code>",null,null],[12,"span","","",22,null],[3,"In","","<code>in</code>",null,null],[12,"span","","",23,null],[3,"Let","","<code>let</code>",null,null],[12,"span","","",24,null],[3,"Loop","","<code>loop</code>",null,null],[12,"span","","",25,null],[3,"Macro","","<code>macro</code>",null,null],[12,"span","","",26,null],[3,"Match","","<code>match</code>",null,null],[12,"span","","",27,null],[3,"Mod","","<code>mod</code>",null,null],[12,"span","","",28,null],[3,"Move","","<code>move</code>",null,null],[12,"span","","",29,null],[3,"Mut","","<code>mut</code>",null,null],[12,"span","","",30,null],[3,"Override","","<code>override</code>",null,null],[12,"span","","",31,null],[3,"Priv","","<code>priv</code>",null,null],[12,"span","","",32,null],[3,"Pub","","<code>pub</code>",null,null],[12,"span","","",33,null],[3,"Ref","","<code>ref</code>",null,null],[12,"span","","",34,null],[3,"Return","","<code>return</code>",null,null],[12,"span","","",35,null],[3,"SelfType","","<code>Self</code>",null,null],[12,"span","","",36,null],[3,"SelfValue","","<code>self</code>",null,null],[12,"span","","",37,null],[3,"Static","","<code>static</code>",null,null],[12,"span","","",38,null],[3,"Struct","","<code>struct</code>",null,null],[12,"span","","",39,null],[3,"Super","","<code>super</code>",null,null],[12,"span","","",40,null],[3,"Trait","","<code>trait</code>",null,null],[12,"span","","",41,null],[3,"Try","","<code>try</code>",null,null],[12,"span","","",42,null],[3,"Type","","<code>type</code>",null,null],[12,"span","","",43,null],[3,"Typeof","","<code>typeof</code>",null,null],[12,"span","","",44,null],[3,"Union","","<code>union</code>",null,null],[12,"span","","",45,null],[3,"Unsafe","","<code>unsafe</code>",null,null],[12,"span","","",46,null],[3,"Unsized","","<code>unsized</code>",null,null],[12,"span","","",47,null],[3,"Use","","<code>use</code>",null,null],[12,"span","","",48,null],[3,"Virtual","","<code>virtual</code>",null,null],[12,"span","","",49,null],[3,"Where","","<code>where</code>",null,null],[12,"span","","",50,null],[3,"While","","<code>while</code>",null,null],[12,"span","","",51,null],[3,"Yield","","<code>yield</code>",null,null],[12,"span","","",52,null],[3,"Add","","<code>+</code>",null,null],[12,"spans","","",53,null],[3,"AddEq","","<code>+=</code>",null,null],[12,"spans","","",54,null],[3,"And","","<code>&</code>",null,null],[12,"spans","","",55,null],[3,"AndAnd","","<code>&&</code>",null,null],[12,"spans","","",56,null],[3,"AndEq","","<code>&=</code>",null,null],[12,"spans","","",57,null],[3,"At","","<code>@</code>",null,null],[12,"spans","","",58,null],[3,"Bang","","<code>!</code>",null,null],[12,"spans","","",59,null],[3,"Caret","","<code>^</code>",null,null],[12,"spans","","",60,null],[3,"CaretEq","","<code>^=</code>",null,null],[12,"spans","","",61,null],[3,"Colon","","<code>:</code>",null,null],[12,"spans","","",62,null],[3,"Colon2","","<code>::</code>",null,null],[12,"spans","","",63,null],[3,"Comma","","<code>,</code>",null,null],[12,"spans","","",64,null],[3,"Div","","<code>/</code>",null,null],[12,"spans","","",65,null],[3,"DivEq","","<code>/=</code>",null,null],[12,"spans","","",66,null],[3,"Dollar","","<code>$</code>",null,null],[12,"spans","","",67,null],[3,"Dot","","<code>.</code>",null,null],[12,"spans","","",68,null],[3,"Dot2","","<code>..</code>",null,null],[12,"spans","","",69,null],[3,"Dot3","","<code>...</code>",null,null],[12,"spans","","",70,null],[3,"DotDotEq","","<code>..=</code>",null,null],[12,"spans","","",71,null],[3,"Eq","","<code>=</code>",null,null],[12,"spans","","",72,null],[3,"EqEq","","<code>==</code>",null,null],[12,"spans","","",73,null],[3,"Ge","","<code>>=</code>",null,null],[12,"spans","","",74,null],[3,"Gt","","<code>></code>",null,null],[12,"spans","","",75,null],[3,"Le","","<code><=</code>",null,null],[12,"spans","","",76,null],[3,"Lt","","<code><</code>",null,null],[12,"spans","","",77,null],[3,"MulEq","","<code>*=</code>",null,null],[12,"spans","","",78,null],[3,"Ne","","<code>!=</code>",null,null],[12,"spans","","",79,null],[3,"Or","","<code>|</code>",null,null],[12,"spans","","",80,null],[3,"OrEq","","<code>|=</code>",null,null],[12,"spans","","",81,null],[3,"OrOr","","<code>||</code>",null,null],[12,"spans","","",82,null],[3,"Pound","","<code>#</code>",null,null],[12,"spans","","",83,null],[3,"Question","","<code>?</code>",null,null],[12,"spans","","",84,null],[3,"RArrow","","<code>-></code>",null,null],[12,"spans","","",85,null],[3,"LArrow","","<code><-</code>",null,null],[12,"spans","","",86,null],[3,"Rem","","<code>%</code>",null,null],[12,"spans","","",87,null],[3,"RemEq","","<code>%=</code>",null,null],[12,"spans","","",88,null],[3,"FatArrow","","<code>=></code>",null,null],[12,"spans","","",89,null],[3,"Semi","","<code>;</code>",null,null],[12,"spans","","",90,null],[3,"Shl","","<code><<</code>",null,null],[12,"spans","","",91,null],[3,"ShlEq","","<code><<=</code>",null,null],[12,"spans","","",92,null],[3,"Shr","","<code>>></code>",null,null],[12,"spans","","",93,null],[3,"ShrEq","","<code>>>=</code>",null,null],[12,"spans","","",94,null],[3,"Star","","<code>*</code>",null,null],[12,"spans","","",95,null],[3,"Sub","","<code>-</code>",null,null],[12,"spans","","",96,null],[3,"SubEq","","<code>-=</code>",null,null],[12,"spans","","",97,null],[3,"Tilde","","<code>~</code>",null,null],[12,"spans","","",98,null],[3,"Brace","","<code>{...}</code>",null,null],[12,"span","","",99,null],[11,"surround","","",99,[[["tokenstream",3]]]],[3,"Bracket","","<code>[...]</code>",null,null],[12,"span","","",100,null],[11,"surround","","",100,[[["tokenstream",3]]]],[3,"Paren","","<code>(...)</code>",null,null],[12,"span","","",101,null],[11,"surround","","",101,[[["tokenstream",3]]]],[3,"Group","","None-delimited group",null,null],[12,"span","","",102,null],[11,"surround","","",102,[[["tokenstream",3]]]],[0,"buffer","syn","A stably addressed token buffer supporting efficient …",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple …",null,null],[11,"new","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"new2","","Creates a <code>TokenBuffer</code> containing all the tokens from the …",103,[[["tokenstream",3]],["tokenbuffer",3]]],[11,"begin","","Creates a cursor referencing the first token in the …",103,[[],["cursor",3]]],[3,"Cursor","","A cheaply copyable cursor into a <code>TokenBuffer</code>.",null,null],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",104,[[]]],[11,"eof","","Checks whether the cursor is currently pointing at the …",104,[[],["bool",15]]],[11,"group","","If the cursor is pointing at a <code>Group</code> with the given …",104,[[["delimiter",4]],["option",4]]],[11,"ident","","If the cursor is pointing at a <code>Ident</code>, returns it along …",104,[[],["option",4]]],[11,"punct","","If the cursor is pointing at an <code>Punct</code>, returns it along …",104,[[],["option",4]]],[11,"literal","","If the cursor is pointing at a <code>Literal</code>, return it along …",104,[[],["option",4]]],[11,"lifetime","","If the cursor is pointing at a <code>Lifetime</code>, returns it along …",104,[[],["option",4]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into …",104,[[],["tokenstream",3]]],[11,"token_tree","","If the cursor is pointing at a <code>TokenTree</code>, returns it …",104,[[],["option",4]]],[11,"span","","Returns the <code>Span</code> of the current token, or …",104,[[],["span",3]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign …",null,null],[8,"IdentExt","syn::ext","Additional methods for <code>Ident</code> not provided by proc-macro2 …",null,null],[10,"parse_any","","Parses any identifier including keywords.",105,[[["parsestream",6]],["result",6]]],[18,"peek_any","","Peeks any identifier including keywords. Usage: …",105,null],[10,"unraw","","Strips the raw marker <code>r#</code>, if any, from the beginning of …",105,[[],["ident",3]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by …",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type <code>T</code> …",null,null],[11,"new","","Creates an empty punctuated sequence.",106,[[]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, …",106,[[],["bool",15]]],[11,"len","","Returns the number of syntax tree nodes in this …",106,[[],["usize",15]]],[11,"first","","Borrows the first element in this sequence.",106,[[],["option",4]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",106,[[],["option",4]]],[11,"last","","Borrows the last element in this sequence.",106,[[],["option",4]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",106,[[],["option",4]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of …",106,[[],["iter",3]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree …",106,[[],["itermut",3]]],[11,"pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["pairs",3]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as …",106,[[],["pairsmut",3]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as …",106,[[],["intopairs",3]]],[11,"push_value","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this …",106,[[]]],[11,"pop","","Removes the last punctuated pair from this sequence, or …",106,[[],[["option",4],["pair",4]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a …",106,[[],["bool",15]]],[11,"empty_or_trailing","","Returns true if either this <code>Punctuated</code> is empty, or it …",106,[[],["bool",15]]],[11,"push","","Appends a syntax tree node onto the end of this …",106,[[]]],[11,"insert","","Inserts an element at position <code>index</code>.",106,[[["usize",15]]]],[11,"clear","","Clears the sequence of all values and punctuation, making …",106,[[]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_terminated_with","","Parses zero or more occurrences of <code>T</code> using the given …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of <code>T</code> separated by …",106,[[["parsestream",6]],["result",6]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of <code>T</code> using the given parse …",106,[[["parsestream",6]],["result",6]]],[3,"Pairs","","An iterator over borrowed pairs of type <code>Pair<&T, &P></code>.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type …",null,null],[3,"IntoPairs","","An iterator over owned pairs of type <code>Pair<T, P></code>.",null,null],[3,"IntoIter","","An iterator over owned values of type <code>T</code>.",null,null],[3,"Iter","","An iterator over borrowed values of type <code>&T</code>.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type <code>&mut T</code>.",null,null],[4,"Pair","","A single syntax tree node of type <code>T</code> followed by its …",null,null],[13,"Punctuated","","",107,null],[13,"End","","",107,null],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, …",107,[[]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",107,[[]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated …",107,[[]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless …",107,[[],["option",4]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and …",107,[[["option",4]]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree …",107,[[]]],[0,"spanned","syn","A trait that can provide the <code>Span</code> of the complete …",null,null],[8,"Spanned","syn::spanned","A trait that can provide the <code>Span</code> of the complete …",null,null],[10,"span","","Returns a <code>Span</code> covering the complete contents of this …",108,[[],["span",3]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[8,"Visit","syn::visit","Syntax tree traversal to walk a shared borrow of a syntax …",null,null],[11,"visit_abi","","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[5,"visit_abi","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm","","",null,[[["arm",3]]]],[5,"visit_attr_style","","",null,[[["attrstyle",4]]]],[5,"visit_attribute","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op","","",null,[[["binop",4]]]],[5,"visit_binding","","",null,[[["binding",3]]]],[5,"visit_block","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param","","",null,[[["constparam",3]]]],[5,"visit_constraint","","",null,[[["constraint",3]]]],[5,"visit_data","","",null,[[["data",4]]]],[5,"visit_data_enum","","",null,[[["dataenum",3]]]],[5,"visit_data_struct","","",null,[[["datastruct",3]]]],[5,"visit_data_union","","",null,[[["dataunion",3]]]],[5,"visit_derive_input","","",null,[[["deriveinput",3]]]],[5,"visit_expr","","",null,[[["expr",4]]]],[5,"visit_expr_array","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async","","",null,[[["exprasync",3]]]],[5,"visit_expr_await","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block","","",null,[[["exprblock",3]]]],[5,"visit_expr_box","","",null,[[["exprbox",3]]]],[5,"visit_expr_break","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if","","",null,[[["exprif",3]]]],[5,"visit_expr_index","","",null,[[["exprindex",3]]]],[5,"visit_expr_let","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren","","",null,[[["exprparen",3]]]],[5,"visit_expr_path","","",null,[[["exprpath",3]]]],[5,"visit_expr_range","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield","","",null,[[["expryield",3]]]],[5,"visit_field","","",null,[[["field",3]]]],[5,"visit_field_pat","","",null,[[["fieldpat",3]]]],[5,"visit_field_value","","",null,[[["fieldvalue",3]]]],[5,"visit_fields","","",null,[[["fields",4]]]],[5,"visit_fields_named","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file","","",null,[[["file",3]]]],[5,"visit_fn_arg","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param","","",null,[[["genericparam",4]]]],[5,"visit_generics","","",null,[[["generics",3]]]],[5,"visit_ident","","",null,[[["ident",3]]]],[5,"visit_impl_item","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type","","",null,[[["implitemtype",3]]]],[5,"visit_index","","",null,[[["index",3]]]],[5,"visit_item","","",null,[[["item",4]]]],[5,"visit_item_const","","",null,[[["itemconst",3]]]],[5,"visit_item_enum","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod","","",null,[[["itemmod",3]]]],[5,"visit_item_static","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type","","",null,[[["itemtype",3]]]],[5,"visit_item_union","","",null,[[["itemunion",3]]]],[5,"visit_item_use","","",null,[[["itemuse",3]]]],[5,"visit_label","","",null,[[["label",3]]]],[5,"visit_lifetime","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef",3]]]],[5,"visit_lit","","",null,[[["lit",4]]]],[5,"visit_lit_bool","","",null,[[["litbool",3]]]],[5,"visit_lit_byte","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char","","",null,[[["litchar",3]]]],[5,"visit_lit_float","","",null,[[["litfloat",3]]]],[5,"visit_lit_int","","",null,[[["litint",3]]]],[5,"visit_lit_str","","",null,[[["litstr",3]]]],[5,"visit_local","","",null,[[["local",3]]]],[5,"visit_macro","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter",4]]]],[5,"visit_member","","",null,[[["member",4]]]],[5,"visit_meta","","",null,[[["meta",4]]]],[5,"visit_meta_list","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat","","",null,[[["pat",4]]]],[5,"visit_pat_box","","",null,[[["patbox",3]]]],[5,"visit_pat_ident","","",null,[[["patident",3]]]],[5,"visit_pat_lit","","",null,[[["patlit",3]]]],[5,"visit_pat_macro","","",null,[[["patmacro",3]]]],[5,"visit_pat_or","","",null,[[["pator",3]]]],[5,"visit_pat_path","","",null,[[["patpath",3]]]],[5,"visit_pat_range","","",null,[[["patrange",3]]]],[5,"visit_pat_reference","","",null,[[["patreference",3]]]],[5,"visit_pat_rest","","",null,[[["patrest",3]]]],[5,"visit_pat_slice","","",null,[[["patslice",3]]]],[5,"visit_pat_struct","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type","","",null,[[["pattype",3]]]],[5,"visit_pat_wild","","",null,[[["patwild",3]]]],[5,"visit_path","","",null,[[["path",3]]]],[5,"visit_path_arguments","","",null,[[["patharguments",4]]]],[5,"visit_path_segment","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type","","",null,[[["predicatetype",3]]]],[5,"visit_qself","","",null,[[["qself",3]]]],[5,"visit_range_limits","","",null,[[["rangelimits",4]]]],[5,"visit_receiver","","",null,[[["receiver",3]]]],[5,"visit_return_type","","",null,[[["returntype",4]]]],[5,"visit_signature","","",null,[[["signature",3]]]],[5,"visit_span","","",null,[[["span",3]]]],[5,"visit_stmt","","",null,[[["stmt",4]]]],[5,"visit_trait_bound","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type","","",null,[[["traititemtype",3]]]],[5,"visit_type","","",null,[[["type",4]]]],[5,"visit_type_array","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn","","",null,[[["typebarefn",3]]]],[5,"visit_type_group","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro","","",null,[[["typemacro",3]]]],[5,"visit_type_never","","",null,[[["typenever",3]]]],[5,"visit_type_param","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren","","",null,[[["typeparen",3]]]],[5,"visit_type_path","","",null,[[["typepath",3]]]],[5,"visit_type_ptr","","",null,[[["typeptr",3]]]],[5,"visit_type_reference","","",null,[[["typereference",3]]]],[5,"visit_type_slice","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple","","",null,[[["typetuple",3]]]],[5,"visit_un_op","","",null,[[["unop",4]]]],[5,"visit_use_glob","","",null,[[["useglob",3]]]],[5,"visit_use_group","","",null,[[["usegroup",3]]]],[5,"visit_use_name","","",null,[[["usename",3]]]],[5,"visit_use_path","","",null,[[["usepath",3]]]],[5,"visit_use_rename","","",null,[[["userename",3]]]],[5,"visit_use_tree","","",null,[[["usetree",4]]]],[5,"visit_variadic","","",null,[[["variadic",3]]]],[5,"visit_variant","","",null,[[["variant",3]]]],[5,"visit_vis_crate","","",null,[[["viscrate",3]]]],[5,"visit_vis_public","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted","","",null,[[["visrestricted",3]]]],[5,"visit_visibility","","",null,[[["visibility",4]]]],[5,"visit_where_clause","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate",4]]]],[0,"visit_mut","syn","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[8,"VisitMut","syn::visit_mut","Syntax tree traversal to mutate an exclusive borrow of a …",null,null],[11,"visit_abi_mut","","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[5,"visit_abi_mut","","",null,[[["abi",3]]]],[5,"visit_angle_bracketed_generic_arguments_mut","","",null,[[["anglebracketedgenericarguments",3]]]],[5,"visit_arm_mut","","",null,[[["arm",3]]]],[5,"visit_attr_style_mut","","",null,[[["attrstyle",4]]]],[5,"visit_attribute_mut","","",null,[[["attribute",3]]]],[5,"visit_bare_fn_arg_mut","","",null,[[["barefnarg",3]]]],[5,"visit_bin_op_mut","","",null,[[["binop",4]]]],[5,"visit_binding_mut","","",null,[[["binding",3]]]],[5,"visit_block_mut","","",null,[[["block",3]]]],[5,"visit_bound_lifetimes_mut","","",null,[[["boundlifetimes",3]]]],[5,"visit_const_param_mut","","",null,[[["constparam",3]]]],[5,"visit_constraint_mut","","",null,[[["constraint",3]]]],[5,"visit_data_mut","","",null,[[["data",4]]]],[5,"visit_data_enum_mut","","",null,[[["dataenum",3]]]],[5,"visit_data_struct_mut","","",null,[[["datastruct",3]]]],[5,"visit_data_union_mut","","",null,[[["dataunion",3]]]],[5,"visit_derive_input_mut","","",null,[[["deriveinput",3]]]],[5,"visit_expr_mut","","",null,[[["expr",4]]]],[5,"visit_expr_array_mut","","",null,[[["exprarray",3]]]],[5,"visit_expr_assign_mut","","",null,[[["exprassign",3]]]],[5,"visit_expr_assign_op_mut","","",null,[[["exprassignop",3]]]],[5,"visit_expr_async_mut","","",null,[[["exprasync",3]]]],[5,"visit_expr_await_mut","","",null,[[["exprawait",3]]]],[5,"visit_expr_binary_mut","","",null,[[["exprbinary",3]]]],[5,"visit_expr_block_mut","","",null,[[["exprblock",3]]]],[5,"visit_expr_box_mut","","",null,[[["exprbox",3]]]],[5,"visit_expr_break_mut","","",null,[[["exprbreak",3]]]],[5,"visit_expr_call_mut","","",null,[[["exprcall",3]]]],[5,"visit_expr_cast_mut","","",null,[[["exprcast",3]]]],[5,"visit_expr_closure_mut","","",null,[[["exprclosure",3]]]],[5,"visit_expr_continue_mut","","",null,[[["exprcontinue",3]]]],[5,"visit_expr_field_mut","","",null,[[["exprfield",3]]]],[5,"visit_expr_for_loop_mut","","",null,[[["exprforloop",3]]]],[5,"visit_expr_group_mut","","",null,[[["exprgroup",3]]]],[5,"visit_expr_if_mut","","",null,[[["exprif",3]]]],[5,"visit_expr_index_mut","","",null,[[["exprindex",3]]]],[5,"visit_expr_let_mut","","",null,[[["exprlet",3]]]],[5,"visit_expr_lit_mut","","",null,[[["exprlit",3]]]],[5,"visit_expr_loop_mut","","",null,[[["exprloop",3]]]],[5,"visit_expr_macro_mut","","",null,[[["exprmacro",3]]]],[5,"visit_expr_match_mut","","",null,[[["exprmatch",3]]]],[5,"visit_expr_method_call_mut","","",null,[[["exprmethodcall",3]]]],[5,"visit_expr_paren_mut","","",null,[[["exprparen",3]]]],[5,"visit_expr_path_mut","","",null,[[["exprpath",3]]]],[5,"visit_expr_range_mut","","",null,[[["exprrange",3]]]],[5,"visit_expr_reference_mut","","",null,[[["exprreference",3]]]],[5,"visit_expr_repeat_mut","","",null,[[["exprrepeat",3]]]],[5,"visit_expr_return_mut","","",null,[[["exprreturn",3]]]],[5,"visit_expr_struct_mut","","",null,[[["exprstruct",3]]]],[5,"visit_expr_try_mut","","",null,[[["exprtry",3]]]],[5,"visit_expr_try_block_mut","","",null,[[["exprtryblock",3]]]],[5,"visit_expr_tuple_mut","","",null,[[["exprtuple",3]]]],[5,"visit_expr_type_mut","","",null,[[["exprtype",3]]]],[5,"visit_expr_unary_mut","","",null,[[["exprunary",3]]]],[5,"visit_expr_unsafe_mut","","",null,[[["exprunsafe",3]]]],[5,"visit_expr_while_mut","","",null,[[["exprwhile",3]]]],[5,"visit_expr_yield_mut","","",null,[[["expryield",3]]]],[5,"visit_field_mut","","",null,[[["field",3]]]],[5,"visit_field_pat_mut","","",null,[[["fieldpat",3]]]],[5,"visit_field_value_mut","","",null,[[["fieldvalue",3]]]],[5,"visit_fields_mut","","",null,[[["fields",4]]]],[5,"visit_fields_named_mut","","",null,[[["fieldsnamed",3]]]],[5,"visit_fields_unnamed_mut","","",null,[[["fieldsunnamed",3]]]],[5,"visit_file_mut","","",null,[[["file",3]]]],[5,"visit_fn_arg_mut","","",null,[[["fnarg",4]]]],[5,"visit_foreign_item_mut","","",null,[[["foreignitem",4]]]],[5,"visit_foreign_item_fn_mut","","",null,[[["foreignitemfn",3]]]],[5,"visit_foreign_item_macro_mut","","",null,[[["foreignitemmacro",3]]]],[5,"visit_foreign_item_static_mut","","",null,[[["foreignitemstatic",3]]]],[5,"visit_foreign_item_type_mut","","",null,[[["foreignitemtype",3]]]],[5,"visit_generic_argument_mut","","",null,[[["genericargument",4]]]],[5,"visit_generic_method_argument_mut","","",null,[[["genericmethodargument",4]]]],[5,"visit_generic_param_mut","","",null,[[["genericparam",4]]]],[5,"visit_generics_mut","","",null,[[["generics",3]]]],[5,"visit_ident_mut","","",null,[[["ident",3]]]],[5,"visit_impl_item_mut","","",null,[[["implitem",4]]]],[5,"visit_impl_item_const_mut","","",null,[[["implitemconst",3]]]],[5,"visit_impl_item_macro_mut","","",null,[[["implitemmacro",3]]]],[5,"visit_impl_item_method_mut","","",null,[[["implitemmethod",3]]]],[5,"visit_impl_item_type_mut","","",null,[[["implitemtype",3]]]],[5,"visit_index_mut","","",null,[[["index",3]]]],[5,"visit_item_mut","","",null,[[["item",4]]]],[5,"visit_item_const_mut","","",null,[[["itemconst",3]]]],[5,"visit_item_enum_mut","","",null,[[["itemenum",3]]]],[5,"visit_item_extern_crate_mut","","",null,[[["itemexterncrate",3]]]],[5,"visit_item_fn_mut","","",null,[[["itemfn",3]]]],[5,"visit_item_foreign_mod_mut","","",null,[[["itemforeignmod",3]]]],[5,"visit_item_impl_mut","","",null,[[["itemimpl",3]]]],[5,"visit_item_macro_mut","","",null,[[["itemmacro",3]]]],[5,"visit_item_macro2_mut","","",null,[[["itemmacro2",3]]]],[5,"visit_item_mod_mut","","",null,[[["itemmod",3]]]],[5,"visit_item_static_mut","","",null,[[["itemstatic",3]]]],[5,"visit_item_struct_mut","","",null,[[["itemstruct",3]]]],[5,"visit_item_trait_mut","","",null,[[["itemtrait",3]]]],[5,"visit_item_trait_alias_mut","","",null,[[["itemtraitalias",3]]]],[5,"visit_item_type_mut","","",null,[[["itemtype",3]]]],[5,"visit_item_union_mut","","",null,[[["itemunion",3]]]],[5,"visit_item_use_mut","","",null,[[["itemuse",3]]]],[5,"visit_label_mut","","",null,[[["label",3]]]],[5,"visit_lifetime_mut","","",null,[[["lifetime",3]]]],[5,"visit_lifetime_def_mut","","",null,[[["lifetimedef",3]]]],[5,"visit_lit_mut","","",null,[[["lit",4]]]],[5,"visit_lit_bool_mut","","",null,[[["litbool",3]]]],[5,"visit_lit_byte_mut","","",null,[[["litbyte",3]]]],[5,"visit_lit_byte_str_mut","","",null,[[["litbytestr",3]]]],[5,"visit_lit_char_mut","","",null,[[["litchar",3]]]],[5,"visit_lit_float_mut","","",null,[[["litfloat",3]]]],[5,"visit_lit_int_mut","","",null,[[["litint",3]]]],[5,"visit_lit_str_mut","","",null,[[["litstr",3]]]],[5,"visit_local_mut","","",null,[[["local",3]]]],[5,"visit_macro_mut","","",null,[[["macro",3]]]],[5,"visit_macro_delimiter_mut","","",null,[[["macrodelimiter",4]]]],[5,"visit_member_mut","","",null,[[["member",4]]]],[5,"visit_meta_mut","","",null,[[["meta",4]]]],[5,"visit_meta_list_mut","","",null,[[["metalist",3]]]],[5,"visit_meta_name_value_mut","","",null,[[["metanamevalue",3]]]],[5,"visit_method_turbofish_mut","","",null,[[["methodturbofish",3]]]],[5,"visit_nested_meta_mut","","",null,[[["nestedmeta",4]]]],[5,"visit_parenthesized_generic_arguments_mut","","",null,[[["parenthesizedgenericarguments",3]]]],[5,"visit_pat_mut","","",null,[[["pat",4]]]],[5,"visit_pat_box_mut","","",null,[[["patbox",3]]]],[5,"visit_pat_ident_mut","","",null,[[["patident",3]]]],[5,"visit_pat_lit_mut","","",null,[[["patlit",3]]]],[5,"visit_pat_macro_mut","","",null,[[["patmacro",3]]]],[5,"visit_pat_or_mut","","",null,[[["pator",3]]]],[5,"visit_pat_path_mut","","",null,[[["patpath",3]]]],[5,"visit_pat_range_mut","","",null,[[["patrange",3]]]],[5,"visit_pat_reference_mut","","",null,[[["patreference",3]]]],[5,"visit_pat_rest_mut","","",null,[[["patrest",3]]]],[5,"visit_pat_slice_mut","","",null,[[["patslice",3]]]],[5,"visit_pat_struct_mut","","",null,[[["patstruct",3]]]],[5,"visit_pat_tuple_mut","","",null,[[["pattuple",3]]]],[5,"visit_pat_tuple_struct_mut","","",null,[[["pattuplestruct",3]]]],[5,"visit_pat_type_mut","","",null,[[["pattype",3]]]],[5,"visit_pat_wild_mut","","",null,[[["patwild",3]]]],[5,"visit_path_mut","","",null,[[["path",3]]]],[5,"visit_path_arguments_mut","","",null,[[["patharguments",4]]]],[5,"visit_path_segment_mut","","",null,[[["pathsegment",3]]]],[5,"visit_predicate_eq_mut","","",null,[[["predicateeq",3]]]],[5,"visit_predicate_lifetime_mut","","",null,[[["predicatelifetime",3]]]],[5,"visit_predicate_type_mut","","",null,[[["predicatetype",3]]]],[5,"visit_qself_mut","","",null,[[["qself",3]]]],[5,"visit_range_limits_mut","","",null,[[["rangelimits",4]]]],[5,"visit_receiver_mut","","",null,[[["receiver",3]]]],[5,"visit_return_type_mut","","",null,[[["returntype",4]]]],[5,"visit_signature_mut","","",null,[[["signature",3]]]],[5,"visit_span_mut","","",null,[[["span",3]]]],[5,"visit_stmt_mut","","",null,[[["stmt",4]]]],[5,"visit_trait_bound_mut","","",null,[[["traitbound",3]]]],[5,"visit_trait_bound_modifier_mut","","",null,[[["traitboundmodifier",4]]]],[5,"visit_trait_item_mut","","",null,[[["traititem",4]]]],[5,"visit_trait_item_const_mut","","",null,[[["traititemconst",3]]]],[5,"visit_trait_item_macro_mut","","",null,[[["traititemmacro",3]]]],[5,"visit_trait_item_method_mut","","",null,[[["traititemmethod",3]]]],[5,"visit_trait_item_type_mut","","",null,[[["traititemtype",3]]]],[5,"visit_type_mut","","",null,[[["type",4]]]],[5,"visit_type_array_mut","","",null,[[["typearray",3]]]],[5,"visit_type_bare_fn_mut","","",null,[[["typebarefn",3]]]],[5,"visit_type_group_mut","","",null,[[["typegroup",3]]]],[5,"visit_type_impl_trait_mut","","",null,[[["typeimpltrait",3]]]],[5,"visit_type_infer_mut","","",null,[[["typeinfer",3]]]],[5,"visit_type_macro_mut","","",null,[[["typemacro",3]]]],[5,"visit_type_never_mut","","",null,[[["typenever",3]]]],[5,"visit_type_param_mut","","",null,[[["typeparam",3]]]],[5,"visit_type_param_bound_mut","","",null,[[["typeparambound",4]]]],[5,"visit_type_paren_mut","","",null,[[["typeparen",3]]]],[5,"visit_type_path_mut","","",null,[[["typepath",3]]]],[5,"visit_type_ptr_mut","","",null,[[["typeptr",3]]]],[5,"visit_type_reference_mut","","",null,[[["typereference",3]]]],[5,"visit_type_slice_mut","","",null,[[["typeslice",3]]]],[5,"visit_type_trait_object_mut","","",null,[[["typetraitobject",3]]]],[5,"visit_type_tuple_mut","","",null,[[["typetuple",3]]]],[5,"visit_un_op_mut","","",null,[[["unop",4]]]],[5,"visit_use_glob_mut","","",null,[[["useglob",3]]]],[5,"visit_use_group_mut","","",null,[[["usegroup",3]]]],[5,"visit_use_name_mut","","",null,[[["usename",3]]]],[5,"visit_use_path_mut","","",null,[[["usepath",3]]]],[5,"visit_use_rename_mut","","",null,[[["userename",3]]]],[5,"visit_use_tree_mut","","",null,[[["usetree",4]]]],[5,"visit_variadic_mut","","",null,[[["variadic",3]]]],[5,"visit_variant_mut","","",null,[[["variant",3]]]],[5,"visit_vis_crate_mut","","",null,[[["viscrate",3]]]],[5,"visit_vis_public_mut","","",null,[[["vispublic",3]]]],[5,"visit_vis_restricted_mut","","",null,[[["visrestricted",3]]]],[5,"visit_visibility_mut","","",null,[[["visibility",4]]]],[5,"visit_where_clause_mut","","",null,[[["whereclause",3]]]],[5,"visit_where_predicate_mut","","",null,[[["wherepredicate",4]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a …",null,null],[0,"discouraged","syn::parse","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the <code>ParseStream</code> API to support speculative …",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked …",111,[[]]],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide …",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be …",null,null],[10,"parse","","",112,[[["parsestream",6]],["result",6]]],[6,"ParseStream","","Input to a Syn parser function.",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[11,"error","","Triggers an error at the current position of the parse …",113,[[["display",8]],["error",3]]],[11,"parse","","Parses a syntax tree node of type <code>T</code>, advancing the …",114,[[],[["parse",8],["result",6]]]],[11,"call","","Calls the given parser function to parse a syntax tree …",114,[[],["result",6]]],[11,"peek","","Looks at the next token in the parse stream to determine …",114,[[["peek",8]],["bool",15]]],[11,"peek2","","Looks at the second-next token in the parse stream.",114,[[["peek",8]],["bool",15]]],[11,"peek3","","Looks at the third-next token in the parse stream.",114,[[["peek",8]],["bool",15]]],[11,"parse_terminated","","Parses zero or more occurrences of <code>T</code> separated by …",114,[[],[["result",6],["punctuated",3]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",114,[[],["bool",15]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this …",114,[[],["lookahead1",3]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either …",114,[[]]],[11,"error","","Triggers an error at the current position of the parse …",114,[[["display",8]],["error",3]]],[11,"step","","Speculatively parses tokens from this parse stream, …",114,[[],["result",6]]],[11,"span","","Returns the <code>Span</code> of the next token in the parse stream, or…",114,[[],["span",3]]],[11,"cursor","","Provides low-level access to the token representation …",114,[[],["cursor",3]]],[8,"Parser","","Parser that can parse Rust tokens into a particular …",null,null],[16,"Output","","",115,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",115,[[["tokenstream",3]],["result",6]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree …",115,[[["tokenstream",3]],["result",6]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",115,[[["str",15]],["result",6]]],[3,"Nothing","","An empty syntax tree node that consumes no tokens when …",null,null],[11,"new","","Usually the <code>ParseStream::error</code> method will be used …",116,[[["display",8],["span",3]]]],[11,"new_spanned","","Creates an error with the specified message spanning the …",116,[[["display",8],["totokens",8]]]],[11,"span","","The source location of the error.",116,[[],["span",3]]],[11,"to_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",116,[[],["tokenstream",3]]],[11,"into_compile_error","","Render the error as an invocation of <code>compile_error!</code>.",116,[[],["tokenstream",3]]],[11,"combine","","Add another error message to self such that when …",116,[[["error",3]]]],[3,"Ident","syn","A word of Rust code, which may be a keyword or legal …",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item …",null,null],[13,"Outer","","",117,null],[13,"Inner","","",117,null],[3,"Attribute","","An attribute like <code>#[repr(transparent)]</code>.",null,null],[12,"pound_token","","",118,null],[12,"style","","",118,null],[12,"bracket_token","","",118,null],[12,"path","","",118,null],[12,"tokens","","",118,null],[6,"AttributeArgs","","Conventional argument type associated with an invocation …",null,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",119,null],[13,"List","","A structured list within an attribute, like …",119,null],[13,"NameValue","","A name-value pair within an attribute, like …",119,null],[3,"MetaList","","A structured list within an attribute, like …",null,null],[12,"path","","",120,null],[12,"paren_token","","",120,null],[12,"nested","","",120,null],[3,"MetaNameValue","","A name-value pair within an attribute, like …",null,null],[12,"path","","",121,null],[12,"eq_token","","",121,null],[12,"lit","","",121,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the <code>Copy</code> in <code>#[derive(Copy)]</code> …",122,null],[13,"Lit","","A Rust literal, like the <code>\\\"new_name\\\"</code> in …",122,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",123,null],[12,"vis","","Visibility of the field.",123,null],[12,"ident","","Name of the field, if any.",123,null],[12,"colon_token","","",123,null],[12,"ty","","Type of the field.",123,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as …",124,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as …",124,null],[13,"Unit","","Unit struct or unit variant such as <code>None</code>.",124,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as …",null,null],[12,"brace_token","","",125,null],[12,"named","","",125,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as …",null,null],[12,"paren_token","","",126,null],[12,"unnamed","","",126,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",127,null],[12,"ident","","Name of the variant.",127,null],[12,"fields","","Content stored in the variant.",127,null],[12,"discriminant","","Explicit discriminant: <code>Variant = 1</code>",127,null],[3,"VisCrate","","A crate-level visibility: <code>crate</code>.",null,null],[12,"crate_token","","",128,null],[3,"VisPublic","","A public visibility level: <code>pub</code>.",null,null],[12,"pub_token","","",129,null],[3,"VisRestricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",null,null],[12,"pub_token","","",130,null],[12,"paren_token","","",130,null],[12,"in_token","","",130,null],[12,"path","","",130,null],[4,"Visibility","","The visibility level of an item: inherited or <code>pub</code> or …",null,null],[13,"Public","","A public visibility level: <code>pub</code>.",131,null],[13,"Crate","","A crate-level visibility: <code>crate</code>.",131,null],[13,"Restricted","","A visibility level restricted to some path: <code>pub(self)</code> or …",131,null],[13,"Inherited","","An inherited visibility, which usually means private.",131,null],[3,"Arm","","One arm of a <code>match</code> expression: <code>0...10 => { return true; }</code>.",null,null],[12,"attrs","","",132,null],[12,"pat","","",132,null],[12,"guard","","",132,null],[12,"fat_arrow_token","","",132,null],[12,"body","","",132,null],[12,"comma","","",132,null],[3,"FieldValue","","A field-value pair in a struct literal.",null,null],[12,"attrs","","Attributes tagged on the field.",133,null],[12,"member","","Name or index of the field.",133,null],[12,"colon_token","","The colon in <code>Struct { x: x }</code>. If written in shorthand like…",133,null],[12,"expr","","Value of the field.",133,null],[4,"GenericMethodArgument","","An individual generic argument to a method, like <code>T</code>.",null,null],[13,"Type","","A type argument.",134,null],[13,"Const","","A const expression. Must be inside of a block.",134,null],[3,"Label","","A lifetime labeling a <code>for</code>, <code>while</code>, or <code>loop</code>.",null,null],[12,"name","","",135,null],[12,"colon_token","","",135,null],[3,"MethodTurbofish","","The <code>::<></code> explicit type parameters passed to a method call:…",null,null],[12,"colon2_token","","",136,null],[12,"lt_token","","",136,null],[12,"args","","",136,null],[12,"gt_token","","",136,null],[4,"RangeLimits","","Limit types of a range, inclusive or exclusive.",null,null],[13,"HalfOpen","","Inclusive at the beginning, exclusive at the end.",137,null],[13,"Closed","","Inclusive at the beginning and end.",137,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: <code>[a, b, c, d]</code>.",138,null],[13,"Assign","","An assignment expression: <code>a = compute()</code>.",138,null],[13,"AssignOp","","A compound assignment expression: <code>counter += 1</code>.",138,null],[13,"Async","","An async block: <code>async { ... }</code>.",138,null],[13,"Await","","An await expression: <code>fut.await</code>.",138,null],[13,"Binary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",138,null],[13,"Block","","A blocked scope: <code>{ ... }</code>.",138,null],[13,"Box","","A box expression: <code>box f</code>.",138,null],[13,"Break","","A <code>break</code>, with an optional label to break and an optional …",138,null],[13,"Call","","A function call expression: <code>invoke(a, b)</code>.",138,null],[13,"Cast","","A cast expression: <code>foo as f64</code>.",138,null],[13,"Closure","","A closure expression: <code>|a, b| a + b</code>.",138,null],[13,"Continue","","A <code>continue</code>, with an optional label.",138,null],[13,"Field","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",138,null],[13,"ForLoop","","A for loop: <code>for pat in expr { ... }</code>.",138,null],[13,"Group","","An expression contained within invisible delimiters.",138,null],[13,"If","","An <code>if</code> expression with an optional <code>else</code> block: …",138,null],[13,"Index","","A square bracketed indexing expression: <code>vector[2]</code>.",138,null],[13,"Let","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",138,null],[13,"Lit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",138,null],[13,"Loop","","Conditionless loop: <code>loop { ... }</code>.",138,null],[13,"Macro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",138,null],[13,"Match","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",138,null],[13,"MethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",138,null],[13,"Paren","","A parenthesized expression: <code>(a + b)</code>.",138,null],[13,"Path","","A path like <code>std::mem::replace</code> possibly containing generic …",138,null],[13,"Range","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",138,null],[13,"Reference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",138,null],[13,"Repeat","","An array literal constructed from one repeated element: …",138,null],[13,"Return","","A <code>return</code>, with an optional value to be returned.",138,null],[13,"Struct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",138,null],[13,"Try","","A try-expression: <code>expr?</code>.",138,null],[13,"TryBlock","","A try block: <code>try { ... }</code>.",138,null],[13,"Tuple","","A tuple expression: <code>(a, b, c, d)</code>.",138,null],[13,"Type","","A type ascription expression: <code>foo: f64</code>.",138,null],[13,"Unary","","A unary operation: <code>!x</code>, <code>*x</code>.",138,null],[13,"Unsafe","","An unsafe block: <code>unsafe { ... }</code>.",138,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",138,null],[13,"While","","A while loop: <code>while expr { ... }</code>.",138,null],[13,"Yield","","A yield expression: <code>yield expr</code>.",138,null],[3,"ExprArray","","A slice literal expression: <code>[a, b, c, d]</code>.",null,null],[12,"attrs","","",139,null],[12,"bracket_token","","",139,null],[12,"elems","","",139,null],[3,"ExprAssign","","An assignment expression: <code>a = compute()</code>.",null,null],[12,"attrs","","",140,null],[12,"left","","",140,null],[12,"eq_token","","",140,null],[12,"right","","",140,null],[3,"ExprAssignOp","","A compound assignment expression: <code>counter += 1</code>.",null,null],[12,"attrs","","",141,null],[12,"left","","",141,null],[12,"op","","",141,null],[12,"right","","",141,null],[3,"ExprAsync","","An async block: <code>async { ... }</code>.",null,null],[12,"attrs","","",142,null],[12,"async_token","","",142,null],[12,"capture","","",142,null],[12,"block","","",142,null],[3,"ExprAwait","","An await expression: <code>fut.await</code>.",null,null],[12,"attrs","","",143,null],[12,"base","","",143,null],[12,"dot_token","","",143,null],[12,"await_token","","",143,null],[3,"ExprBinary","","A binary operation: <code>a + b</code>, <code>a * b</code>.",null,null],[12,"attrs","","",144,null],[12,"left","","",144,null],[12,"op","","",144,null],[12,"right","","",144,null],[3,"ExprBlock","","A blocked scope: <code>{ ... }</code>.",null,null],[12,"attrs","","",145,null],[12,"label","","",145,null],[12,"block","","",145,null],[3,"ExprBox","","A box expression: <code>box f</code>.",null,null],[12,"attrs","","",146,null],[12,"box_token","","",146,null],[12,"expr","","",146,null],[3,"ExprBreak","","A <code>break</code>, with an optional label to break and an optional …",null,null],[12,"attrs","","",147,null],[12,"break_token","","",147,null],[12,"label","","",147,null],[12,"expr","","",147,null],[3,"ExprCall","","A function call expression: <code>invoke(a, b)</code>.",null,null],[12,"attrs","","",148,null],[12,"func","","",148,null],[12,"paren_token","","",148,null],[12,"args","","",148,null],[3,"ExprCast","","A cast expression: <code>foo as f64</code>.",null,null],[12,"attrs","","",149,null],[12,"expr","","",149,null],[12,"as_token","","",149,null],[12,"ty","","",149,null],[3,"ExprClosure","","A closure expression: <code>|a, b| a + b</code>.",null,null],[12,"attrs","","",150,null],[12,"asyncness","","",150,null],[12,"movability","","",150,null],[12,"capture","","",150,null],[12,"or1_token","","",150,null],[12,"inputs","","",150,null],[12,"or2_token","","",150,null],[12,"output","","",150,null],[12,"body","","",150,null],[3,"ExprContinue","","A <code>continue</code>, with an optional label.",null,null],[12,"attrs","","",151,null],[12,"continue_token","","",151,null],[12,"label","","",151,null],[3,"ExprField","","Access of a named struct field (<code>obj.k</code>) or unnamed tuple …",null,null],[12,"attrs","","",152,null],[12,"base","","",152,null],[12,"dot_token","","",152,null],[12,"member","","",152,null],[3,"ExprForLoop","","A for loop: <code>for pat in expr { ... }</code>.",null,null],[12,"attrs","","",153,null],[12,"label","","",153,null],[12,"for_token","","",153,null],[12,"pat","","",153,null],[12,"in_token","","",153,null],[12,"expr","","",153,null],[12,"body","","",153,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[12,"attrs","","",154,null],[12,"group_token","","",154,null],[12,"expr","","",154,null],[3,"ExprIf","","An <code>if</code> expression with an optional <code>else</code> block: …",null,null],[12,"attrs","","",155,null],[12,"if_token","","",155,null],[12,"cond","","",155,null],[12,"then_branch","","",155,null],[12,"else_branch","","",155,null],[3,"ExprIndex","","A square bracketed indexing expression: <code>vector[2]</code>.",null,null],[12,"attrs","","",156,null],[12,"expr","","",156,null],[12,"bracket_token","","",156,null],[12,"index","","",156,null],[3,"ExprLet","","A <code>let</code> guard: <code>let Some(x) = opt</code>.",null,null],[12,"attrs","","",157,null],[12,"let_token","","",157,null],[12,"pat","","",157,null],[12,"eq_token","","",157,null],[12,"expr","","",157,null],[3,"ExprLit","","A literal in place of an expression: <code>1</code>, <code>\\\"foo\\\"</code>.",null,null],[12,"attrs","","",158,null],[12,"lit","","",158,null],[3,"ExprLoop","","Conditionless loop: <code>loop { ... }</code>.",null,null],[12,"attrs","","",159,null],[12,"label","","",159,null],[12,"loop_token","","",159,null],[12,"body","","",159,null],[3,"ExprMacro","","A macro invocation expression: <code>format!(\\\"{}\\\", q)</code>.",null,null],[12,"attrs","","",160,null],[12,"mac","","",160,null],[3,"ExprMatch","","A <code>match</code> expression: <code>match n { Some(n) => {}, None => {} }</code>.",null,null],[12,"attrs","","",161,null],[12,"match_token","","",161,null],[12,"expr","","",161,null],[12,"brace_token","","",161,null],[12,"arms","","",161,null],[3,"ExprMethodCall","","A method call expression: <code>x.foo::<T>(a, b)</code>.",null,null],[12,"attrs","","",162,null],[12,"receiver","","",162,null],[12,"dot_token","","",162,null],[12,"method","","",162,null],[12,"turbofish","","",162,null],[12,"paren_token","","",162,null],[12,"args","","",162,null],[3,"ExprParen","","A parenthesized expression: <code>(a + b)</code>.",null,null],[12,"attrs","","",163,null],[12,"paren_token","","",163,null],[12,"expr","","",163,null],[3,"ExprPath","","A path like <code>std::mem::replace</code> possibly containing generic …",null,null],[12,"attrs","","",164,null],[12,"qself","","",164,null],[12,"path","","",164,null],[3,"ExprRange","","A range expression: <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>.",null,null],[12,"attrs","","",165,null],[12,"from","","",165,null],[12,"limits","","",165,null],[12,"to","","",165,null],[3,"ExprReference","","A referencing operation: <code>&a</code> or <code>&mut a</code>.",null,null],[12,"attrs","","",166,null],[12,"and_token","","",166,null],[12,"raw","","",166,null],[12,"mutability","","",166,null],[12,"expr","","",166,null],[3,"ExprRepeat","","An array literal constructed from one repeated element: …",null,null],[12,"attrs","","",167,null],[12,"bracket_token","","",167,null],[12,"expr","","",167,null],[12,"semi_token","","",167,null],[12,"len","","",167,null],[3,"ExprReturn","","A <code>return</code>, with an optional value to be returned.",null,null],[12,"attrs","","",168,null],[12,"return_token","","",168,null],[12,"expr","","",168,null],[3,"ExprStruct","","A struct literal expression: <code>Point { x: 1, y: 1 }</code>.",null,null],[12,"attrs","","",169,null],[12,"path","","",169,null],[12,"brace_token","","",169,null],[12,"fields","","",169,null],[12,"dot2_token","","",169,null],[12,"rest","","",169,null],[3,"ExprTry","","A try-expression: <code>expr?</code>.",null,null],[12,"attrs","","",170,null],[12,"expr","","",170,null],[12,"question_token","","",170,null],[3,"ExprTryBlock","","A try block: <code>try { ... }</code>.",null,null],[12,"attrs","","",171,null],[12,"try_token","","",171,null],[12,"block","","",171,null],[3,"ExprTuple","","A tuple expression: <code>(a, b, c, d)</code>.",null,null],[12,"attrs","","",172,null],[12,"paren_token","","",172,null],[12,"elems","","",172,null],[3,"ExprType","","A type ascription expression: <code>foo: f64</code>.",null,null],[12,"attrs","","",173,null],[12,"expr","","",173,null],[12,"colon_token","","",173,null],[12,"ty","","",173,null],[3,"ExprUnary","","A unary operation: <code>!x</code>, <code>*x</code>.",null,null],[12,"attrs","","",174,null],[12,"op","","",174,null],[12,"expr","","",174,null],[3,"ExprUnsafe","","An unsafe block: <code>unsafe { ... }</code>.",null,null],[12,"attrs","","",175,null],[12,"unsafe_token","","",175,null],[12,"block","","",175,null],[3,"ExprWhile","","A while loop: <code>while expr { ... }</code>.",null,null],[12,"attrs","","",176,null],[12,"label","","",176,null],[12,"while_token","","",176,null],[12,"cond","","",176,null],[12,"body","","",176,null],[3,"ExprYield","","A yield expression: <code>yield expr</code>.",null,null],[12,"attrs","","",177,null],[12,"yield_token","","",177,null],[12,"expr","","",177,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",178,null],[12,"span","","",178,null],[4,"Member","","A struct or tuple struct field accessed in a struct …",null,null],[13,"Named","","A named field like <code>self.x</code>.",179,null],[13,"Unnamed","","An unnamed field like <code>self.0</code>.",179,null],[3,"BoundLifetimes","","A set of bound lifetimes: <code>for<\'a, \'b, \'c></code>.",null,null],[12,"for_token","","",180,null],[12,"lt_token","","",180,null],[12,"lifetimes","","",180,null],[12,"gt_token","","",180,null],[3,"ConstParam","","A const generic parameter: <code>const LENGTH: usize</code>.",null,null],[12,"attrs","","",181,null],[12,"const_token","","",181,null],[12,"ident","","",181,null],[12,"colon_token","","",181,null],[12,"ty","","",181,null],[12,"eq_token","","",181,null],[12,"default","","",181,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: …",null,null],[13,"Type","","A generic type parameter: <code>T: Into<String></code>.",182,null],[13,"Lifetime","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",182,null],[13,"Const","","A const generic parameter: <code>const LENGTH: usize</code>.",182,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration …",null,null],[12,"lt_token","","",183,null],[12,"params","","",183,null],[12,"gt_token","","",183,null],[12,"where_clause","","",183,null],[3,"LifetimeDef","","A lifetime definition: <code>\'a: \'b + \'c + \'d</code>.",null,null],[12,"attrs","","",184,null],[12,"lifetime","","",184,null],[12,"colon_token","","",184,null],[12,"bounds","","",184,null],[3,"PredicateEq","","An equality predicate in a <code>where</code> clause (unsupported).",null,null],[12,"lhs_ty","","",185,null],[12,"eq_token","","",185,null],[12,"rhs_ty","","",185,null],[3,"PredicateLifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",null,null],[12,"lifetime","","",186,null],[12,"colon_token","","",186,null],[12,"bounds","","",186,null],[3,"PredicateType","","A type predicate in a <code>where</code> clause: …",null,null],[12,"lifetimes","","Any lifetimes from a <code>for</code> binding",187,null],[12,"bounded_ty","","The type being bounded",187,null],[12,"colon_token","","",187,null],[12,"bounds","","Trait and lifetime bounds (<code>Clone+Send+\'static</code>)",187,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",188,null],[12,"modifier","","",188,null],[12,"lifetimes","","The <code>for<\'a></code> in <code>for<\'a> Foo<&\'a T></code>",188,null],[12,"path","","The <code>Foo<&\'a T></code> in <code>for<\'a> Foo<&\'a T></code>",188,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the <code>?</code>…",null,null],[13,"None","","",189,null],[13,"Maybe","","",189,null],[3,"TypeParam","","A generic type parameter: <code>T: Into<String></code>.",null,null],[12,"attrs","","",190,null],[12,"ident","","",190,null],[12,"colon_token","","",190,null],[12,"bounds","","",190,null],[12,"eq_token","","",190,null],[12,"default","","",190,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",191,null],[13,"Lifetime","","",191,null],[3,"WhereClause","","A <code>where</code> clause in a definition: …",null,null],[12,"where_token","","",192,null],[12,"predicates","","",192,null],[4,"WherePredicate","","A single predicate in a <code>where</code> clause: <code>T: Deserialize<\'de></code>.",null,null],[13,"Type","","A type predicate in a <code>where</code> clause: …",193,null],[13,"Lifetime","","A lifetime predicate in a <code>where</code> clause: <code>\'a: \'b + \'c</code>.",193,null],[13,"Eq","","An equality predicate in a <code>where</code> clause (unsupported).",193,null],[3,"ImplGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[3,"Turbofish","","Returned by <code>TypeGenerics::as_turbofish</code>.",null,null],[3,"TypeGenerics","","Returned by <code>Generics::split_for_impl</code>.",null,null],[4,"FnArg","","An argument in a function signature: the <code>n: usize</code> in …",null,null],[13,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",194,null],[13,"Typed","","A function argument accepted by pattern and type.",194,null],[4,"ForeignItem","","An item within an <code>extern</code> block.",null,null],[13,"Fn","","A foreign function in an <code>extern</code> block.",195,null],[13,"Static","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",195,null],[13,"Type","","A foreign type in an <code>extern</code> block: <code>type void</code>.",195,null],[13,"Macro","","A macro invocation within an extern block.",195,null],[13,"Verbatim","","Tokens in an <code>extern</code> block not interpreted by Syn.",195,null],[3,"ForeignItemFn","","A foreign function in an <code>extern</code> block.",null,null],[12,"attrs","","",196,null],[12,"vis","","",196,null],[12,"sig","","",196,null],[12,"semi_token","","",196,null],[3,"ForeignItemMacro","","A macro invocation within an extern block.",null,null],[12,"attrs","","",197,null],[12,"mac","","",197,null],[12,"semi_token","","",197,null],[3,"ForeignItemStatic","","A foreign static item in an <code>extern</code> block: <code>static ext: u8</code>.",null,null],[12,"attrs","","",198,null],[12,"vis","","",198,null],[12,"static_token","","",198,null],[12,"mutability","","",198,null],[12,"ident","","",198,null],[12,"colon_token","","",198,null],[12,"ty","","",198,null],[12,"semi_token","","",198,null],[3,"ForeignItemType","","A foreign type in an <code>extern</code> block: <code>type void</code>.",null,null],[12,"attrs","","",199,null],[12,"vis","","",199,null],[12,"type_token","","",199,null],[12,"ident","","",199,null],[12,"semi_token","","",199,null],[4,"ImplItem","","An item within an impl block.",null,null],[13,"Const","","An associated constant within an impl block.",200,null],[13,"Method","","A method within an impl block.",200,null],[13,"Type","","An associated type within an impl block.",200,null],[13,"Macro","","A macro invocation within an impl block.",200,null],[13,"Verbatim","","Tokens within an impl block not interpreted by Syn.",200,null],[3,"ImplItemConst","","An associated constant within an impl block.",null,null],[12,"attrs","","",201,null],[12,"vis","","",201,null],[12,"defaultness","","",201,null],[12,"const_token","","",201,null],[12,"ident","","",201,null],[12,"colon_token","","",201,null],[12,"ty","","",201,null],[12,"eq_token","","",201,null],[12,"expr","","",201,null],[12,"semi_token","","",201,null],[3,"ImplItemMacro","","A macro invocation within an impl block.",null,null],[12,"attrs","","",202,null],[12,"mac","","",202,null],[12,"semi_token","","",202,null],[3,"ImplItemMethod","","A method within an impl block.",null,null],[12,"attrs","","",203,null],[12,"vis","","",203,null],[12,"defaultness","","",203,null],[12,"sig","","",203,null],[12,"block","","",203,null],[3,"ImplItemType","","An associated type within an impl block.",null,null],[12,"attrs","","",204,null],[12,"vis","","",204,null],[12,"defaultness","","",204,null],[12,"type_token","","",204,null],[12,"ident","","",204,null],[12,"generics","","",204,null],[12,"eq_token","","",204,null],[12,"ty","","",204,null],[12,"semi_token","","",204,null],[4,"Item","","Things that can appear directly inside of a module or …",null,null],[13,"Const","","A constant item: <code>const MAX: u16 = 65535</code>.",205,null],[13,"Enum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",205,null],[13,"ExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",205,null],[13,"Fn","","A free-standing function: …",205,null],[13,"ForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",205,null],[13,"Impl","","An impl block providing trait or associated items: …",205,null],[13,"Macro","","A macro invocation, which includes <code>macro_rules!</code> …",205,null],[13,"Macro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",205,null],[13,"Mod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",205,null],[13,"Static","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",205,null],[13,"Struct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",205,null],[13,"Trait","","A trait definition: <code>pub trait Iterator { ... }</code>.",205,null],[13,"TraitAlias","","A trait alias: …",205,null],[13,"Type","","A type alias: …",205,null],[13,"Union","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",205,null],[13,"Use","","A use declaration: <code>use std::collections::HashMap</code>.",205,null],[13,"Verbatim","","Tokens forming an item not interpreted by Syn.",205,null],[3,"ItemConst","","A constant item: <code>const MAX: u16 = 65535</code>.",null,null],[12,"attrs","","",206,null],[12,"vis","","",206,null],[12,"const_token","","",206,null],[12,"ident","","",206,null],[12,"colon_token","","",206,null],[12,"ty","","",206,null],[12,"eq_token","","",206,null],[12,"expr","","",206,null],[12,"semi_token","","",206,null],[3,"ItemEnum","","An enum definition: <code>enum Foo<A, B> { A(A), B(B) }</code>.",null,null],[12,"attrs","","",207,null],[12,"vis","","",207,null],[12,"enum_token","","",207,null],[12,"ident","","",207,null],[12,"generics","","",207,null],[12,"brace_token","","",207,null],[12,"variants","","",207,null],[3,"ItemExternCrate","","An <code>extern crate</code> item: <code>extern crate serde</code>.",null,null],[12,"attrs","","",208,null],[12,"vis","","",208,null],[12,"extern_token","","",208,null],[12,"crate_token","","",208,null],[12,"ident","","",208,null],[12,"rename","","",208,null],[12,"semi_token","","",208,null],[3,"ItemFn","","A free-standing function: …",null,null],[12,"attrs","","",209,null],[12,"vis","","",209,null],[12,"sig","","",209,null],[12,"block","","",209,null],[3,"ItemForeignMod","","A block of foreign items: <code>extern \\\"C\\\" { ... }</code>.",null,null],[12,"attrs","","",210,null],[12,"abi","","",210,null],[12,"brace_token","","",210,null],[12,"items","","",210,null],[3,"ItemImpl","","An impl block providing trait or associated items: …",null,null],[12,"attrs","","",211,null],[12,"defaultness","","",211,null],[12,"unsafety","","",211,null],[12,"impl_token","","",211,null],[12,"generics","","",211,null],[12,"trait_","","Trait this impl implements.",211,null],[12,"self_ty","","The Self type of the impl.",211,null],[12,"brace_token","","",211,null],[12,"items","","",211,null],[3,"ItemMacro","","A macro invocation, which includes <code>macro_rules!</code> …",null,null],[12,"attrs","","",212,null],[12,"ident","","The <code>example</code> in <code>macro_rules! example { ... }</code>.",212,null],[12,"mac","","",212,null],[12,"semi_token","","",212,null],[3,"ItemMacro2","","A 2.0-style declarative macro introduced by the <code>macro</code> …",null,null],[12,"attrs","","",213,null],[12,"vis","","",213,null],[12,"macro_token","","",213,null],[12,"ident","","",213,null],[12,"rules","","",213,null],[3,"ItemMod","","A module or module declaration: <code>mod m</code> or <code>mod m { ... }</code>.",null,null],[12,"attrs","","",214,null],[12,"vis","","",214,null],[12,"mod_token","","",214,null],[12,"ident","","",214,null],[12,"content","","",214,null],[12,"semi","","",214,null],[3,"ItemStatic","","A static item: <code>static BIKE: Shed = Shed(42)</code>.",null,null],[12,"attrs","","",215,null],[12,"vis","","",215,null],[12,"static_token","","",215,null],[12,"mutability","","",215,null],[12,"ident","","",215,null],[12,"colon_token","","",215,null],[12,"ty","","",215,null],[12,"eq_token","","",215,null],[12,"expr","","",215,null],[12,"semi_token","","",215,null],[3,"ItemStruct","","A struct definition: <code>struct Foo<A> { x: A }</code>.",null,null],[12,"attrs","","",216,null],[12,"vis","","",216,null],[12,"struct_token","","",216,null],[12,"ident","","",216,null],[12,"generics","","",216,null],[12,"fields","","",216,null],[12,"semi_token","","",216,null],[3,"ItemTrait","","A trait definition: <code>pub trait Iterator { ... }</code>.",null,null],[12,"attrs","","",217,null],[12,"vis","","",217,null],[12,"unsafety","","",217,null],[12,"auto_token","","",217,null],[12,"trait_token","","",217,null],[12,"ident","","",217,null],[12,"generics","","",217,null],[12,"colon_token","","",217,null],[12,"supertraits","","",217,null],[12,"brace_token","","",217,null],[12,"items","","",217,null],[3,"ItemTraitAlias","","A trait alias: …",null,null],[12,"attrs","","",218,null],[12,"vis","","",218,null],[12,"trait_token","","",218,null],[12,"ident","","",218,null],[12,"generics","","",218,null],[12,"eq_token","","",218,null],[12,"bounds","","",218,null],[12,"semi_token","","",218,null],[3,"ItemType","","A type alias: …",null,null],[12,"attrs","","",219,null],[12,"vis","","",219,null],[12,"type_token","","",219,null],[12,"ident","","",219,null],[12,"generics","","",219,null],[12,"eq_token","","",219,null],[12,"ty","","",219,null],[12,"semi_token","","",219,null],[3,"ItemUnion","","A union definition: <code>union Foo<A, B> { x: A, y: B }</code>.",null,null],[12,"attrs","","",220,null],[12,"vis","","",220,null],[12,"union_token","","",220,null],[12,"ident","","",220,null],[12,"generics","","",220,null],[12,"fields","","",220,null],[3,"ItemUse","","A use declaration: <code>use std::collections::HashMap</code>.",null,null],[12,"attrs","","",221,null],[12,"vis","","",221,null],[12,"use_token","","",221,null],[12,"leading_colon","","",221,null],[12,"tree","","",221,null],[12,"semi_token","","",221,null],[3,"Receiver","","The <code>self</code> argument of an associated method, whether taken …",null,null],[12,"attrs","","",222,null],[12,"reference","","",222,null],[12,"mutability","","",222,null],[12,"self_token","","",222,null],[3,"Signature","","A function signature in a trait or implementation: …",null,null],[12,"constness","","",223,null],[12,"asyncness","","",223,null],[12,"unsafety","","",223,null],[12,"abi","","",223,null],[12,"fn_token","","",223,null],[12,"ident","","",223,null],[12,"generics","","",223,null],[12,"paren_token","","",223,null],[12,"inputs","","",223,null],[12,"variadic","","",223,null],[12,"output","","",223,null],[4,"TraitItem","","An item declaration within the definition of a trait.",null,null],[13,"Const","","An associated constant within the definition of a trait.",224,null],[13,"Method","","A trait method within the definition of a trait.",224,null],[13,"Type","","An associated type within the definition of a trait.",224,null],[13,"Macro","","A macro invocation within the definition of a trait.",224,null],[13,"Verbatim","","Tokens within the definition of a trait not interpreted …",224,null],[3,"TraitItemConst","","An associated constant within the definition of a trait.",null,null],[12,"attrs","","",225,null],[12,"const_token","","",225,null],[12,"ident","","",225,null],[12,"colon_token","","",225,null],[12,"ty","","",225,null],[12,"default","","",225,null],[12,"semi_token","","",225,null],[3,"TraitItemMacro","","A macro invocation within the definition of a trait.",null,null],[12,"attrs","","",226,null],[12,"mac","","",226,null],[12,"semi_token","","",226,null],[3,"TraitItemMethod","","A trait method within the definition of a trait.",null,null],[12,"attrs","","",227,null],[12,"sig","","",227,null],[12,"default","","",227,null],[12,"semi_token","","",227,null],[3,"TraitItemType","","An associated type within the definition of a trait.",null,null],[12,"attrs","","",228,null],[12,"type_token","","",228,null],[12,"ident","","",228,null],[12,"generics","","",228,null],[12,"colon_token","","",228,null],[12,"bounds","","",228,null],[12,"default","","",228,null],[12,"semi_token","","",228,null],[3,"UseGlob","","A glob import in a <code>use</code> item: <code>*</code>.",null,null],[12,"star_token","","",229,null],[3,"UseGroup","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",null,null],[12,"brace_token","","",230,null],[12,"items","","",230,null],[3,"UseName","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",null,null],[12,"ident","","",231,null],[3,"UsePath","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",null,null],[12,"ident","","",232,null],[12,"colon2_token","","",232,null],[12,"tree","","",232,null],[3,"UseRename","","An renamed identifier imported by a <code>use</code> item: …",null,null],[12,"ident","","",233,null],[12,"as_token","","",233,null],[12,"rename","","",233,null],[4,"UseTree","","A suffix of an import tree in a <code>use</code> item: <code>Type as Renamed</code> …",null,null],[13,"Path","","A path prefix of imports in a <code>use</code> item: <code>std::...</code>.",234,null],[13,"Name","","An identifier imported by a <code>use</code> item: <code>HashMap</code>.",234,null],[13,"Rename","","An renamed identifier imported by a <code>use</code> item: …",234,null],[13,"Glob","","A glob import in a <code>use</code> item: <code>*</code>.",234,null],[13,"Group","","A braced group of imports in a <code>use</code> item: <code>{A, B, C}</code>.",234,null],[3,"File","","A complete file of Rust source code.",null,null],[12,"shebang","","",235,null],[12,"attrs","","",235,null],[12,"items","","",235,null],[3,"Lifetime","","A Rust lifetime: <code>\'a</code>.",null,null],[12,"apostrophe","","",236,null],[12,"ident","","",236,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",237,null],[13,"ByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",237,null],[13,"Byte","","A byte literal: <code>b\'f\'</code>.",237,null],[13,"Char","","A character literal: <code>\'a\'</code>.",237,null],[13,"Int","","An integer literal: <code>1</code> or <code>1u16</code>.",237,null],[13,"Float","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",237,null],[13,"Bool","","A boolean literal: <code>true</code> or <code>false</code>.",237,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",237,null],[3,"LitBool","","A boolean literal: <code>true</code> or <code>false</code>.",null,null],[12,"value","","",238,null],[12,"span","","",238,null],[3,"LitByte","","A byte literal: <code>b\'f\'</code>.",null,null],[3,"LitByteStr","","A byte string literal: <code>b\\\"foo\\\"</code>.",null,null],[3,"LitChar","","A character literal: <code>\'a\'</code>.",null,null],[3,"LitFloat","","A floating point literal: <code>1f64</code> or <code>1.0e10f64</code>.",null,null],[3,"LitInt","","An integer literal: <code>1</code> or <code>1u16</code>.",null,null],[3,"LitStr","","A UTF-8 string literal: <code>\\\"foo\\\"</code>.",null,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a …",null,null],[13,"Cooked","","An ordinary string like <code>\\\"data\\\"</code>.",239,null],[13,"Raw","","A raw string like <code>r##\\\"data\\\"##</code>.",239,null],[3,"Macro","","A macro invocation: <code>println!(\\\"{}\\\", mac)</code>.",null,null],[12,"path","","",240,null],[12,"bang_token","","",240,null],[12,"delimiter","","",240,null],[12,"tokens","","",240,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: <code>m!(...)</code> or …",null,null],[13,"Paren","","",241,null],[13,"Brace","","",241,null],[13,"Bracket","","",241,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a <code>proc_macro_derive</code> macro.",242,null],[13,"Enum","","An enum input to a <code>proc_macro_derive</code> macro.",242,null],[13,"Union","","An untagged union input to a <code>proc_macro_derive</code> macro.",242,null],[3,"DataEnum","","An enum input to a <code>proc_macro_derive</code> macro.",null,null],[12,"enum_token","","",243,null],[12,"brace_token","","",243,null],[12,"variants","","",243,null],[3,"DataStruct","","A struct input to a <code>proc_macro_derive</code> macro.",null,null],[12,"struct_token","","",244,null],[12,"fields","","",244,null],[12,"semi_token","","",244,null],[3,"DataUnion","","An untagged union input to a <code>proc_macro_derive</code> macro.",null,null],[12,"union_token","","",245,null],[12,"fields","","",245,null],[3,"DeriveInput","","Data structure sent to a <code>proc_macro_derive</code> macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",246,null],[12,"vis","","Visibility of the struct or enum.",246,null],[12,"ident","","Name of the struct or enum.",246,null],[12,"generics","","Generics required to complete the definition.",246,null],[12,"data","","Data within the struct or enum.",246,null],[4,"BinOp","","A binary operator: <code>+</code>, <code>+=</code>, <code>&</code>.",null,null],[13,"Add","","The <code>+</code> operator (addition)",247,null],[13,"Sub","","The <code>-</code> operator (subtraction)",247,null],[13,"Mul","","The <code>*</code> operator (multiplication)",247,null],[13,"Div","","The <code>/</code> operator (division)",247,null],[13,"Rem","","The <code>%</code> operator (modulus)",247,null],[13,"And","","The <code>&&</code> operator (logical and)",247,null],[13,"Or","","The <code>||</code> operator (logical or)",247,null],[13,"BitXor","","The <code>^</code> operator (bitwise xor)",247,null],[13,"BitAnd","","The <code>&</code> operator (bitwise and)",247,null],[13,"BitOr","","The <code>|</code> operator (bitwise or)",247,null],[13,"Shl","","The <code><<</code> operator (shift left)",247,null],[13,"Shr","","The <code>>></code> operator (shift right)",247,null],[13,"Eq","","The <code>==</code> operator (equality)",247,null],[13,"Lt","","The <code><</code> operator (less than)",247,null],[13,"Le","","The <code><=</code> operator (less than or equal to)",247,null],[13,"Ne","","The <code>!=</code> operator (not equal to)",247,null],[13,"Ge","","The <code>>=</code> operator (greater than or equal to)",247,null],[13,"Gt","","The <code>></code> operator (greater than)",247,null],[13,"AddEq","","The <code>+=</code> operator",247,null],[13,"SubEq","","The <code>-=</code> operator",247,null],[13,"MulEq","","The <code>*=</code> operator",247,null],[13,"DivEq","","The <code>/=</code> operator",247,null],[13,"RemEq","","The <code>%=</code> operator",247,null],[13,"BitXorEq","","The <code>^=</code> operator",247,null],[13,"BitAndEq","","The <code>&=</code> operator",247,null],[13,"BitOrEq","","The <code>|=</code> operator",247,null],[13,"ShlEq","","The <code><<=</code> operator",247,null],[13,"ShrEq","","The <code>>>=</code> operator",247,null],[4,"UnOp","","A unary operator: <code>*</code>, <code>!</code>, <code>-</code>.",null,null],[13,"Deref","","The <code>*</code> operator for dereferencing",248,null],[13,"Not","","The <code>!</code> operator for logical inversion",248,null],[13,"Neg","","The <code>-</code> operator for negation",248,null],[3,"Block","","A braced block containing Rust statements.",null,null],[12,"brace_token","","",249,null],[12,"stmts","","Statements in a block",249,null],[3,"Local","","A local <code>let</code> binding: <code>let x: u64 = s.parse()?</code>.",null,null],[12,"attrs","","",250,null],[12,"let_token","","",250,null],[12,"pat","","",250,null],[12,"init","","",250,null],[12,"semi_token","","",250,null],[4,"Stmt","","A statement, usually ending in a semicolon.",null,null],[13,"Local","","A local (let) binding.",251,null],[13,"Item","","An item definition.",251,null],[13,"Expr","","Expr without trailing semicolon.",251,null],[13,"Semi","","Expression with trailing semicolon.",251,null],[3,"Abi","","The binary interface of a function: <code>extern \\\"C\\\"</code>.",null,null],[12,"extern_token","","",252,null],[12,"name","","",252,null],[3,"BareFnArg","","An argument in a function type: the <code>usize</code> in …",null,null],[12,"attrs","","",253,null],[12,"name","","",253,null],[12,"ty","","",253,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",254,null],[13,"Type","","A particular type is returned.",254,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: <code>[T; n]</code>.",255,null],[13,"BareFn","","A bare function type: <code>fn(usize) -> bool</code>.",255,null],[13,"Group","","A type contained within invisible delimiters.",255,null],[13,"ImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",255,null],[13,"Infer","","Indication that a type should be inferred by the …",255,null],[13,"Macro","","A macro in the type position.",255,null],[13,"Never","","The never type: <code>!</code>.",255,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",255,null],[13,"Path","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",255,null],[13,"Ptr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",255,null],[13,"Reference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",255,null],[13,"Slice","","A dynamically sized slice type: <code>[T]</code>.",255,null],[13,"TraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",255,null],[13,"Tuple","","A tuple type: <code>(A, B, C, String)</code>.",255,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",255,null],[3,"TypeArray","","A fixed size array type: <code>[T; n]</code>.",null,null],[12,"bracket_token","","",256,null],[12,"elem","","",256,null],[12,"semi_token","","",256,null],[12,"len","","",256,null],[3,"TypeBareFn","","A bare function type: <code>fn(usize) -> bool</code>.",null,null],[12,"lifetimes","","",257,null],[12,"unsafety","","",257,null],[12,"abi","","",257,null],[12,"fn_token","","",257,null],[12,"paren_token","","",257,null],[12,"inputs","","",257,null],[12,"variadic","","",257,null],[12,"output","","",257,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",258,null],[12,"elem","","",258,null],[3,"TypeImplTrait","","An <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a …",null,null],[12,"impl_token","","",259,null],[12,"bounds","","",259,null],[3,"TypeInfer","","Indication that a type should be inferred by the …",null,null],[12,"underscore_token","","",260,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",261,null],[3,"TypeNever","","The never type: <code>!</code>.",null,null],[12,"bang_token","","",262,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",263,null],[12,"elem","","",263,null],[3,"TypePath","","A path like <code>std::slice::Iter</code>, optionally qualified with a …",null,null],[12,"qself","","",264,null],[12,"path","","",264,null],[3,"TypePtr","","A raw pointer type: <code>*const T</code> or <code>*mut T</code>.",null,null],[12,"star_token","","",265,null],[12,"const_token","","",265,null],[12,"mutability","","",265,null],[12,"elem","","",265,null],[3,"TypeReference","","A reference type: <code>&\'a T</code> or <code>&\'a mut T</code>.",null,null],[12,"and_token","","",266,null],[12,"lifetime","","",266,null],[12,"mutability","","",266,null],[12,"elem","","",266,null],[3,"TypeSlice","","A dynamically sized slice type: <code>[T]</code>.",null,null],[12,"bracket_token","","",267,null],[12,"elem","","",267,null],[3,"TypeTraitObject","","A trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> …",null,null],[12,"dyn_token","","",268,null],[12,"bounds","","",268,null],[3,"TypeTuple","","A tuple type: <code>(A, B, C, String)</code>.",null,null],[12,"paren_token","","",269,null],[12,"elems","","",269,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",270,null],[12,"dots","","",270,null],[3,"FieldPat","","A single field in a struct pattern.",null,null],[12,"attrs","","",271,null],[12,"member","","",271,null],[12,"colon_token","","",271,null],[12,"pat","","",271,null],[4,"Pat","","A pattern in a local binding, function signature, match …",null,null],[13,"Box","","A box pattern: <code>box v</code>.",272,null],[13,"Ident","","A pattern that binds a new variable: …",272,null],[13,"Lit","","A literal pattern: <code>0</code>.",272,null],[13,"Macro","","A macro in pattern position.",272,null],[13,"Or","","A pattern that matches any one of a set of cases.",272,null],[13,"Path","","A path pattern like <code>Color::Red</code>, optionally qualified with …",272,null],[13,"Range","","A range pattern: <code>1..=2</code>.",272,null],[13,"Reference","","A reference pattern: <code>&mut var</code>.",272,null],[13,"Rest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",272,null],[13,"Slice","","A dynamically sized slice pattern: …",272,null],[13,"Struct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",272,null],[13,"Tuple","","A tuple pattern: <code>(a, b)</code>.",272,null],[13,"TupleStruct","","A tuple struct or tuple variant pattern: …",272,null],[13,"Type","","A type ascription pattern: <code>foo: f64</code>.",272,null],[13,"Verbatim","","Tokens in pattern position not interpreted by Syn.",272,null],[13,"Wild","","A pattern that matches any value: <code>_</code>.",272,null],[3,"PatBox","","A box pattern: <code>box v</code>.",null,null],[12,"attrs","","",273,null],[12,"box_token","","",273,null],[12,"pat","","",273,null],[3,"PatIdent","","A pattern that binds a new variable: …",null,null],[12,"attrs","","",274,null],[12,"by_ref","","",274,null],[12,"mutability","","",274,null],[12,"ident","","",274,null],[12,"subpat","","",274,null],[3,"PatLit","","A literal pattern: <code>0</code>.",null,null],[12,"attrs","","",275,null],[12,"expr","","",275,null],[3,"PatMacro","","A macro in pattern position.",null,null],[12,"attrs","","",276,null],[12,"mac","","",276,null],[3,"PatOr","","A pattern that matches any one of a set of cases.",null,null],[12,"attrs","","",277,null],[12,"leading_vert","","",277,null],[12,"cases","","",277,null],[3,"PatPath","","A path pattern like <code>Color::Red</code>, optionally qualified with …",null,null],[12,"attrs","","",278,null],[12,"qself","","",278,null],[12,"path","","",278,null],[3,"PatRange","","A range pattern: <code>1..=2</code>.",null,null],[12,"attrs","","",279,null],[12,"lo","","",279,null],[12,"limits","","",279,null],[12,"hi","","",279,null],[3,"PatReference","","A reference pattern: <code>&mut var</code>.",null,null],[12,"attrs","","",280,null],[12,"and_token","","",280,null],[12,"mutability","","",280,null],[12,"pat","","",280,null],[3,"PatRest","","The dots in a tuple or slice pattern: <code>[0, 1, ..]</code>",null,null],[12,"attrs","","",281,null],[12,"dot2_token","","",281,null],[3,"PatSlice","","A dynamically sized slice pattern: …",null,null],[12,"attrs","","",282,null],[12,"bracket_token","","",282,null],[12,"elems","","",282,null],[3,"PatStruct","","A struct or struct variant pattern: <code>Variant { x, y, .. }</code>.",null,null],[12,"attrs","","",283,null],[12,"path","","",283,null],[12,"brace_token","","",283,null],[12,"fields","","",283,null],[12,"dot2_token","","",283,null],[3,"PatTuple","","A tuple pattern: <code>(a, b)</code>.",null,null],[12,"attrs","","",284,null],[12,"paren_token","","",284,null],[12,"elems","","",284,null],[3,"PatTupleStruct","","A tuple struct or tuple variant pattern: …",null,null],[12,"attrs","","",285,null],[12,"path","","",285,null],[12,"pat","","",285,null],[3,"PatType","","A type ascription pattern: <code>foo: f64</code>.",null,null],[12,"attrs","","",286,null],[12,"pat","","",286,null],[12,"colon_token","","",286,null],[12,"ty","","",286,null],[3,"PatWild","","A pattern that matches any value: <code>_</code>.",null,null],[12,"attrs","","",287,null],[12,"underscore_token","","",287,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the <code><K, V></code> …",null,null],[12,"colon2_token","","",288,null],[12,"lt_token","","",288,null],[12,"args","","",288,null],[12,"gt_token","","",288,null],[3,"Binding","","A binding (equality constraint) on an associated type: …",null,null],[12,"ident","","",289,null],[12,"eq_token","","",289,null],[12,"ty","","",289,null],[3,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",null,null],[12,"ident","","",290,null],[12,"colon_token","","",290,null],[12,"bounds","","",290,null],[4,"GenericArgument","","An individual generic argument, like <code>\'a</code>, <code>T</code>, or <code>Item = T</code>.",null,null],[13,"Lifetime","","A lifetime argument.",291,null],[13,"Type","","A type argument.",291,null],[13,"Binding","","A binding (equality constraint) on an associated type: …",291,null],[13,"Constraint","","An associated type bound: <code>Iterator<Item: Display></code>.",291,null],[13,"Const","","A const expression. Must be inside of a block.",291,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the <code>(A, B) -> C</code> in …",null,null],[12,"paren_token","","",292,null],[12,"inputs","","<code>(A, B)</code>",292,null],[12,"output","","<code>C</code>",292,null],[3,"Path","","A path at which a named item is exported (e.g. …",null,null],[12,"leading_colon","","",293,null],[12,"segments","","",293,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path …",null,null],[13,"None","","",294,null],[13,"AngleBracketed","","The <code><\'a, T></code> in <code>std::slice::iter<\'a, T></code>.",294,null],[13,"Parenthesized","","The <code>(A, B) -> C</code> in <code>Fn(A, B) -> C</code>.",294,null],[3,"PathSegment","","A segment of a path together with any path arguments on …",null,null],[12,"ident","","",295,null],[12,"arguments","","",295,null],[3,"QSelf","","The explicit Self type in a qualified path: the <code>T</code> in …",null,null],[12,"lt_token","","",296,null],[12,"ty","","",296,null],[12,"position","","",296,null],[12,"as_token","","",296,null],[12,"gt_token","","",296,null],[3,"Error","","Error returned when a Syn parser cannot parse the input …",null,null],[6,"Result","","The result of a Syn parser.",null,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax …",null,[[["tokenstream",3]],[["parse",8],["result",6]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree …",null,[[["str",15]],[["parse",8],["result",6]]]],[5,"parse_file","","Parse the content of a file of Rust code.",null,[[["str",15]],[["file",3],["result",6]]]],[14,"parenthesized","","Parse a set of parentheses and expose their content to …",null,null],[14,"braced","","Parse a set of curly braces and expose their content to …",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content …",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type …",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the <code>quote!</code> …",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a …",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given …",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a …",null,null],[11,"span","syn::token","",0,[[],["span",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"span","","",1,[[],["span",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"span","","",2,[[],["span",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"span","","",3,[[],["span",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"span","","",4,[[],["span",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"span","","",5,[[],["span",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"span","","",6,[[],["span",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"span","","",7,[[],["span",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"span","","",8,[[],["span",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"span","","",9,[[],["span",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"span","","",10,[[],["span",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"span","","",11,[[],["span",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"span","","",12,[[],["span",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"span","","",13,[[],["span",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"span","","",14,[[],["span",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"span","","",15,[[],["span",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"span","","",16,[[],["span",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"span","","",17,[[],["span",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"span","","",18,[[],["span",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"span","","",19,[[],["span",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"span","","",20,[[],["span",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"span","","",21,[[],["span",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"span","","",22,[[],["span",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"span","","",23,[[],["span",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"span","","",24,[[],["span",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"span","","",25,[[],["span",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"span","","",26,[[],["span",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"span","","",27,[[],["span",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"span","","",28,[[],["span",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"span","","",29,[[],["span",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"span","","",30,[[],["span",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"span","","",31,[[],["span",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"span","","",32,[[],["span",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"span","","",33,[[],["span",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"span","","",34,[[],["span",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"span","","",35,[[],["span",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"span","","",36,[[],["span",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"span","","",37,[[],["span",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"span","","",38,[[],["span",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"span","","",39,[[],["span",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"span","","",40,[[],["span",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"span","","",41,[[],["span",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"span","","",42,[[],["span",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"span","","",43,[[],["span",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"span","","",44,[[],["span",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"span","","",45,[[],["span",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"span","","",46,[[],["span",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"span","","",47,[[],["span",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"span","","",48,[[],["span",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"span","","",49,[[],["span",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"span","","",50,[[],["span",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"span","","",51,[[],["span",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"span","","",52,[[],["span",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"span","","",53,[[],["span",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"span","","",54,[[],["span",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"span","","",55,[[],["span",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"span","","",56,[[],["span",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"span","","",57,[[],["span",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"span","","",58,[[],["span",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"span","","",59,[[],["span",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"span","","",60,[[],["span",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"span","","",61,[[],["span",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"span","","",62,[[],["span",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"span","","",63,[[],["span",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"span","","",64,[[],["span",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"span","","",65,[[],["span",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"span","","",66,[[],["span",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"span","","",67,[[],["span",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"span","","",68,[[],["span",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"span","","",69,[[],["span",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"span","","",70,[[],["span",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"span","","",71,[[],["span",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"span","","",72,[[],["span",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"span","","",73,[[],["span",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"span","","",74,[[],["span",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"span","","",75,[[],["span",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"span","","",76,[[],["span",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"span","","",77,[[],["span",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"span","","",78,[[],["span",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"span","","",79,[[],["span",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"span","","",80,[[],["span",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"span","","",81,[[],["span",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"span","","",82,[[],["span",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"span","","",83,[[],["span",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"span","","",84,[[],["span",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"span","","",85,[[],["span",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"span","","",86,[[],["span",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"span","","",87,[[],["span",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"span","","",88,[[],["span",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"span","","",89,[[],["span",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"span","","",90,[[],["span",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"span","","",91,[[],["span",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"span","","",92,[[],["span",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"span","","",93,[[],["span",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"span","","",94,[[],["span",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"span","","",95,[[],["span",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"span","","",96,[[],["span",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"span","","",97,[[],["span",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"span","","",98,[[],["span",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"span","syn","",297,[[],["span",3]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"to_string","","",297,[[],["string",3]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"span","","",118,[[],["span",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"span","","",119,[[],["span",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"span","","",120,[[],["span",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"span","","",121,[[],["span",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"span","","",122,[[],["span",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"span","","",127,[[],["span",3]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"span","","",124,[[],["span",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"span","","",125,[[],["span",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"span","","",126,[[],["span",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"span","","",123,[[],["span",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"span","","",131,[[],["span",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"span","","",129,[[],["span",3]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"span","","",128,[[],["span",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"span","","",130,[[],["span",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"span","","",138,[[],["span",3]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"span","","",139,[[],["span",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"span","","",140,[[],["span",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"span","","",141,[[],["span",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"span","","",142,[[],["span",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"span","","",143,[[],["span",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"span","","",144,[[],["span",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"span","","",145,[[],["span",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"span","","",146,[[],["span",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"span","","",147,[[],["span",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"span","","",148,[[],["span",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"span","","",149,[[],["span",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"span","","",150,[[],["span",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"span","","",151,[[],["span",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"span","","",152,[[],["span",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"span","","",153,[[],["span",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"span","","",154,[[],["span",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"span","","",155,[[],["span",3]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"span","","",156,[[],["span",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"span","","",157,[[],["span",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"span","","",158,[[],["span",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"span","","",159,[[],["span",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"span","","",160,[[],["span",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"span","","",161,[[],["span",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"span","","",162,[[],["span",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"span","","",163,[[],["span",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"span","","",164,[[],["span",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"span","","",165,[[],["span",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"span","","",166,[[],["span",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"span","","",167,[[],["span",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"span","","",168,[[],["span",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"span","","",169,[[],["span",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"span","","",170,[[],["span",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"span","","",171,[[],["span",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"span","","",172,[[],["span",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"span","","",173,[[],["span",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"span","","",174,[[],["span",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"span","","",175,[[],["span",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"span","","",176,[[],["span",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"span","","",177,[[],["span",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"span","","",179,[[],["span",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"span","","",178,[[],["span",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"span","","",136,[[],["span",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"span","","",134,[[],["span",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"span","","",133,[[],["span",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"span","","",135,[[],["span",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"span","","",132,[[],["span",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"span","","",183,[[],["span",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"span","","",182,[[],["span",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"span","","",190,[[],["span",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"span","","",184,[[],["span",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"span","","",181,[[],["span",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"span","","",298,[[],["span",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"span","","",299,[[],["span",3]]],[11,"from","","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"span","","",300,[[],["span",3]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"span","","",180,[[],["span",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"span","","",191,[[],["span",3]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"span","","",188,[[],["span",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"span","","",189,[[],["span",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"span","","",192,[[],["span",3]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"to_owned","","",192,[[]]],[11,"clone_into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"span","","",193,[[],["span",3]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"span","","",187,[[],["span",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"span","","",186,[[],["span",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"span","","",185,[[],["span",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"span","","",205,[[],["span",3]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_owned","","",205,[[]]],[11,"clone_into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"span","","",206,[[],["span",3]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_owned","","",206,[[]]],[11,"clone_into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"span","","",207,[[],["span",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"span","","",208,[[],["span",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"span","","",209,[[],["span",3]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"span","","",210,[[],["span",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_owned","","",210,[[]]],[11,"clone_into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"span","","",211,[[],["span",3]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"span","","",212,[[],["span",3]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"to_owned","","",212,[[]]],[11,"clone_into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"span","","",213,[[],["span",3]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"to_owned","","",213,[[]]],[11,"clone_into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"span","","",214,[[],["span",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"span","","",215,[[],["span",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"span","","",216,[[],["span",3]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"to_owned","","",216,[[]]],[11,"clone_into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"span","","",217,[[],["span",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"span","","",218,[[],["span",3]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"span","","",219,[[],["span",3]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"span","","",220,[[],["span",3]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"span","","",221,[[],["span",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"span","","",234,[[],["span",3]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"to_owned","","",234,[[]]],[11,"clone_into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"span","","",232,[[],["span",3]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"span","","",231,[[],["span",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"span","","",233,[[],["span",3]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"span","","",229,[[],["span",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"span","","",230,[[],["span",3]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"span","","",195,[[],["span",3]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"span","","",196,[[],["span",3]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"to_owned","","",196,[[]]],[11,"clone_into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"span","","",198,[[],["span",3]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"to_owned","","",198,[[]]],[11,"clone_into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"span","","",199,[[],["span",3]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"span","","",197,[[],["span",3]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"span","","",224,[[],["span",3]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"span","","",225,[[],["span",3]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"span","","",227,[[],["span",3]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"span","","",228,[[],["span",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"span","","",226,[[],["span",3]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"span","","",200,[[],["span",3]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"span","","",201,[[],["span",3]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"to_owned","","",201,[[]]],[11,"clone_into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"span","","",203,[[],["span",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"span","","",204,[[],["span",3]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_owned","","",204,[[]]],[11,"clone_into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"span","","",202,[[],["span",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"span","","",223,[[],["span",3]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"span","","",194,[[],["span",3]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"span","","",222,[[],["span",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"span","","",235,[[],["span",3]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"span","","",236,[[],["span",3]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"to_string","","",236,[[],["string",3]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"span","","",237,[[],["span",3]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"to_owned","","",237,[[]]],[11,"clone_into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"span","","",301,[[],["span",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"to_owned","","",301,[[]]],[11,"clone_into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"span","","",302,[[],["span",3]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"span","","",303,[[],["span",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"span","","",304,[[],["span",3]]],[11,"from","","",304,[[]]],[11,"into","","",304,[[]]],[11,"to_owned","","",304,[[]]],[11,"clone_into","","",304,[[]]],[11,"borrow","","",304,[[]]],[11,"borrow_mut","","",304,[[]]],[11,"try_from","","",304,[[],["result",4]]],[11,"try_into","","",304,[[],["result",4]]],[11,"type_id","","",304,[[],["typeid",3]]],[11,"span","","",305,[[],["span",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"to_owned","","",305,[[]]],[11,"clone_into","","",305,[[]]],[11,"to_string","","",305,[[],["string",3]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"span","","",306,[[],["span",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"to_string","","",306,[[],["string",3]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"span","","",238,[[],["span",3]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"span","","",240,[[],["span",3]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"span","","",246,[[],["span",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"span","","",247,[[],["span",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"span","","",248,[[],["span",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"span","","",249,[[],["span",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"span","","",251,[[],["span",3]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"span","","",250,[[],["span",3]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"span","","",255,[[],["span",3]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"span","","",256,[[],["span",3]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"span","","",257,[[],["span",3]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"span","","",258,[[],["span",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"span","","",259,[[],["span",3]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"span","","",260,[[],["span",3]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"to_owned","","",260,[[]]],[11,"clone_into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"span","","",261,[[],["span",3]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"span","","",262,[[],["span",3]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"span","","",263,[[],["span",3]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"to_owned","","",263,[[]]],[11,"clone_into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"span","","",264,[[],["span",3]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"span","","",265,[[],["span",3]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"span","","",266,[[],["span",3]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"span","","",267,[[],["span",3]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"to_owned","","",267,[[]]],[11,"clone_into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"span","","",268,[[],["span",3]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"to_owned","","",268,[[]]],[11,"clone_into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"span","","",269,[[],["span",3]]],[11,"from","","",269,[[]]],[11,"into","","",269,[[]]],[11,"to_owned","","",269,[[]]],[11,"clone_into","","",269,[[]]],[11,"borrow","","",269,[[]]],[11,"borrow_mut","","",269,[[]]],[11,"try_from","","",269,[[],["result",4]]],[11,"try_into","","",269,[[],["result",4]]],[11,"type_id","","",269,[[],["typeid",3]]],[11,"span","","",252,[[],["span",3]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"span","","",253,[[],["span",3]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"span","","",270,[[],["span",3]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"to_owned","","",270,[[]]],[11,"clone_into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"span","","",254,[[],["span",3]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"span","","",272,[[],["span",3]]],[11,"from","","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"span","","",273,[[],["span",3]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"span","","",274,[[],["span",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"span","","",275,[[],["span",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"span","","",276,[[],["span",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"to_owned","","",276,[[]]],[11,"clone_into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"span","","",277,[[],["span",3]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"to_owned","","",277,[[]]],[11,"clone_into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"span","","",278,[[],["span",3]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"span","","",279,[[],["span",3]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"span","","",280,[[],["span",3]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"to_owned","","",280,[[]]],[11,"clone_into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"span","","",281,[[],["span",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"to_owned","","",281,[[]]],[11,"clone_into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"span","","",282,[[],["span",3]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"span","","",283,[[],["span",3]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"to_owned","","",283,[[]]],[11,"clone_into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"span","","",284,[[],["span",3]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"to_owned","","",284,[[]]],[11,"clone_into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"span","","",285,[[],["span",3]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"span","","",286,[[],["span",3]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"to_owned","","",286,[[]]],[11,"clone_into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"span","","",287,[[],["span",3]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"to_owned","","",287,[[]]],[11,"clone_into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"span","","",271,[[],["span",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"to_owned","","",271,[[]]],[11,"clone_into","","",271,[[]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"span","","",293,[[],["span",3]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"to_owned","","",293,[[]]],[11,"clone_into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"span","","",295,[[],["span",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"span","","",294,[[],["span",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"span","","",291,[[],["span",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"span","","",288,[[],["span",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"span","","",289,[[],["span",3]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"to_owned","","",289,[[]]],[11,"clone_into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"span","","",290,[[],["span",3]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"span","","",292,[[],["span",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"to_owned","","",292,[[]]],[11,"clone_into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"to_owned","","",296,[[]]],[11,"clone_into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","syn::buffer","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"span","syn::punctuated","",106,[[],["span",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",307,[[]]],[11,"into","","",307,[[]]],[11,"into_iter","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"to_owned","","",309,[[]]],[11,"clone_into","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"to_owned","","",310,[[]]],[11,"clone_into","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"to_owned","","",311,[[]]],[11,"clone_into","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",312,[[]]],[11,"into","","",312,[[]]],[11,"into_iter","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"span","","",107,[[],["span",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","syn::parse","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"fmt","syn","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",297,[[]]],[11,"partial_cmp","","",297,[[["ident",3]],[["option",4],["ordering",4]]]],[11,"clone","","",297,[[],["ident",3]]],[11,"cmp","","",297,[[["ident",3]],["ordering",4]]],[11,"eq","","",297,[[["ident",3]],["bool",15]]],[11,"eq","","",297,[[],["bool",15]]],[11,"to_tokens","","",297,[[["tokenstream",3]]]],[11,"span","","",297,[[],[["option",4],["span",3]]]],[11,"fmt","","",297,[[["formatter",3]],[["error",3],["result",4]]]],[11,"peek","","",236,[[["cursor",3]],["bool",15]]],[11,"display","","",236,[[],["str",15]]],[11,"peek","","",237,[[["cursor",3]],["bool",15]]],[11,"display","","",237,[[],["str",15]]],[11,"peek","","",301,[[["cursor",3]],["bool",15]]],[11,"display","","",301,[[],["str",15]]],[11,"peek","","",302,[[["cursor",3]],["bool",15]]],[11,"display","","",302,[[],["str",15]]],[11,"peek","","",303,[[["cursor",3]],["bool",15]]],[11,"display","","",303,[[],["str",15]]],[11,"peek","","",304,[[["cursor",3]],["bool",15]]],[11,"display","","",304,[[],["str",15]]],[11,"peek","","",305,[[["cursor",3]],["bool",15]]],[11,"display","","",305,[[],["str",15]]],[11,"peek","","",306,[[["cursor",3]],["bool",15]]],[11,"display","","",306,[[],["str",15]]],[11,"peek","","",238,[[["cursor",3]],["bool",15]]],[11,"display","","",238,[[],["str",15]]],[11,"peek","syn::token","",0,[[["cursor",3]],["bool",15]]],[11,"display","","",0,[[],["str",15]]],[11,"peek","","",101,[[["cursor",3]],["bool",15]]],[11,"display","","",101,[[],["str",15]]],[11,"peek","","",99,[[["cursor",3]],["bool",15]]],[11,"display","","",99,[[],["str",15]]],[11,"peek","","",100,[[["cursor",3]],["bool",15]]],[11,"display","","",100,[[],["str",15]]],[11,"peek","","",102,[[["cursor",3]],["bool",15]]],[11,"display","","",102,[[],["str",15]]],[11,"peek","","",1,[[["cursor",3]],["bool",15]]],[11,"display","","",1,[[],["str",15]]],[11,"peek","","",2,[[["cursor",3]],["bool",15]]],[11,"display","","",2,[[],["str",15]]],[11,"peek","","",3,[[["cursor",3]],["bool",15]]],[11,"display","","",3,[[],["str",15]]],[11,"peek","","",4,[[["cursor",3]],["bool",15]]],[11,"display","","",4,[[],["str",15]]],[11,"peek","","",5,[[["cursor",3]],["bool",15]]],[11,"display","","",5,[[],["str",15]]],[11,"peek","","",6,[[["cursor",3]],["bool",15]]],[11,"display","","",6,[[],["str",15]]],[11,"peek","","",7,[[["cursor",3]],["bool",15]]],[11,"display","","",7,[[],["str",15]]],[11,"peek","","",8,[[["cursor",3]],["bool",15]]],[11,"display","","",8,[[],["str",15]]],[11,"peek","","",9,[[["cursor",3]],["bool",15]]],[11,"display","","",9,[[],["str",15]]],[11,"peek","","",10,[[["cursor",3]],["bool",15]]],[11,"display","","",10,[[],["str",15]]],[11,"peek","","",11,[[["cursor",3]],["bool",15]]],[11,"display","","",11,[[],["str",15]]],[11,"peek","","",12,[[["cursor",3]],["bool",15]]],[11,"display","","",12,[[],["str",15]]],[11,"peek","","",13,[[["cursor",3]],["bool",15]]],[11,"display","","",13,[[],["str",15]]],[11,"peek","","",14,[[["cursor",3]],["bool",15]]],[11,"display","","",14,[[],["str",15]]],[11,"peek","","",15,[[["cursor",3]],["bool",15]]],[11,"display","","",15,[[],["str",15]]],[11,"peek","","",16,[[["cursor",3]],["bool",15]]],[11,"display","","",16,[[],["str",15]]],[11,"peek","","",17,[[["cursor",3]],["bool",15]]],[11,"display","","",17,[[],["str",15]]],[11,"peek","","",18,[[["cursor",3]],["bool",15]]],[11,"display","","",18,[[],["str",15]]],[11,"peek","","",19,[[["cursor",3]],["bool",15]]],[11,"display","","",19,[[],["str",15]]],[11,"peek","","",20,[[["cursor",3]],["bool",15]]],[11,"display","","",20,[[],["str",15]]],[11,"peek","","",21,[[["cursor",3]],["bool",15]]],[11,"display","","",21,[[],["str",15]]],[11,"peek","","",22,[[["cursor",3]],["bool",15]]],[11,"display","","",22,[[],["str",15]]],[11,"peek","","",23,[[["cursor",3]],["bool",15]]],[11,"display","","",23,[[],["str",15]]],[11,"peek","","",24,[[["cursor",3]],["bool",15]]],[11,"display","","",24,[[],["str",15]]],[11,"peek","","",25,[[["cursor",3]],["bool",15]]],[11,"display","","",25,[[],["str",15]]],[11,"peek","","",26,[[["cursor",3]],["bool",15]]],[11,"display","","",26,[[],["str",15]]],[11,"peek","","",27,[[["cursor",3]],["bool",15]]],[11,"display","","",27,[[],["str",15]]],[11,"peek","","",28,[[["cursor",3]],["bool",15]]],[11,"display","","",28,[[],["str",15]]],[11,"peek","","",29,[[["cursor",3]],["bool",15]]],[11,"display","","",29,[[],["str",15]]],[11,"peek","","",30,[[["cursor",3]],["bool",15]]],[11,"display","","",30,[[],["str",15]]],[11,"peek","","",31,[[["cursor",3]],["bool",15]]],[11,"display","","",31,[[],["str",15]]],[11,"peek","","",32,[[["cursor",3]],["bool",15]]],[11,"display","","",32,[[],["str",15]]],[11,"peek","","",33,[[["cursor",3]],["bool",15]]],[11,"display","","",33,[[],["str",15]]],[11,"peek","","",34,[[["cursor",3]],["bool",15]]],[11,"display","","",34,[[],["str",15]]],[11,"peek","","",35,[[["cursor",3]],["bool",15]]],[11,"display","","",35,[[],["str",15]]],[11,"peek","","",36,[[["cursor",3]],["bool",15]]],[11,"display","","",36,[[],["str",15]]],[11,"peek","","",37,[[["cursor",3]],["bool",15]]],[11,"display","","",37,[[],["str",15]]],[11,"peek","","",38,[[["cursor",3]],["bool",15]]],[11,"display","","",38,[[],["str",15]]],[11,"peek","","",39,[[["cursor",3]],["bool",15]]],[11,"display","","",39,[[],["str",15]]],[11,"peek","","",40,[[["cursor",3]],["bool",15]]],[11,"display","","",40,[[],["str",15]]],[11,"peek","","",41,[[["cursor",3]],["bool",15]]],[11,"display","","",41,[[],["str",15]]],[11,"peek","","",42,[[["cursor",3]],["bool",15]]],[11,"display","","",42,[[],["str",15]]],[11,"peek","","",43,[[["cursor",3]],["bool",15]]],[11,"display","","",43,[[],["str",15]]],[11,"peek","","",44,[[["cursor",3]],["bool",15]]],[11,"display","","",44,[[],["str",15]]],[11,"peek","","",45,[[["cursor",3]],["bool",15]]],[11,"display","","",45,[[],["str",15]]],[11,"peek","","",46,[[["cursor",3]],["bool",15]]],[11,"display","","",46,[[],["str",15]]],[11,"peek","","",47,[[["cursor",3]],["bool",15]]],[11,"display","","",47,[[],["str",15]]],[11,"peek","","",48,[[["cursor",3]],["bool",15]]],[11,"display","","",48,[[],["str",15]]],[11,"peek","","",49,[[["cursor",3]],["bool",15]]],[11,"display","","",49,[[],["str",15]]],[11,"peek","","",50,[[["cursor",3]],["bool",15]]],[11,"display","","",50,[[],["str",15]]],[11,"peek","","",51,[[["cursor",3]],["bool",15]]],[11,"display","","",51,[[],["str",15]]],[11,"peek","","",52,[[["cursor",3]],["bool",15]]],[11,"display","","",52,[[],["str",15]]],[11,"peek","","",53,[[["cursor",3]],["bool",15]]],[11,"display","","",53,[[],["str",15]]],[11,"peek","","",54,[[["cursor",3]],["bool",15]]],[11,"display","","",54,[[],["str",15]]],[11,"peek","","",55,[[["cursor",3]],["bool",15]]],[11,"display","","",55,[[],["str",15]]],[11,"peek","","",56,[[["cursor",3]],["bool",15]]],[11,"display","","",56,[[],["str",15]]],[11,"peek","","",57,[[["cursor",3]],["bool",15]]],[11,"display","","",57,[[],["str",15]]],[11,"peek","","",58,[[["cursor",3]],["bool",15]]],[11,"display","","",58,[[],["str",15]]],[11,"peek","","",59,[[["cursor",3]],["bool",15]]],[11,"display","","",59,[[],["str",15]]],[11,"peek","","",60,[[["cursor",3]],["bool",15]]],[11,"display","","",60,[[],["str",15]]],[11,"peek","","",61,[[["cursor",3]],["bool",15]]],[11,"display","","",61,[[],["str",15]]],[11,"peek","","",62,[[["cursor",3]],["bool",15]]],[11,"display","","",62,[[],["str",15]]],[11,"peek","","",63,[[["cursor",3]],["bool",15]]],[11,"display","","",63,[[],["str",15]]],[11,"peek","","",64,[[["cursor",3]],["bool",15]]],[11,"display","","",64,[[],["str",15]]],[11,"peek","","",65,[[["cursor",3]],["bool",15]]],[11,"display","","",65,[[],["str",15]]],[11,"peek","","",66,[[["cursor",3]],["bool",15]]],[11,"display","","",66,[[],["str",15]]],[11,"peek","","",67,[[["cursor",3]],["bool",15]]],[11,"display","","",67,[[],["str",15]]],[11,"peek","","",68,[[["cursor",3]],["bool",15]]],[11,"display","","",68,[[],["str",15]]],[11,"peek","","",69,[[["cursor",3]],["bool",15]]],[11,"display","","",69,[[],["str",15]]],[11,"peek","","",70,[[["cursor",3]],["bool",15]]],[11,"display","","",70,[[],["str",15]]],[11,"peek","","",71,[[["cursor",3]],["bool",15]]],[11,"display","","",71,[[],["str",15]]],[11,"peek","","",72,[[["cursor",3]],["bool",15]]],[11,"display","","",72,[[],["str",15]]],[11,"peek","","",73,[[["cursor",3]],["bool",15]]],[11,"display","","",73,[[],["str",15]]],[11,"peek","","",74,[[["cursor",3]],["bool",15]]],[11,"display","","",74,[[],["str",15]]],[11,"peek","","",75,[[["cursor",3]],["bool",15]]],[11,"display","","",75,[[],["str",15]]],[11,"peek","","",76,[[["cursor",3]],["bool",15]]],[11,"display","","",76,[[],["str",15]]],[11,"peek","","",77,[[["cursor",3]],["bool",15]]],[11,"display","","",77,[[],["str",15]]],[11,"peek","","",78,[[["cursor",3]],["bool",15]]],[11,"display","","",78,[[],["str",15]]],[11,"peek","","",79,[[["cursor",3]],["bool",15]]],[11,"display","","",79,[[],["str",15]]],[11,"peek","","",80,[[["cursor",3]],["bool",15]]],[11,"display","","",80,[[],["str",15]]],[11,"peek","","",81,[[["cursor",3]],["bool",15]]],[11,"display","","",81,[[],["str",15]]],[11,"peek","","",82,[[["cursor",3]],["bool",15]]],[11,"display","","",82,[[],["str",15]]],[11,"peek","","",83,[[["cursor",3]],["bool",15]]],[11,"display","","",83,[[],["str",15]]],[11,"peek","","",84,[[["cursor",3]],["bool",15]]],[11,"display","","",84,[[],["str",15]]],[11,"peek","","",85,[[["cursor",3]],["bool",15]]],[11,"display","","",85,[[],["str",15]]],[11,"peek","","",86,[[["cursor",3]],["bool",15]]],[11,"display","","",86,[[],["str",15]]],[11,"peek","","",87,[[["cursor",3]],["bool",15]]],[11,"display","","",87,[[],["str",15]]],[11,"peek","","",88,[[["cursor",3]],["bool",15]]],[11,"display","","",88,[[],["str",15]]],[11,"peek","","",89,[[["cursor",3]],["bool",15]]],[11,"display","","",89,[[],["str",15]]],[11,"peek","","",90,[[["cursor",3]],["bool",15]]],[11,"display","","",90,[[],["str",15]]],[11,"peek","","",91,[[["cursor",3]],["bool",15]]],[11,"display","","",91,[[],["str",15]]],[11,"peek","","",92,[[["cursor",3]],["bool",15]]],[11,"display","","",92,[[],["str",15]]],[11,"peek","","",93,[[["cursor",3]],["bool",15]]],[11,"display","","",93,[[],["str",15]]],[11,"peek","","",94,[[["cursor",3]],["bool",15]]],[11,"display","","",94,[[],["str",15]]],[11,"peek","","",95,[[["cursor",3]],["bool",15]]],[11,"display","","",95,[[],["str",15]]],[11,"peek","","",96,[[["cursor",3]],["bool",15]]],[11,"display","","",96,[[],["str",15]]],[11,"peek","","",97,[[["cursor",3]],["bool",15]]],[11,"display","","",97,[[],["str",15]]],[11,"peek","","",98,[[["cursor",3]],["bool",15]]],[11,"display","","",98,[[],["str",15]]],[11,"peek","syn","",297,[[["cursor",3]],["bool",15]]],[11,"display","","",297,[[],["str",15]]],[11,"parse_any","","",297,[[["parsestream",6]],["result",6]]],[11,"unraw","","",297,[[],["ident",3]]],[11,"advance_to","syn::parse","",114,[[]]],[11,"parse","syn::token","",0,[[["parsestream",6]],["result",6]]],[11,"parse","","",1,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",5,[[["parsestream",6]],["result",6]]],[11,"parse","","",6,[[["parsestream",6]],["result",6]]],[11,"parse","","",7,[[["parsestream",6]],["result",6]]],[11,"parse","","",8,[[["parsestream",6]],["result",6]]],[11,"parse","","",9,[[["parsestream",6]],["result",6]]],[11,"parse","","",10,[[["parsestream",6]],["result",6]]],[11,"parse","","",11,[[["parsestream",6]],["result",6]]],[11,"parse","","",12,[[["parsestream",6]],["result",6]]],[11,"parse","","",13,[[["parsestream",6]],["result",6]]],[11,"parse","","",14,[[["parsestream",6]],["result",6]]],[11,"parse","","",15,[[["parsestream",6]],["result",6]]],[11,"parse","","",16,[[["parsestream",6]],["result",6]]],[11,"parse","","",17,[[["parsestream",6]],["result",6]]],[11,"parse","","",18,[[["parsestream",6]],["result",6]]],[11,"parse","","",19,[[["parsestream",6]],["result",6]]],[11,"parse","","",20,[[["parsestream",6]],["result",6]]],[11,"parse","","",21,[[["parsestream",6]],["result",6]]],[11,"parse","","",22,[[["parsestream",6]],["result",6]]],[11,"parse","","",23,[[["parsestream",6]],["result",6]]],[11,"parse","","",24,[[["parsestream",6]],["result",6]]],[11,"parse","","",25,[[["parsestream",6]],["result",6]]],[11,"parse","","",26,[[["parsestream",6]],["result",6]]],[11,"parse","","",27,[[["parsestream",6]],["result",6]]],[11,"parse","","",28,[[["parsestream",6]],["result",6]]],[11,"parse","","",29,[[["parsestream",6]],["result",6]]],[11,"parse","","",30,[[["parsestream",6]],["result",6]]],[11,"parse","","",31,[[["parsestream",6]],["result",6]]],[11,"parse","","",32,[[["parsestream",6]],["result",6]]],[11,"parse","","",33,[[["parsestream",6]],["result",6]]],[11,"parse","","",34,[[["parsestream",6]],["result",6]]],[11,"parse","","",35,[[["parsestream",6]],["result",6]]],[11,"parse","","",36,[[["parsestream",6]],["result",6]]],[11,"parse","","",37,[[["parsestream",6]],["result",6]]],[11,"parse","","",38,[[["parsestream",6]],["result",6]]],[11,"parse","","",39,[[["parsestream",6]],["result",6]]],[11,"parse","","",40,[[["parsestream",6]],["result",6]]],[11,"parse","","",41,[[["parsestream",6]],["result",6]]],[11,"parse","","",42,[[["parsestream",6]],["result",6]]],[11,"parse","","",43,[[["parsestream",6]],["result",6]]],[11,"parse","","",44,[[["parsestream",6]],["result",6]]],[11,"parse","","",45,[[["parsestream",6]],["result",6]]],[11,"parse","","",46,[[["parsestream",6]],["result",6]]],[11,"parse","","",47,[[["parsestream",6]],["result",6]]],[11,"parse","","",48,[[["parsestream",6]],["result",6]]],[11,"parse","","",49,[[["parsestream",6]],["result",6]]],[11,"parse","","",50,[[["parsestream",6]],["result",6]]],[11,"parse","","",51,[[["parsestream",6]],["result",6]]],[11,"parse","","",52,[[["parsestream",6]],["result",6]]],[11,"parse","","",53,[[["parsestream",6]],["result",6]]],[11,"parse","","",54,[[["parsestream",6]],["result",6]]],[11,"parse","","",55,[[["parsestream",6]],["result",6]]],[11,"parse","","",56,[[["parsestream",6]],["result",6]]],[11,"parse","","",57,[[["parsestream",6]],["result",6]]],[11,"parse","","",58,[[["parsestream",6]],["result",6]]],[11,"parse","","",59,[[["parsestream",6]],["result",6]]],[11,"parse","","",60,[[["parsestream",6]],["result",6]]],[11,"parse","","",61,[[["parsestream",6]],["result",6]]],[11,"parse","","",62,[[["parsestream",6]],["result",6]]],[11,"parse","","",63,[[["parsestream",6]],["result",6]]],[11,"parse","","",64,[[["parsestream",6]],["result",6]]],[11,"parse","","",65,[[["parsestream",6]],["result",6]]],[11,"parse","","",66,[[["parsestream",6]],["result",6]]],[11,"parse","","",67,[[["parsestream",6]],["result",6]]],[11,"parse","","",68,[[["parsestream",6]],["result",6]]],[11,"parse","","",69,[[["parsestream",6]],["result",6]]],[11,"parse","","",70,[[["parsestream",6]],["result",6]]],[11,"parse","","",71,[[["parsestream",6]],["result",6]]],[11,"parse","","",72,[[["parsestream",6]],["result",6]]],[11,"parse","","",73,[[["parsestream",6]],["result",6]]],[11,"parse","","",74,[[["parsestream",6]],["result",6]]],[11,"parse","","",75,[[["parsestream",6]],["result",6]]],[11,"parse","","",76,[[["parsestream",6]],["result",6]]],[11,"parse","","",77,[[["parsestream",6]],["result",6]]],[11,"parse","","",78,[[["parsestream",6]],["result",6]]],[11,"parse","","",79,[[["parsestream",6]],["result",6]]],[11,"parse","","",80,[[["parsestream",6]],["result",6]]],[11,"parse","","",81,[[["parsestream",6]],["result",6]]],[11,"parse","","",82,[[["parsestream",6]],["result",6]]],[11,"parse","","",83,[[["parsestream",6]],["result",6]]],[11,"parse","","",84,[[["parsestream",6]],["result",6]]],[11,"parse","","",85,[[["parsestream",6]],["result",6]]],[11,"parse","","",86,[[["parsestream",6]],["result",6]]],[11,"parse","","",87,[[["parsestream",6]],["result",6]]],[11,"parse","","",88,[[["parsestream",6]],["result",6]]],[11,"parse","","",89,[[["parsestream",6]],["result",6]]],[11,"parse","","",90,[[["parsestream",6]],["result",6]]],[11,"parse","","",91,[[["parsestream",6]],["result",6]]],[11,"parse","","",92,[[["parsestream",6]],["result",6]]],[11,"parse","","",93,[[["parsestream",6]],["result",6]]],[11,"parse","","",94,[[["parsestream",6]],["result",6]]],[11,"parse","","",95,[[["parsestream",6]],["result",6]]],[11,"parse","","",96,[[["parsestream",6]],["result",6]]],[11,"parse","","",97,[[["parsestream",6]],["result",6]]],[11,"parse","","",98,[[["parsestream",6]],["result",6]]],[11,"parse","syn","",297,[[["parsestream",6]],["result",6]]],[11,"parse","","",119,[[["parsestream",6]],["result",6]]],[11,"parse","","",120,[[["parsestream",6]],["result",6]]],[11,"parse","","",121,[[["parsestream",6]],["result",6]]],[11,"parse","","",122,[[["parsestream",6]],["result",6]]],[11,"parse","","",127,[[["parsestream",6]],["result",6]]],[11,"parse","","",125,[[["parsestream",6]],["result",6]]],[11,"parse","","",126,[[["parsestream",6]],["result",6]]],[11,"parse","","",131,[[["parsestream",6]],["result",6]]],[11,"parse","","",138,[[["parsestream",6]],["result",6]]],[11,"parse","","",160,[[["parsestream",6]],["result",6]]],[11,"parse","","",139,[[["parsestream",6]],["result",6]]],[11,"parse","","",167,[[["parsestream",6]],["result",6]]],[11,"parse","","",158,[[["parsestream",6]],["result",6]]],[11,"parse","","",163,[[["parsestream",6]],["result",6]]],[11,"parse","","",157,[[["parsestream",6]],["result",6]]],[11,"parse","","",155,[[["parsestream",6]],["result",6]]],[11,"parse","","",153,[[["parsestream",6]],["result",6]]],[11,"parse","","",159,[[["parsestream",6]],["result",6]]],[11,"parse","","",161,[[["parsestream",6]],["result",6]]],[11,"parse","","",148,[[["parsestream",6]],["result",6]]],[11,"parse","","",162,[[["parsestream",6]],["result",6]]],[11,"parse","","",172,[[["parsestream",6]],["result",6]]],[11,"parse","","",144,[[["parsestream",6]],["result",6]]],[11,"parse","","",149,[[["parsestream",6]],["result",6]]],[11,"parse","","",173,[[["parsestream",6]],["result",6]]],[11,"parse","","",140,[[["parsestream",6]],["result",6]]],[11,"parse","","",141,[[["parsestream",6]],["result",6]]],[11,"parse","","",152,[[["parsestream",6]],["result",6]]],[11,"parse","","",156,[[["parsestream",6]],["result",6]]],[11,"parse","","",165,[[["parsestream",6]],["result",6]]],[11,"parse","","",170,[[["parsestream",6]],["result",6]]],[11,"parse","","",146,[[["parsestream",6]],["result",6]]],[11,"parse","","",174,[[["parsestream",6]],["result",6]]],[11,"parse","","",150,[[["parsestream",6]],["result",6]]],[11,"parse","","",166,[[["parsestream",6]],["result",6]]],[11,"parse","","",147,[[["parsestream",6]],["result",6]]],[11,"parse","","",168,[[["parsestream",6]],["result",6]]],[11,"parse","","",171,[[["parsestream",6]],["result",6]]],[11,"parse","","",177,[[["parsestream",6]],["result",6]]],[11,"parse","","",142,[[["parsestream",6]],["result",6]]],[11,"parse","","",176,[[["parsestream",6]],["result",6]]],[11,"parse","","",135,[[["parsestream",6]],["result",6]]],[11,"parse","","",151,[[["parsestream",6]],["result",6]]],[11,"parse","","",133,[[["parsestream",6]],["result",6]]],[11,"parse","","",169,[[["parsestream",6]],["result",6]]],[11,"parse","","",175,[[["parsestream",6]],["result",6]]],[11,"parse","","",145,[[["parsestream",6]],["result",6]]],[11,"parse","","",137,[[["parsestream",6]],["result",6]]],[11,"parse","","",164,[[["parsestream",6]],["result",6]]],[11,"parse","","",179,[[["parsestream",6]],["result",6]]],[11,"parse","","",132,[[["parsestream",6]],[["arm",3],["result",6]]]],[11,"parse","","",178,[[["parsestream",6]],["result",6]]],[11,"parse","","",183,[[["parsestream",6]],["result",6]]],[11,"parse","","",182,[[["parsestream",6]],["result",6]]],[11,"parse","","",184,[[["parsestream",6]],["result",6]]],[11,"parse","","",180,[[["parsestream",6]],["result",6]]],[11,"parse","","",190,[[["parsestream",6]],["result",6]]],[11,"parse","","",191,[[["parsestream",6]],["result",6]]],[11,"parse","","",188,[[["parsestream",6]],["result",6]]],[11,"parse","","",189,[[["parsestream",6]],["result",6]]],[11,"parse","","",181,[[["parsestream",6]],["result",6]]],[11,"parse","","",192,[[["parsestream",6]],["result",6]]],[11,"parse","","",193,[[["parsestream",6]],["result",6]]],[11,"parse","","",205,[[["parsestream",6]],["result",6]]],[11,"parse","","",212,[[["parsestream",6]],["result",6]]],[11,"parse","","",213,[[["parsestream",6]],["result",6]]],[11,"parse","","",208,[[["parsestream",6]],["result",6]]],[11,"parse","","",221,[[["parsestream",6]],["result",6]]],[11,"parse","","",234,[[["parsestream",6]],[["result",6],["usetree",4]]]],[11,"parse","","",215,[[["parsestream",6]],["result",6]]],[11,"parse","","",206,[[["parsestream",6]],["result",6]]],[11,"parse","","",223,[[["parsestream",6]],["result",6]]],[11,"parse","","",209,[[["parsestream",6]],["result",6]]],[11,"parse","","",194,[[["parsestream",6]],["result",6]]],[11,"parse","","",222,[[["parsestream",6]],["result",6]]],[11,"parse","","",214,[[["parsestream",6]],["result",6]]],[11,"parse","","",210,[[["parsestream",6]],["result",6]]],[11,"parse","","",195,[[["parsestream",6]],["result",6]]],[11,"parse","","",196,[[["parsestream",6]],["result",6]]],[11,"parse","","",198,[[["parsestream",6]],["result",6]]],[11,"parse","","",199,[[["parsestream",6]],["result",6]]],[11,"parse","","",197,[[["parsestream",6]],["result",6]]],[11,"parse","","",219,[[["parsestream",6]],["result",6]]],[11,"parse","","",216,[[["parsestream",6]],["result",6]]],[11,"parse","","",207,[[["parsestream",6]],["result",6]]],[11,"parse","","",220,[[["parsestream",6]],["result",6]]],[11,"parse","","",217,[[["parsestream",6]],["result",6]]],[11,"parse","","",218,[[["parsestream",6]],["result",6]]],[11,"parse","","",224,[[["parsestream",6]],["result",6]]],[11,"parse","","",225,[[["parsestream",6]],["result",6]]],[11,"parse","","",227,[[["parsestream",6]],["result",6]]],[11,"parse","","",228,[[["parsestream",6]],["result",6]]],[11,"parse","","",226,[[["parsestream",6]],["result",6]]],[11,"parse","","",211,[[["parsestream",6]],["result",6]]],[11,"parse","","",200,[[["parsestream",6]],["result",6]]],[11,"parse","","",201,[[["parsestream",6]],["result",6]]],[11,"parse","","",203,[[["parsestream",6]],["result",6]]],[11,"parse","","",204,[[["parsestream",6]],["result",6]]],[11,"parse","","",202,[[["parsestream",6]],["result",6]]],[11,"parse","","",235,[[["parsestream",6]],["result",6]]],[11,"parse","","",236,[[["parsestream",6]],["result",6]]],[11,"parse","","",237,[[["parsestream",6]],["result",6]]],[11,"parse","","",301,[[["parsestream",6]],["result",6]]],[11,"parse","","",302,[[["parsestream",6]],["result",6]]],[11,"parse","","",303,[[["parsestream",6]],["result",6]]],[11,"parse","","",304,[[["parsestream",6]],["result",6]]],[11,"parse","","",305,[[["parsestream",6]],["result",6]]],[11,"parse","","",306,[[["parsestream",6]],["result",6]]],[11,"parse","","",238,[[["parsestream",6]],["result",6]]],[11,"parse","","",240,[[["parsestream",6]],["result",6]]],[11,"parse","","",246,[[["parsestream",6]],["result",6]]],[11,"parse","","",247,[[["parsestream",6]],["result",6]]],[11,"parse","","",248,[[["parsestream",6]],["result",6]]],[11,"parse","","",249,[[["parsestream",6]],["result",6]]],[11,"parse","","",251,[[["parsestream",6]],["result",6]]],[11,"parse","","",255,[[["parsestream",6]],["result",6]]],[11,"parse","","",267,[[["parsestream",6]],["result",6]]],[11,"parse","","",256,[[["parsestream",6]],["result",6]]],[11,"parse","","",265,[[["parsestream",6]],["result",6]]],[11,"parse","","",266,[[["parsestream",6]],["result",6]]],[11,"parse","","",257,[[["parsestream",6]],["result",6]]],[11,"parse","","",262,[[["parsestream",6]],["result",6]]],[11,"parse","","",260,[[["parsestream",6]],["result",6]]],[11,"parse","","",269,[[["parsestream",6]],["result",6]]],[11,"parse","","",261,[[["parsestream",6]],["result",6]]],[11,"parse","","",264,[[["parsestream",6]],["result",6]]],[11,"parse","","",254,[[["parsestream",6]],["result",6]]],[11,"parse","","",268,[[["parsestream",6]],["result",6]]],[11,"parse","","",259,[[["parsestream",6]],["result",6]]],[11,"parse","","",258,[[["parsestream",6]],["result",6]]],[11,"parse","","",263,[[["parsestream",6]],["result",6]]],[11,"parse","","",253,[[["parsestream",6]],["result",6]]],[11,"parse","","",252,[[["parsestream",6]],["result",6]]],[11,"parse","","",272,[[["parsestream",6]],["result",6]]],[11,"parse","","",293,[[["parsestream",6]],["result",6]]],[11,"parse","","",291,[[["parsestream",6]],["result",6]]],[11,"parse","","",288,[[["parsestream",6]],["result",6]]],[11,"parse","","",292,[[["parsestream",6]],["result",6]]],[11,"parse","","",295,[[["parsestream",6]],["result",6]]],[11,"parse","","",289,[[["parsestream",6]],["result",6]]],[11,"parse","","",290,[[["parsestream",6]],["result",6]]],[11,"parse","syn::parse","",314,[[["parsestream",6]],["result",6]]],[11,"drop","","",114,[[]]],[11,"from","syn","",297,[[["selfvalue",3]],["ident",3]]],[11,"from","","",297,[[["selftype",3]],["ident",3]]],[11,"from","","",297,[[["super",3]],["ident",3]]],[11,"from","","",297,[[["crate",3]],["ident",3]]],[11,"from","","",297,[[["extern",3]],["ident",3]]],[11,"from","","",297,[[["underscore",3]],["ident",3]]],[11,"from","","",119,[[["path",3]],["meta",4]]],[11,"from","","",119,[[["metalist",3]],["meta",4]]],[11,"from","","",119,[[["metanamevalue",3]],["meta",4]]],[11,"from","","",122,[[["meta",4]],["nestedmeta",4]]],[11,"from","","",122,[[["lit",4]],["nestedmeta",4]]],[11,"from","","",124,[[["fieldsnamed",3]],["fields",4]]],[11,"from","","",124,[[["fieldsunnamed",3]],["fields",4]]],[11,"from","","",131,[[["vispublic",3]],["visibility",4]]],[11,"from","","",131,[[["viscrate",3]],["visibility",4]]],[11,"from","","",131,[[["visrestricted",3]],["visibility",4]]],[11,"from","","",138,[[["exprarray",3]],["expr",4]]],[11,"from","","",138,[[["exprassign",3]],["expr",4]]],[11,"from","","",138,[[["exprassignop",3]],["expr",4]]],[11,"from","","",138,[[["exprasync",3]],["expr",4]]],[11,"from","","",138,[[["exprawait",3]],["expr",4]]],[11,"from","","",138,[[["exprbinary",3]],["expr",4]]],[11,"from","","",138,[[["exprblock",3]],["expr",4]]],[11,"from","","",138,[[["exprbox",3]],["expr",4]]],[11,"from","","",138,[[["exprbreak",3]],["expr",4]]],[11,"from","","",138,[[["exprcall",3]],["expr",4]]],[11,"from","","",138,[[["exprcast",3]],["expr",4]]],[11,"from","","",138,[[["exprclosure",3]],["expr",4]]],[11,"from","","",138,[[["exprcontinue",3]],["expr",4]]],[11,"from","","",138,[[["exprfield",3]],["expr",4]]],[11,"from","","",138,[[["exprforloop",3]],["expr",4]]],[11,"from","","",138,[[["exprgroup",3]],["expr",4]]],[11,"from","","",138,[[["exprif",3]],["expr",4]]],[11,"from","","",138,[[["exprindex",3]],["expr",4]]],[11,"from","","",138,[[["exprlet",3]],["expr",4]]],[11,"from","","",138,[[["exprlit",3]],["expr",4]]],[11,"from","","",138,[[["exprloop",3]],["expr",4]]],[11,"from","","",138,[[["exprmacro",3]],["expr",4]]],[11,"from","","",138,[[["exprmatch",3]],["expr",4]]],[11,"from","","",138,[[["exprmethodcall",3]],["expr",4]]],[11,"from","","",138,[[["exprparen",3]],["expr",4]]],[11,"from","","",138,[[["exprpath",3]],["expr",4]]],[11,"from","","",138,[[["exprrange",3]],["expr",4]]],[11,"from","","",138,[[["exprreference",3]],["expr",4]]],[11,"from","","",138,[[["exprrepeat",3]],["expr",4]]],[11,"from","","",138,[[["exprreturn",3]],["expr",4]]],[11,"from","","",138,[[["exprstruct",3]],["expr",4]]],[11,"from","","",138,[[["exprtry",3]],["expr",4]]],[11,"from","","",138,[[["exprtryblock",3]],["expr",4]]],[11,"from","","",138,[[["exprtuple",3]],["expr",4]]],[11,"from","","",138,[[["exprtype",3]],["expr",4]]],[11,"from","","",138,[[["exprunary",3]],["expr",4]]],[11,"from","","",138,[[["exprunsafe",3]],["expr",4]]],[11,"from","","",138,[[["exprwhile",3]],["expr",4]]],[11,"from","","",138,[[["expryield",3]],["expr",4]]],[11,"from","","",178,[[["usize",15]],["index",3]]],[11,"from","","",182,[[["typeparam",3]],["genericparam",4]]],[11,"from","","",182,[[["lifetimedef",3]],["genericparam",4]]],[11,"from","","",182,[[["constparam",3]],["genericparam",4]]],[11,"from","","",190,[[["ident",3]]]],[11,"from","","",191,[[["traitbound",3]],["typeparambound",4]]],[11,"from","","",191,[[["lifetime",3]],["typeparambound",4]]],[11,"from","","",193,[[["predicatetype",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicatelifetime",3]],["wherepredicate",4]]],[11,"from","","",193,[[["predicateeq",3]],["wherepredicate",4]]],[11,"from","","",205,[[["itemconst",3]],["item",4]]],[11,"from","","",205,[[["itemenum",3]],["item",4]]],[11,"from","","",205,[[["itemexterncrate",3]],["item",4]]],[11,"from","","",205,[[["itemfn",3]],["item",4]]],[11,"from","","",205,[[["itemforeignmod",3]],["item",4]]],[11,"from","","",205,[[["itemimpl",3]],["item",4]]],[11,"from","","",205,[[["itemmacro",3]],["item",4]]],[11,"from","","",205,[[["itemmacro2",3]],["item",4]]],[11,"from","","",205,[[["itemmod",3]],["item",4]]],[11,"from","","",205,[[["itemstatic",3]],["item",4]]],[11,"from","","",205,[[["itemstruct",3]],["item",4]]],[11,"from","","",205,[[["itemtrait",3]],["item",4]]],[11,"from","","",205,[[["itemtraitalias",3]],["item",4]]],[11,"from","","",205,[[["itemtype",3]],["item",4]]],[11,"from","","",205,[[["itemunion",3]],["item",4]]],[11,"from","","",205,[[["itemuse",3]],["item",4]]],[11,"from","","",205,[[["deriveinput",3]],["item",4]]],[11,"from","","",246,[[["itemstruct",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemenum",3]],["deriveinput",3]]],[11,"from","","",246,[[["itemunion",3]],["deriveinput",3]]],[11,"from","","",234,[[["usepath",3]],["usetree",4]]],[11,"from","","",234,[[["usename",3]],["usetree",4]]],[11,"from","","",234,[[["userename",3]],["usetree",4]]],[11,"from","","",234,[[["useglob",3]],["usetree",4]]],[11,"from","","",234,[[["usegroup",3]],["usetree",4]]],[11,"from","","",195,[[["foreignitemfn",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemstatic",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemtype",3]],["foreignitem",4]]],[11,"from","","",195,[[["foreignitemmacro",3]],["foreignitem",4]]],[11,"from","","",224,[[["traititemconst",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmethod",3]],["traititem",4]]],[11,"from","","",224,[[["traititemtype",3]],["traititem",4]]],[11,"from","","",224,[[["traititemmacro",3]],["traititem",4]]],[11,"from","","",200,[[["implitemconst",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmethod",3]],["implitem",4]]],[11,"from","","",200,[[["implitemtype",3]],["implitem",4]]],[11,"from","","",200,[[["implitemmacro",3]],["implitem",4]]],[11,"from","","",194,[[["receiver",3]],["fnarg",4]]],[11,"from","","",194,[[["pattype",3]],["fnarg",4]]],[11,"from","","",237,[[["litstr",3]],["lit",4]]],[11,"from","","",237,[[["litbytestr",3]],["lit",4]]],[11,"from","","",237,[[["litbyte",3]],["lit",4]]],[11,"from","","",237,[[["litchar",3]],["lit",4]]],[11,"from","","",237,[[["litint",3]],["lit",4]]],[11,"from","","",237,[[["litfloat",3]],["lit",4]]],[11,"from","","",237,[[["litbool",3]],["lit",4]]],[11,"from","","",305,[[["literal",3]]]],[11,"from","","",306,[[["literal",3]]]],[11,"from","","",242,[[["datastruct",3]],["data",4]]],[11,"from","","",242,[[["dataenum",3]],["data",4]]],[11,"from","","",242,[[["dataunion",3]],["data",4]]],[11,"from","","",255,[[["typearray",3]],["type",4]]],[11,"from","","",255,[[["typebarefn",3]],["type",4]]],[11,"from","","",255,[[["typegroup",3]],["type",4]]],[11,"from","","",255,[[["typeimpltrait",3]],["type",4]]],[11,"from","","",255,[[["typeinfer",3]],["type",4]]],[11,"from","","",255,[[["typemacro",3]],["type",4]]],[11,"from","","",255,[[["typenever",3]],["type",4]]],[11,"from","","",255,[[["typeparen",3]],["type",4]]],[11,"from","","",255,[[["typepath",3]],["type",4]]],[11,"from","","",255,[[["typeptr",3]],["type",4]]],[11,"from","","",255,[[["typereference",3]],["type",4]]],[11,"from","","",255,[[["typeslice",3]],["type",4]]],[11,"from","","",255,[[["typetraitobject",3]],["type",4]]],[11,"from","","",255,[[["typetuple",3]],["type",4]]],[11,"from","","",272,[[["patbox",3]],["pat",4]]],[11,"from","","",272,[[["patident",3]],["pat",4]]],[11,"from","","",272,[[["patlit",3]],["pat",4]]],[11,"from","","",272,[[["patmacro",3]],["pat",4]]],[11,"from","","",272,[[["pator",3]],["pat",4]]],[11,"from","","",272,[[["patpath",3]],["pat",4]]],[11,"from","","",272,[[["patrange",3]],["pat",4]]],[11,"from","","",272,[[["patreference",3]],["pat",4]]],[11,"from","","",272,[[["patrest",3]],["pat",4]]],[11,"from","","",272,[[["patslice",3]],["pat",4]]],[11,"from","","",272,[[["patstruct",3]],["pat",4]]],[11,"from","","",272,[[["pattuple",3]],["pat",4]]],[11,"from","","",272,[[["pattuplestruct",3]],["pat",4]]],[11,"from","","",272,[[["pattype",3]],["pat",4]]],[11,"from","","",272,[[["patwild",3]],["pat",4]]],[11,"from","","",293,[[]]],[11,"from","","",295,[[]]],[11,"from","syn::parse","",116,[[["lexerror",3]]]],[11,"next_back","syn::punctuated","",307,[[],["option",4]]],[11,"next_back","","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","","",311,[[],["option",4]]],[11,"next_back","","",312,[[],["option",4]]],[11,"len","","",307,[[],["usize",15]]],[11,"len","","",308,[[],["usize",15]]],[11,"len","","",309,[[],["usize",15]]],[11,"len","","",310,[[],["usize",15]]],[11,"len","","",311,[[],["usize",15]]],[11,"len","","",312,[[],["usize",15]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","","",106,[[["intoiterator",8]]]],[11,"extend","syn::parse","",116,[[["intoiterator",8]]]],[11,"into_iter","syn","",124,[[]]],[11,"into_iter","syn::punctuated","",106,[[]]],[11,"into_iter","syn::parse","",116,[[]]],[11,"next","syn::punctuated","",307,[[],["option",4]]],[11,"size_hint","","",307,[[]]],[11,"next","","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"next","","",312,[[],["option",4]]],[11,"size_hint","","",312,[[]]],[11,"clone","syn::token","",0,[[]]],[11,"clone","","",1,[[]]],[11,"clone","","",2,[[]]],[11,"clone","","",3,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",5,[[]]],[11,"clone","","",6,[[]]],[11,"clone","","",7,[[]]],[11,"clone","","",8,[[]]],[11,"clone","","",9,[[]]],[11,"clone","","",10,[[]]],[11,"clone","","",11,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",13,[[]]],[11,"clone","","",14,[[]]],[11,"clone","","",15,[[]]],[11,"clone","","",16,[[]]],[11,"clone","","",17,[[]]],[11,"clone","","",18,[[]]],[11,"clone","","",19,[[]]],[11,"clone","","",20,[[]]],[11,"clone","","",21,[[]]],[11,"clone","","",22,[[]]],[11,"clone","","",23,[[]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[]]],[11,"clone","","",29,[[]]],[11,"clone","","",30,[[]]],[11,"clone","","",31,[[]]],[11,"clone","","",32,[[]]],[11,"clone","","",33,[[]]],[11,"clone","","",34,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"clone","","",37,[[]]],[11,"clone","","",38,[[]]],[11,"clone","","",39,[[]]],[11,"clone","","",40,[[]]],[11,"clone","","",41,[[]]],[11,"clone","","",42,[[]]],[11,"clone","","",43,[[]]],[11,"clone","","",44,[[]]],[11,"clone","","",45,[[]]],[11,"clone","","",46,[[]]],[11,"clone","","",47,[[]]],[11,"clone","","",48,[[]]],[11,"clone","","",49,[[]]],[11,"clone","","",50,[[]]],[11,"clone","","",51,[[]]],[11,"clone","","",52,[[]]],[11,"clone","","",53,[[]]],[11,"clone","","",54,[[]]],[11,"clone","","",55,[[]]],[11,"clone","","",56,[[]]],[11,"clone","","",57,[[]]],[11,"clone","","",58,[[]]],[11,"clone","","",59,[[]]],[11,"clone","","",60,[[]]],[11,"clone","","",61,[[]]],[11,"clone","","",62,[[]]],[11,"clone","","",63,[[]]],[11,"clone","","",64,[[]]],[11,"clone","","",65,[[]]],[11,"clone","","",66,[[]]],[11,"clone","","",67,[[]]],[11,"clone","","",68,[[]]],[11,"clone","","",69,[[]]],[11,"clone","","",70,[[]]],[11,"clone","","",71,[[]]],[11,"clone","","",72,[[]]],[11,"clone","","",73,[[]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[]]],[11,"clone","","",77,[[]]],[11,"clone","","",78,[[]]],[11,"clone","","",79,[[]]],[11,"clone","","",80,[[]]],[11,"clone","","",81,[[]]],[11,"clone","","",82,[[]]],[11,"clone","","",83,[[]]],[11,"clone","","",84,[[]]],[11,"clone","","",85,[[]]],[11,"clone","","",86,[[]]],[11,"clone","","",87,[[]]],[11,"clone","","",88,[[]]],[11,"clone","","",89,[[]]],[11,"clone","","",90,[[]]],[11,"clone","","",91,[[]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[]]],[11,"clone","","",95,[[]]],[11,"clone","","",96,[[]]],[11,"clone","","",97,[[]]],[11,"clone","","",98,[[]]],[11,"clone","","",99,[[]]],[11,"clone","","",100,[[]]],[11,"clone","","",101,[[]]],[11,"clone","","",102,[[]]],[11,"clone","syn","",298,[[]]],[11,"clone","","",299,[[]]],[11,"clone","","",300,[[]]],[11,"clone","","",236,[[]]],[11,"clone","","",301,[[]]],[11,"clone","","",302,[[]]],[11,"clone","","",303,[[]]],[11,"clone","","",304,[[]]],[11,"clone","","",305,[[]]],[11,"clone","","",306,[[]]],[11,"clone","syn::buffer","",104,[[]]],[11,"clone","syn::punctuated","",106,[[]]],[11,"clone","","",307,[[]]],[11,"clone","","",309,[[]]],[11,"clone","","",310,[[]]],[11,"clone","","",311,[[]]],[11,"clone","","",107,[[]]],[11,"clone","syn","",252,[[]]],[11,"clone","","",288,[[]]],[11,"clone","","",132,[[]]],[11,"clone","","",117,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",253,[[]]],[11,"clone","","",247,[[]]],[11,"clone","","",289,[[]]],[11,"clone","","",249,[[]]],[11,"clone","","",180,[[]]],[11,"clone","","",181,[[]]],[11,"clone","","",290,[[]]],[11,"clone","","",242,[[]]],[11,"clone","","",243,[[]]],[11,"clone","","",244,[[]]],[11,"clone","","",245,[[]]],[11,"clone","","",246,[[]]],[11,"clone","","",138,[[]]],[11,"clone","","",139,[[]]],[11,"clone","","",140,[[]]],[11,"clone","","",141,[[]]],[11,"clone","","",142,[[]]],[11,"clone","","",143,[[]]],[11,"clone","","",144,[[]]],[11,"clone","","",145,[[]]],[11,"clone","","",146,[[]]],[11,"clone","","",147,[[]]],[11,"clone","","",148,[[]]],[11,"clone","","",149,[[]]],[11,"clone","","",150,[[]]],[11,"clone","","",151,[[]]],[11,"clone","","",152,[[]]],[11,"clone","","",153,[[]]],[11,"clone","","",154,[[]]],[11,"clone","","",155,[[]]],[11,"clone","","",156,[[]]],[11,"clone","","",157,[[]]],[11,"clone","","",158,[[]]],[11,"clone","","",159,[[]]],[11,"clone","","",160,[[]]],[11,"clone","","",161,[[]]],[11,"clone","","",162,[[]]],[11,"clone","","",163,[[]]],[11,"clone","","",164,[[]]],[11,"clone","","",165,[[]]],[11,"clone","","",166,[[]]],[11,"clone","","",167,[[]]],[11,"clone","","",168,[[]]],[11,"clone","","",169,[[]]],[11,"clone","","",170,[[]]],[11,"clone","","",171,[[]]],[11,"clone","","",172,[[]]],[11,"clone","","",173,[[]]],[11,"clone","","",174,[[]]],[11,"clone","","",175,[[]]],[11,"clone","","",176,[[]]],[11,"clone","","",177,[[]]],[11,"clone","","",123,[[]]],[11,"clone","","",271,[[]]],[11,"clone","","",133,[[]]],[11,"clone","","",124,[[]]],[11,"clone","","",125,[[]]],[11,"clone","","",126,[[]]],[11,"clone","","",235,[[]]],[11,"clone","","",194,[[]]],[11,"clone","","",195,[[]]],[11,"clone","","",196,[[]]],[11,"clone","","",197,[[]]],[11,"clone","","",198,[[]]],[11,"clone","","",199,[[]]],[11,"clone","","",291,[[]]],[11,"clone","","",134,[[]]],[11,"clone","","",182,[[]]],[11,"clone","","",183,[[]]],[11,"clone","","",200,[[]]],[11,"clone","","",201,[[]]],[11,"clone","","",202,[[]]],[11,"clone","","",203,[[]]],[11,"clone","","",204,[[]]],[11,"clone","","",178,[[]]],[11,"clone","","",205,[[]]],[11,"clone","","",206,[[]]],[11,"clone","","",207,[[]]],[11,"clone","","",208,[[]]],[11,"clone","","",209,[[]]],[11,"clone","","",210,[[]]],[11,"clone","","",211,[[]]],[11,"clone","","",212,[[]]],[11,"clone","","",213,[[]]],[11,"clone","","",214,[[]]],[11,"clone","","",215,[[]]],[11,"clone","","",216,[[]]],[11,"clone","","",217,[[]]],[11,"clone","","",218,[[]]],[11,"clone","","",219,[[]]],[11,"clone","","",220,[[]]],[11,"clone","","",221,[[]]],[11,"clone","","",135,[[]]],[11,"clone","","",184,[[]]],[11,"clone","","",237,[[]]],[11,"clone","","",238,[[]]],[11,"clone","","",250,[[]]],[11,"clone","","",240,[[]]],[11,"clone","","",241,[[]]],[11,"clone","","",179,[[]]],[11,"clone","","",119,[[]]],[11,"clone","","",120,[[]]],[11,"clone","","",121,[[]]],[11,"clone","","",136,[[]]],[11,"clone","","",122,[[]]],[11,"clone","","",292,[[]]],[11,"clone","","",272,[[]]],[11,"clone","","",273,[[]]],[11,"clone","","",274,[[]]],[11,"clone","","",275,[[]]],[11,"clone","","",276,[[]]],[11,"clone","","",277,[[]]],[11,"clone","","",278,[[]]],[11,"clone","","",279,[[]]],[11,"clone","","",280,[[]]],[11,"clone","","",281,[[]]],[11,"clone","","",282,[[]]],[11,"clone","","",283,[[]]],[11,"clone","","",284,[[]]],[11,"clone","","",285,[[]]],[11,"clone","","",286,[[]]],[11,"clone","","",287,[[]]],[11,"clone","","",293,[[]]],[11,"clone","","",294,[[]]],[11,"clone","","",295,[[]]],[11,"clone","","",185,[[]]],[11,"clone","","",186,[[]]],[11,"clone","","",187,[[]]],[11,"clone","","",296,[[]]],[11,"clone","","",137,[[]]],[11,"clone","","",222,[[]]],[11,"clone","","",254,[[]]],[11,"clone","","",223,[[]]],[11,"clone","","",251,[[]]],[11,"clone","","",188,[[]]],[11,"clone","","",189,[[]]],[11,"clone","","",224,[[]]],[11,"clone","","",225,[[]]],[11,"clone","","",226,[[]]],[11,"clone","","",227,[[]]],[11,"clone","","",228,[[]]],[11,"clone","","",255,[[]]],[11,"clone","","",256,[[]]],[11,"clone","","",257,[[]]],[11,"clone","","",258,[[]]],[11,"clone","","",259,[[]]],[11,"clone","","",260,[[]]],[11,"clone","","",261,[[]]],[11,"clone","","",262,[[]]],[11,"clone","","",190,[[]]],[11,"clone","","",191,[[]]],[11,"clone","","",263,[[]]],[11,"clone","","",264,[[]]],[11,"clone","","",265,[[]]],[11,"clone","","",266,[[]]],[11,"clone","","",267,[[]]],[11,"clone","","",268,[[]]],[11,"clone","","",269,[[]]],[11,"clone","","",248,[[]]],[11,"clone","","",229,[[]]],[11,"clone","","",230,[[]]],[11,"clone","","",231,[[]]],[11,"clone","","",232,[[]]],[11,"clone","","",233,[[]]],[11,"clone","","",234,[[]]],[11,"clone","","",270,[[]]],[11,"clone","","",127,[[]]],[11,"clone","","",128,[[]]],[11,"clone","","",129,[[]]],[11,"clone","","",130,[[]]],[11,"clone","","",131,[[]]],[11,"clone","","",192,[[]]],[11,"clone","","",193,[[]]],[11,"clone","syn::parse","",113,[[]]],[11,"clone","","",116,[[]]],[11,"default","syn::token","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"default","","",4,[[]]],[11,"default","","",5,[[]]],[11,"default","","",6,[[]]],[11,"default","","",7,[[]]],[11,"default","","",8,[[]]],[11,"default","","",9,[[]]],[11,"default","","",10,[[]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",18,[[]]],[11,"default","","",19,[[]]],[11,"default","","",20,[[]]],[11,"default","","",21,[[]]],[11,"default","","",22,[[]]],[11,"default","","",23,[[]]],[11,"default","","",24,[[]]],[11,"default","","",25,[[]]],[11,"default","","",26,[[]]],[11,"default","","",27,[[]]],[11,"default","","",28,[[]]],[11,"default","","",29,[[]]],[11,"default","","",30,[[]]],[11,"default","","",31,[[]]],[11,"default","","",32,[[]]],[11,"default","","",33,[[]]],[11,"default","","",34,[[]]],[11,"default","","",35,[[]]],[11,"default","","",36,[[]]],[11,"default","","",37,[[]]],[11,"default","","",38,[[]]],[11,"default","","",39,[[]]],[11,"default","","",40,[[]]],[11,"default","","",41,[[]]],[11,"default","","",42,[[]]],[11,"default","","",43,[[]]],[11,"default","","",44,[[]]],[11,"default","","",45,[[]]],[11,"default","","",46,[[]]],[11,"default","","",47,[[]]],[11,"default","","",48,[[]]],[11,"default","","",49,[[]]],[11,"default","","",50,[[]]],[11,"default","","",51,[[]]],[11,"default","","",52,[[]]],[11,"default","","",53,[[]]],[11,"default","","",54,[[]]],[11,"default","","",55,[[]]],[11,"default","","",56,[[]]],[11,"default","","",57,[[]]],[11,"default","","",58,[[]]],[11,"default","","",59,[[]]],[11,"default","","",60,[[]]],[11,"default","","",61,[[]]],[11,"default","","",62,[[]]],[11,"default","","",63,[[]]],[11,"default","","",64,[[]]],[11,"default","","",65,[[]]],[11,"default","","",66,[[]]],[11,"default","","",67,[[]]],[11,"default","","",68,[[]]],[11,"default","","",69,[[]]],[11,"default","","",70,[[]]],[11,"default","","",71,[[]]],[11,"default","","",72,[[]]],[11,"default","","",73,[[]]],[11,"default","","",74,[[]]],[11,"default","","",75,[[]]],[11,"default","","",76,[[]]],[11,"default","","",77,[[]]],[11,"default","","",78,[[]]],[11,"default","","",79,[[]]],[11,"default","","",80,[[]]],[11,"default","","",81,[[]]],[11,"default","","",82,[[]]],[11,"default","","",83,[[]]],[11,"default","","",84,[[]]],[11,"default","","",85,[[]]],[11,"default","","",86,[[]]],[11,"default","","",87,[[]]],[11,"default","","",88,[[]]],[11,"default","","",89,[[]]],[11,"default","","",90,[[]]],[11,"default","","",91,[[]]],[11,"default","","",92,[[]]],[11,"default","","",93,[[]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[]]],[11,"default","","",96,[[]]],[11,"default","","",97,[[]]],[11,"default","","",98,[[]]],[11,"default","","",99,[[]]],[11,"default","","",100,[[]]],[11,"default","","",101,[[]]],[11,"default","","",102,[[]]],[11,"default","syn","",183,[[]]],[11,"default","","",180,[[]]],[11,"default","","",294,[[]]],[11,"default","syn::punctuated","",106,[[]]],[11,"cmp","syn","",236,[[["lifetime",3]],["ordering",4]]],[11,"eq","","",179,[[],["bool",15]]],[11,"eq","","",178,[[],["bool",15]]],[11,"eq","","",236,[[["lifetime",3]],["bool",15]]],[11,"eq","syn::buffer","",104,[[],["bool",15]]],[11,"partial_cmp","syn","",236,[[["lifetime",3]],[["option",4],["ordering",4]]]],[11,"deref","syn::token","",0,[[]]],[11,"deref","","",53,[[]]],[11,"deref","","",55,[[]]],[11,"deref","","",58,[[]]],[11,"deref","","",59,[[]]],[11,"deref","","",60,[[]]],[11,"deref","","",62,[[]]],[11,"deref","","",64,[[]]],[11,"deref","","",65,[[]]],[11,"deref","","",67,[[]]],[11,"deref","","",68,[[]]],[11,"deref","","",72,[[]]],[11,"deref","","",75,[[]]],[11,"deref","","",77,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",83,[[]]],[11,"deref","","",84,[[]]],[11,"deref","","",87,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",95,[[]]],[11,"deref","","",96,[[]]],[11,"deref","","",98,[[]]],[11,"deref","syn::parse","",113,[[]]],[11,"deref_mut","syn::token","",0,[[]]],[11,"deref_mut","","",53,[[]]],[11,"deref_mut","","",55,[[]]],[11,"deref_mut","","",58,[[]]],[11,"deref_mut","","",59,[[]]],[11,"deref_mut","","",60,[[]]],[11,"deref_mut","","",62,[[]]],[11,"deref_mut","","",64,[[]]],[11,"deref_mut","","",65,[[]]],[11,"deref_mut","","",67,[[]]],[11,"deref_mut","","",68,[[]]],[11,"deref_mut","","",72,[[]]],[11,"deref_mut","","",75,[[]]],[11,"deref_mut","","",77,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",83,[[]]],[11,"deref_mut","","",84,[[]]],[11,"deref_mut","","",87,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",95,[[]]],[11,"deref_mut","","",96,[[]]],[11,"deref_mut","","",98,[[]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","syn","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",305,[[["formatter",3]],["result",6]]],[11,"fmt","","",306,[[["formatter",3]],["result",6]]],[11,"fmt","syn::parse","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"index","syn::punctuated","",106,[[["usize",15]]]],[11,"index_mut","","",106,[[["usize",15]]]],[11,"hash","syn","",179,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",236,[[]]],[11,"from_iter","syn::punctuated","",106,[[["intoiterator",8]]]],[11,"from_iter","","",106,[[["intoiterator",8]]]],[11,"to_tokens","syn::token","",0,[[["tokenstream",3]]]],[11,"to_tokens","","",1,[[["tokenstream",3]]]],[11,"to_tokens","","",2,[[["tokenstream",3]]]],[11,"to_tokens","","",3,[[["tokenstream",3]]]],[11,"to_tokens","","",4,[[["tokenstream",3]]]],[11,"to_tokens","","",5,[[["tokenstream",3]]]],[11,"to_tokens","","",6,[[["tokenstream",3]]]],[11,"to_tokens","","",7,[[["tokenstream",3]]]],[11,"to_tokens","","",8,[[["tokenstream",3]]]],[11,"to_tokens","","",9,[[["tokenstream",3]]]],[11,"to_tokens","","",10,[[["tokenstream",3]]]],[11,"to_tokens","","",11,[[["tokenstream",3]]]],[11,"to_tokens","","",12,[[["tokenstream",3]]]],[11,"to_tokens","","",13,[[["tokenstream",3]]]],[11,"to_tokens","","",14,[[["tokenstream",3]]]],[11,"to_tokens","","",15,[[["tokenstream",3]]]],[11,"to_tokens","","",16,[[["tokenstream",3]]]],[11,"to_tokens","","",17,[[["tokenstream",3]]]],[11,"to_tokens","","",18,[[["tokenstream",3]]]],[11,"to_tokens","","",19,[[["tokenstream",3]]]],[11,"to_tokens","","",20,[[["tokenstream",3]]]],[11,"to_tokens","","",21,[[["tokenstream",3]]]],[11,"to_tokens","","",22,[[["tokenstream",3]]]],[11,"to_tokens","","",23,[[["tokenstream",3]]]],[11,"to_tokens","","",24,[[["tokenstream",3]]]],[11,"to_tokens","","",25,[[["tokenstream",3]]]],[11,"to_tokens","","",26,[[["tokenstream",3]]]],[11,"to_tokens","","",27,[[["tokenstream",3]]]],[11,"to_tokens","","",28,[[["tokenstream",3]]]],[11,"to_tokens","","",29,[[["tokenstream",3]]]],[11,"to_tokens","","",30,[[["tokenstream",3]]]],[11,"to_tokens","","",31,[[["tokenstream",3]]]],[11,"to_tokens","","",32,[[["tokenstream",3]]]],[11,"to_tokens","","",33,[[["tokenstream",3]]]],[11,"to_tokens","","",34,[[["tokenstream",3]]]],[11,"to_tokens","","",35,[[["tokenstream",3]]]],[11,"to_tokens","","",36,[[["tokenstream",3]]]],[11,"to_tokens","","",37,[[["tokenstream",3]]]],[11,"to_tokens","","",38,[[["tokenstream",3]]]],[11,"to_tokens","","",39,[[["tokenstream",3]]]],[11,"to_tokens","","",40,[[["tokenstream",3]]]],[11,"to_tokens","","",41,[[["tokenstream",3]]]],[11,"to_tokens","","",42,[[["tokenstream",3]]]],[11,"to_tokens","","",43,[[["tokenstream",3]]]],[11,"to_tokens","","",44,[[["tokenstream",3]]]],[11,"to_tokens","","",45,[[["tokenstream",3]]]],[11,"to_tokens","","",46,[[["tokenstream",3]]]],[11,"to_tokens","","",47,[[["tokenstream",3]]]],[11,"to_tokens","","",48,[[["tokenstream",3]]]],[11,"to_tokens","","",49,[[["tokenstream",3]]]],[11,"to_tokens","","",50,[[["tokenstream",3]]]],[11,"to_tokens","","",51,[[["tokenstream",3]]]],[11,"to_tokens","","",52,[[["tokenstream",3]]]],[11,"to_tokens","","",53,[[["tokenstream",3]]]],[11,"to_tokens","","",54,[[["tokenstream",3]]]],[11,"to_tokens","","",55,[[["tokenstream",3]]]],[11,"to_tokens","","",56,[[["tokenstream",3]]]],[11,"to_tokens","","",57,[[["tokenstream",3]]]],[11,"to_tokens","","",58,[[["tokenstream",3]]]],[11,"to_tokens","","",59,[[["tokenstream",3]]]],[11,"to_tokens","","",60,[[["tokenstream",3]]]],[11,"to_tokens","","",61,[[["tokenstream",3]]]],[11,"to_tokens","","",62,[[["tokenstream",3]]]],[11,"to_tokens","","",63,[[["tokenstream",3]]]],[11,"to_tokens","","",64,[[["tokenstream",3]]]],[11,"to_tokens","","",65,[[["tokenstream",3]]]],[11,"to_tokens","","",66,[[["tokenstream",3]]]],[11,"to_tokens","","",67,[[["tokenstream",3]]]],[11,"to_tokens","","",68,[[["tokenstream",3]]]],[11,"to_tokens","","",69,[[["tokenstream",3]]]],[11,"to_tokens","","",70,[[["tokenstream",3]]]],[11,"to_tokens","","",71,[[["tokenstream",3]]]],[11,"to_tokens","","",72,[[["tokenstream",3]]]],[11,"to_tokens","","",73,[[["tokenstream",3]]]],[11,"to_tokens","","",74,[[["tokenstream",3]]]],[11,"to_tokens","","",75,[[["tokenstream",3]]]],[11,"to_tokens","","",76,[[["tokenstream",3]]]],[11,"to_tokens","","",77,[[["tokenstream",3]]]],[11,"to_tokens","","",78,[[["tokenstream",3]]]],[11,"to_tokens","","",79,[[["tokenstream",3]]]],[11,"to_tokens","","",80,[[["tokenstream",3]]]],[11,"to_tokens","","",81,[[["tokenstream",3]]]],[11,"to_tokens","","",82,[[["tokenstream",3]]]],[11,"to_tokens","","",83,[[["tokenstream",3]]]],[11,"to_tokens","","",84,[[["tokenstream",3]]]],[11,"to_tokens","","",85,[[["tokenstream",3]]]],[11,"to_tokens","","",86,[[["tokenstream",3]]]],[11,"to_tokens","","",87,[[["tokenstream",3]]]],[11,"to_tokens","","",88,[[["tokenstream",3]]]],[11,"to_tokens","","",89,[[["tokenstream",3]]]],[11,"to_tokens","","",90,[[["tokenstream",3]]]],[11,"to_tokens","","",91,[[["tokenstream",3]]]],[11,"to_tokens","","",92,[[["tokenstream",3]]]],[11,"to_tokens","","",93,[[["tokenstream",3]]]],[11,"to_tokens","","",94,[[["tokenstream",3]]]],[11,"to_tokens","","",95,[[["tokenstream",3]]]],[11,"to_tokens","","",96,[[["tokenstream",3]]]],[11,"to_tokens","","",97,[[["tokenstream",3]]]],[11,"to_tokens","","",98,[[["tokenstream",3]]]],[11,"to_tokens","syn","",119,[[["tokenstream",3]]]],[11,"to_tokens","","",122,[[["tokenstream",3]]]],[11,"to_tokens","","",118,[[["tokenstream",3]]]],[11,"to_tokens","","",120,[[["tokenstream",3]]]],[11,"to_tokens","","",121,[[["tokenstream",3]]]],[11,"to_tokens","","",124,[[["tokenstream",3]]]],[11,"to_tokens","","",131,[[["tokenstream",3]]]],[11,"to_tokens","","",127,[[["tokenstream",3]]]],[11,"to_tokens","","",125,[[["tokenstream",3]]]],[11,"to_tokens","","",126,[[["tokenstream",3]]]],[11,"to_tokens","","",123,[[["tokenstream",3]]]],[11,"to_tokens","","",129,[[["tokenstream",3]]]],[11,"to_tokens","","",128,[[["tokenstream",3]]]],[11,"to_tokens","","",130,[[["tokenstream",3]]]],[11,"to_tokens","","",138,[[["tokenstream",3]]]],[11,"to_tokens","","",146,[[["tokenstream",3]]]],[11,"to_tokens","","",139,[[["tokenstream",3]]]],[11,"to_tokens","","",148,[[["tokenstream",3]]]],[11,"to_tokens","","",162,[[["tokenstream",3]]]],[11,"to_tokens","","",136,[[["tokenstream",3]]]],[11,"to_tokens","","",134,[[["tokenstream",3]]]],[11,"to_tokens","","",172,[[["tokenstream",3]]]],[11,"to_tokens","","",144,[[["tokenstream",3]]]],[11,"to_tokens","","",174,[[["tokenstream",3]]]],[11,"to_tokens","","",158,[[["tokenstream",3]]]],[11,"to_tokens","","",149,[[["tokenstream",3]]]],[11,"to_tokens","","",173,[[["tokenstream",3]]]],[11,"to_tokens","","",157,[[["tokenstream",3]]]],[11,"to_tokens","","",155,[[["tokenstream",3]]]],[11,"to_tokens","","",176,[[["tokenstream",3]]]],[11,"to_tokens","","",153,[[["tokenstream",3]]]],[11,"to_tokens","","",159,[[["tokenstream",3]]]],[11,"to_tokens","","",161,[[["tokenstream",3]]]],[11,"to_tokens","","",142,[[["tokenstream",3]]]],[11,"to_tokens","","",143,[[["tokenstream",3]]]],[11,"to_tokens","","",171,[[["tokenstream",3]]]],[11,"to_tokens","","",177,[[["tokenstream",3]]]],[11,"to_tokens","","",150,[[["tokenstream",3]]]],[11,"to_tokens","","",175,[[["tokenstream",3]]]],[11,"to_tokens","","",145,[[["tokenstream",3]]]],[11,"to_tokens","","",140,[[["tokenstream",3]]]],[11,"to_tokens","","",141,[[["tokenstream",3]]]],[11,"to_tokens","","",152,[[["tokenstream",3]]]],[11,"to_tokens","","",179,[[["tokenstream",3]]]],[11,"to_tokens","","",178,[[["tokenstream",3]]]],[11,"to_tokens","","",156,[[["tokenstream",3]]]],[11,"to_tokens","","",165,[[["tokenstream",3]]]],[11,"to_tokens","","",164,[[["tokenstream",3]]]],[11,"to_tokens","","",166,[[["tokenstream",3]]]],[11,"to_tokens","","",147,[[["tokenstream",3]]]],[11,"to_tokens","","",151,[[["tokenstream",3]]]],[11,"to_tokens","","",168,[[["tokenstream",3]]]],[11,"to_tokens","","",160,[[["tokenstream",3]]]],[11,"to_tokens","","",169,[[["tokenstream",3]]]],[11,"to_tokens","","",167,[[["tokenstream",3]]]],[11,"to_tokens","","",154,[[["tokenstream",3]]]],[11,"to_tokens","","",163,[[["tokenstream",3]]]],[11,"to_tokens","","",170,[[["tokenstream",3]]]],[11,"to_tokens","","",135,[[["tokenstream",3]]]],[11,"to_tokens","","",133,[[["tokenstream",3]]]],[11,"to_tokens","","",132,[[["tokenstream",3]]]],[11,"to_tokens","","",182,[[["tokenstream",3]]]],[11,"to_tokens","","",191,[[["tokenstream",3]]]],[11,"to_tokens","","",193,[[["tokenstream",3]]]],[11,"to_tokens","","",183,[[["tokenstream",3]]]],[11,"to_tokens","","",298,[[["tokenstream",3]]]],[11,"to_tokens","","",299,[[["tokenstream",3]]]],[11,"to_tokens","","",300,[[["tokenstream",3]]]],[11,"to_tokens","","",180,[[["tokenstream",3]]]],[11,"to_tokens","","",184,[[["tokenstream",3]]]],[11,"to_tokens","","",190,[[["tokenstream",3]]]],[11,"to_tokens","","",188,[[["tokenstream",3]]]],[11,"to_tokens","","",189,[[["tokenstream",3]]]],[11,"to_tokens","","",181,[[["tokenstream",3]]]],[11,"to_tokens","","",192,[[["tokenstream",3]]]],[11,"to_tokens","","",187,[[["tokenstream",3]]]],[11,"to_tokens","","",186,[[["tokenstream",3]]]],[11,"to_tokens","","",185,[[["tokenstream",3]]]],[11,"to_tokens","","",205,[[["tokenstream",3]]]],[11,"to_tokens","","",234,[[["tokenstream",3]]]],[11,"to_tokens","","",195,[[["tokenstream",3]]]],[11,"to_tokens","","",224,[[["tokenstream",3]]]],[11,"to_tokens","","",200,[[["tokenstream",3]]]],[11,"to_tokens","","",194,[[["tokenstream",3]]]],[11,"to_tokens","","",208,[[["tokenstream",3]]]],[11,"to_tokens","","",221,[[["tokenstream",3]]]],[11,"to_tokens","","",215,[[["tokenstream",3]]]],[11,"to_tokens","","",206,[[["tokenstream",3]]]],[11,"to_tokens","","",209,[[["tokenstream",3]]]],[11,"to_tokens","","",214,[[["tokenstream",3]]]],[11,"to_tokens","","",210,[[["tokenstream",3]]]],[11,"to_tokens","","",219,[[["tokenstream",3]]]],[11,"to_tokens","","",207,[[["tokenstream",3]]]],[11,"to_tokens","","",216,[[["tokenstream",3]]]],[11,"to_tokens","","",220,[[["tokenstream",3]]]],[11,"to_tokens","","",217,[[["tokenstream",3]]]],[11,"to_tokens","","",218,[[["tokenstream",3]]]],[11,"to_tokens","","",211,[[["tokenstream",3]]]],[11,"to_tokens","","",212,[[["tokenstream",3]]]],[11,"to_tokens","","",213,[[["tokenstream",3]]]],[11,"to_tokens","","",232,[[["tokenstream",3]]]],[11,"to_tokens","","",231,[[["tokenstream",3]]]],[11,"to_tokens","","",233,[[["tokenstream",3]]]],[11,"to_tokens","","",229,[[["tokenstream",3]]]],[11,"to_tokens","","",230,[[["tokenstream",3]]]],[11,"to_tokens","","",225,[[["tokenstream",3]]]],[11,"to_tokens","","",227,[[["tokenstream",3]]]],[11,"to_tokens","","",228,[[["tokenstream",3]]]],[11,"to_tokens","","",226,[[["tokenstream",3]]]],[11,"to_tokens","","",201,[[["tokenstream",3]]]],[11,"to_tokens","","",203,[[["tokenstream",3]]]],[11,"to_tokens","","",204,[[["tokenstream",3]]]],[11,"to_tokens","","",202,[[["tokenstream",3]]]],[11,"to_tokens","","",196,[[["tokenstream",3]]]],[11,"to_tokens","","",198,[[["tokenstream",3]]]],[11,"to_tokens","","",199,[[["tokenstream",3]]]],[11,"to_tokens","","",197,[[["tokenstream",3]]]],[11,"to_tokens","","",223,[[["tokenstream",3]]]],[11,"to_tokens","","",222,[[["tokenstream",3]]]],[11,"to_tokens","","",235,[[["tokenstream",3]]]],[11,"to_tokens","","",236,[[["tokenstream",3]]]],[11,"to_tokens","","",237,[[["tokenstream",3]]]],[11,"to_tokens","","",301,[[["tokenstream",3]]]],[11,"to_tokens","","",302,[[["tokenstream",3]]]],[11,"to_tokens","","",303,[[["tokenstream",3]]]],[11,"to_tokens","","",304,[[["tokenstream",3]]]],[11,"to_tokens","","",305,[[["tokenstream",3]]]],[11,"to_tokens","","",306,[[["tokenstream",3]]]],[11,"to_tokens","","",238,[[["tokenstream",3]]]],[11,"to_tokens","","",240,[[["tokenstream",3]]]],[11,"to_tokens","","",246,[[["tokenstream",3]]]],[11,"to_tokens","","",247,[[["tokenstream",3]]]],[11,"to_tokens","","",248,[[["tokenstream",3]]]],[11,"to_tokens","","",249,[[["tokenstream",3]]]],[11,"to_tokens","","",251,[[["tokenstream",3]]]],[11,"to_tokens","","",250,[[["tokenstream",3]]]],[11,"to_tokens","","",255,[[["tokenstream",3]]]],[11,"to_tokens","","",267,[[["tokenstream",3]]]],[11,"to_tokens","","",256,[[["tokenstream",3]]]],[11,"to_tokens","","",265,[[["tokenstream",3]]]],[11,"to_tokens","","",266,[[["tokenstream",3]]]],[11,"to_tokens","","",257,[[["tokenstream",3]]]],[11,"to_tokens","","",262,[[["tokenstream",3]]]],[11,"to_tokens","","",269,[[["tokenstream",3]]]],[11,"to_tokens","","",264,[[["tokenstream",3]]]],[11,"to_tokens","","",268,[[["tokenstream",3]]]],[11,"to_tokens","","",259,[[["tokenstream",3]]]],[11,"to_tokens","","",258,[[["tokenstream",3]]]],[11,"to_tokens","","",263,[[["tokenstream",3]]]],[11,"to_tokens","","",260,[[["tokenstream",3]]]],[11,"to_tokens","","",261,[[["tokenstream",3]]]],[11,"to_tokens","","",254,[[["tokenstream",3]]]],[11,"to_tokens","","",253,[[["tokenstream",3]]]],[11,"to_tokens","","",270,[[["tokenstream",3]]]],[11,"to_tokens","","",252,[[["tokenstream",3]]]],[11,"to_tokens","","",272,[[["tokenstream",3]]]],[11,"to_tokens","","",287,[[["tokenstream",3]]]],[11,"to_tokens","","",274,[[["tokenstream",3]]]],[11,"to_tokens","","",283,[[["tokenstream",3]]]],[11,"to_tokens","","",285,[[["tokenstream",3]]]],[11,"to_tokens","","",286,[[["tokenstream",3]]]],[11,"to_tokens","","",278,[[["tokenstream",3]]]],[11,"to_tokens","","",284,[[["tokenstream",3]]]],[11,"to_tokens","","",273,[[["tokenstream",3]]]],[11,"to_tokens","","",280,[[["tokenstream",3]]]],[11,"to_tokens","","",281,[[["tokenstream",3]]]],[11,"to_tokens","","",275,[[["tokenstream",3]]]],[11,"to_tokens","","",279,[[["tokenstream",3]]]],[11,"to_tokens","","",282,[[["tokenstream",3]]]],[11,"to_tokens","","",276,[[["tokenstream",3]]]],[11,"to_tokens","","",277,[[["tokenstream",3]]]],[11,"to_tokens","","",271,[[["tokenstream",3]]]],[11,"to_tokens","","",293,[[["tokenstream",3]]]],[11,"to_tokens","","",295,[[["tokenstream",3]]]],[11,"to_tokens","","",294,[[["tokenstream",3]]]],[11,"to_tokens","","",291,[[["tokenstream",3]]]],[11,"to_tokens","","",288,[[["tokenstream",3]]]],[11,"to_tokens","","",289,[[["tokenstream",3]]]],[11,"to_tokens","","",290,[[["tokenstream",3]]]],[11,"to_tokens","","",292,[[["tokenstream",3]]]],[11,"to_tokens","syn::punctuated","",106,[[["tokenstream",3]]]],[11,"to_tokens","","",107,[[["tokenstream",3]]]],[11,"fmt","syn","",179,[[["formatter",3]],["result",6]]],[11,"span","","",179,[[],[["span",3],["option",4]]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"span","","",178,[[],[["span",3],["option",4]]]],[11,"new","","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …",297,[[["span",3],["str",15]],["ident",3]]],[11,"span","","Returns the span of this <code>Ident</code>.",297,[[],["span",3]]],[11,"set_span","","Configures the span of this <code>Ident</code>, possibly changing its …",297,[[["span",3]]]],[11,"parse_meta","","Parses the content of the attribute, consisting of the …",118,[[],[["result",6],["meta",4]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",118,[[],[["parse",8],["result",6]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given …",118,[[["parser",8]],["result",6]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",118,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",118,[[["parsestream",6]],[["vec",3],["result",6]]]],[11,"path","","Returns the identifier that begins this structured meta …",119,[[],["path",3]]],[11,"parse_named","","Parses a named (braced struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",123,[[["parsestream",6]],["result",6]]],[11,"iter","","Get an iterator over the borrowed [<code>Field</code>] items in this …",124,[[],[["iter",3],["field",3]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [<code>Field</code>] items …",124,[[],[["itermut",3],["field",3]]]],[11,"len","","Returns the number of fields.",124,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if there are zero fields.",124,[[],["bool",15]]],[11,"parse_without_eager_brace","","An alternative to the primary <code>Expr::parse</code> parser (from the…",138,[[["parsestream",6]],[["expr",4],["result",6]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type …",183,[[],["typeparams",3]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type …",183,[[],["typeparamsmut",3]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the …",183,[[],["lifetimes",3]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the …",183,[[],["lifetimesmut",3]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant …",183,[[],["constparams",3]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the …",183,[[],["constparamsmut",3]]],[11,"make_where_clause","","Initializes an empty <code>where</code>-clause if there is not one …",183,[[],["whereclause",3]]],[11,"split_for_impl","","Split a type\'s generics into the pieces required for …",183,[[]]],[11,"as_turbofish","","Turn a type\'s generics like <code><X, Y></code> into a turbofish like …",299,[[],["turbofish",3]]],[11,"new","","",184,[[["lifetime",3]]]],[11,"receiver","","A method\'s <code>self</code> receiver, such as <code>&self</code> or <code>self: Box<Self></code>…",223,[[],[["option",4],["fnarg",4]]]],[11,"lifetime","","",222,[[],[["lifetime",3],["option",4]]]],[11,"new","","PanicsPanics if the lifetime does not conform to the …",236,[[["span",3],["str",15]]]],[11,"span","","",236,[[],["span",3]]],[11,"set_span","","",236,[[["span",3]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",237,[[["literal",3]]]],[11,"suffix","","",237,[[],["str",15]]],[11,"span","","",237,[[],["span",3]]],[11,"set_span","","",237,[[["span",3]]]],[11,"new","","",301,[[["span",3],["str",15]]]],[11,"value","","",301,[[],["string",3]]],[11,"parse","","Parse a syntax tree node from the content of this string …",301,[[],[["parse",8],["result",6]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",301,[[["parser",8]],["result",6]]],[11,"span","","",301,[[],["span",3]]],[11,"set_span","","",301,[[["span",3]]]],[11,"suffix","","",301,[[],["str",15]]],[11,"new","","",302,[[["span",3]]]],[11,"value","","",302,[[],[["vec",3],["u8",15]]]],[11,"span","","",302,[[],["span",3]]],[11,"set_span","","",302,[[["span",3]]]],[11,"suffix","","",302,[[],["str",15]]],[11,"new","","",303,[[["span",3],["u8",15]]]],[11,"value","","",303,[[],["u8",15]]],[11,"span","","",303,[[],["span",3]]],[11,"set_span","","",303,[[["span",3]]]],[11,"suffix","","",303,[[],["str",15]]],[11,"new","","",304,[[["char",15],["span",3]]]],[11,"value","","",304,[[],["char",15]]],[11,"span","","",304,[[],["span",3]]],[11,"set_span","","",304,[[["span",3]]]],[11,"suffix","","",304,[[],["str",15]]],[11,"new","","",305,[[["span",3],["str",15]]]],[11,"base10_digits","","",305,[[],["str",15]]],[11,"base10_parse","","Parses the literal into a selected number type.",305,[[],["result",6]]],[11,"suffix","","",305,[[],["str",15]]],[11,"span","","",305,[[],["span",3]]],[11,"set_span","","",305,[[["span",3]]]],[11,"new","","",306,[[["span",3],["str",15]]]],[11,"base10_digits","","",306,[[],["str",15]]],[11,"base10_parse","","",306,[[],["result",6]]],[11,"suffix","","",306,[[],["str",15]]],[11,"span","","",306,[[],["span",3]]],[11,"set_span","","",306,[[["span",3]]]],[11,"new","","",238,[[["bool",15],["span",3]]]],[11,"value","","",238,[[],["bool",15]]],[11,"span","","",238,[[],["span",3]]],[11,"set_span","","",238,[[["span",3]]]],[11,"parse_body","","Parse the tokens within the macro invocation\'s delimiters …",240,[[],[["parse",8],["result",6]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation\'s delimiters …",240,[[["parser",8]],["result",6]]],[11,"parse_within","","Parse the body of a block as zero or more statements, …",249,[[["parsestream",6]],[["result",6],["vec",3]]]],[11,"without_plus","","In some positions, types may not contain the <code>+</code> character, …",255,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",254,[[["parsestream",6]],["result",6]]],[11,"without_plus","","",268,[[["parsestream",6]],["result",6]]],[11,"parse_mod_style","","Parse a <code>Path</code> containing no path arguments on any of its …",293,[[["parsestream",6]],["result",6]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to …",293,[[],["bool",15]]],[11,"get_ident","","If this path consists of a single ident, returns the …",293,[[],[["option",4],["ident",3]]]],[11,"is_empty","","",294,[[],["bool",15]]],[11,"visit_abi","syn::visit","",109,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments","","",109,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm","","",109,[[["arm",3]]]],[11,"visit_attr_style","","",109,[[["attrstyle",4]]]],[11,"visit_attribute","","",109,[[["attribute",3]]]],[11,"visit_bare_fn_arg","","",109,[[["barefnarg",3]]]],[11,"visit_bin_op","","",109,[[["binop",4]]]],[11,"visit_binding","","",109,[[["binding",3]]]],[11,"visit_block","","",109,[[["block",3]]]],[11,"visit_bound_lifetimes","","",109,[[["boundlifetimes",3]]]],[11,"visit_const_param","","",109,[[["constparam",3]]]],[11,"visit_constraint","","",109,[[["constraint",3]]]],[11,"visit_data","","",109,[[["data",4]]]],[11,"visit_data_enum","","",109,[[["dataenum",3]]]],[11,"visit_data_struct","","",109,[[["datastruct",3]]]],[11,"visit_data_union","","",109,[[["dataunion",3]]]],[11,"visit_derive_input","","",109,[[["deriveinput",3]]]],[11,"visit_expr","","",109,[[["expr",4]]]],[11,"visit_expr_array","","",109,[[["exprarray",3]]]],[11,"visit_expr_assign","","",109,[[["exprassign",3]]]],[11,"visit_expr_assign_op","","",109,[[["exprassignop",3]]]],[11,"visit_expr_async","","",109,[[["exprasync",3]]]],[11,"visit_expr_await","","",109,[[["exprawait",3]]]],[11,"visit_expr_binary","","",109,[[["exprbinary",3]]]],[11,"visit_expr_block","","",109,[[["exprblock",3]]]],[11,"visit_expr_box","","",109,[[["exprbox",3]]]],[11,"visit_expr_break","","",109,[[["exprbreak",3]]]],[11,"visit_expr_call","","",109,[[["exprcall",3]]]],[11,"visit_expr_cast","","",109,[[["exprcast",3]]]],[11,"visit_expr_closure","","",109,[[["exprclosure",3]]]],[11,"visit_expr_continue","","",109,[[["exprcontinue",3]]]],[11,"visit_expr_field","","",109,[[["exprfield",3]]]],[11,"visit_expr_for_loop","","",109,[[["exprforloop",3]]]],[11,"visit_expr_group","","",109,[[["exprgroup",3]]]],[11,"visit_expr_if","","",109,[[["exprif",3]]]],[11,"visit_expr_index","","",109,[[["exprindex",3]]]],[11,"visit_expr_let","","",109,[[["exprlet",3]]]],[11,"visit_expr_lit","","",109,[[["exprlit",3]]]],[11,"visit_expr_loop","","",109,[[["exprloop",3]]]],[11,"visit_expr_macro","","",109,[[["exprmacro",3]]]],[11,"visit_expr_match","","",109,[[["exprmatch",3]]]],[11,"visit_expr_method_call","","",109,[[["exprmethodcall",3]]]],[11,"visit_expr_paren","","",109,[[["exprparen",3]]]],[11,"visit_expr_path","","",109,[[["exprpath",3]]]],[11,"visit_expr_range","","",109,[[["exprrange",3]]]],[11,"visit_expr_reference","","",109,[[["exprreference",3]]]],[11,"visit_expr_repeat","","",109,[[["exprrepeat",3]]]],[11,"visit_expr_return","","",109,[[["exprreturn",3]]]],[11,"visit_expr_struct","","",109,[[["exprstruct",3]]]],[11,"visit_expr_try","","",109,[[["exprtry",3]]]],[11,"visit_expr_try_block","","",109,[[["exprtryblock",3]]]],[11,"visit_expr_tuple","","",109,[[["exprtuple",3]]]],[11,"visit_expr_type","","",109,[[["exprtype",3]]]],[11,"visit_expr_unary","","",109,[[["exprunary",3]]]],[11,"visit_expr_unsafe","","",109,[[["exprunsafe",3]]]],[11,"visit_expr_while","","",109,[[["exprwhile",3]]]],[11,"visit_expr_yield","","",109,[[["expryield",3]]]],[11,"visit_field","","",109,[[["field",3]]]],[11,"visit_field_pat","","",109,[[["fieldpat",3]]]],[11,"visit_field_value","","",109,[[["fieldvalue",3]]]],[11,"visit_fields","","",109,[[["fields",4]]]],[11,"visit_fields_named","","",109,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed","","",109,[[["fieldsunnamed",3]]]],[11,"visit_file","","",109,[[["file",3]]]],[11,"visit_fn_arg","","",109,[[["fnarg",4]]]],[11,"visit_foreign_item","","",109,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn","","",109,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro","","",109,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static","","",109,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type","","",109,[[["foreignitemtype",3]]]],[11,"visit_generic_argument","","",109,[[["genericargument",4]]]],[11,"visit_generic_method_argument","","",109,[[["genericmethodargument",4]]]],[11,"visit_generic_param","","",109,[[["genericparam",4]]]],[11,"visit_generics","","",109,[[["generics",3]]]],[11,"visit_ident","","",109,[[["ident",3]]]],[11,"visit_impl_item","","",109,[[["implitem",4]]]],[11,"visit_impl_item_const","","",109,[[["implitemconst",3]]]],[11,"visit_impl_item_macro","","",109,[[["implitemmacro",3]]]],[11,"visit_impl_item_method","","",109,[[["implitemmethod",3]]]],[11,"visit_impl_item_type","","",109,[[["implitemtype",3]]]],[11,"visit_index","","",109,[[["index",3]]]],[11,"visit_item","","",109,[[["item",4]]]],[11,"visit_item_const","","",109,[[["itemconst",3]]]],[11,"visit_item_enum","","",109,[[["itemenum",3]]]],[11,"visit_item_extern_crate","","",109,[[["itemexterncrate",3]]]],[11,"visit_item_fn","","",109,[[["itemfn",3]]]],[11,"visit_item_foreign_mod","","",109,[[["itemforeignmod",3]]]],[11,"visit_item_impl","","",109,[[["itemimpl",3]]]],[11,"visit_item_macro","","",109,[[["itemmacro",3]]]],[11,"visit_item_macro2","","",109,[[["itemmacro2",3]]]],[11,"visit_item_mod","","",109,[[["itemmod",3]]]],[11,"visit_item_static","","",109,[[["itemstatic",3]]]],[11,"visit_item_struct","","",109,[[["itemstruct",3]]]],[11,"visit_item_trait","","",109,[[["itemtrait",3]]]],[11,"visit_item_trait_alias","","",109,[[["itemtraitalias",3]]]],[11,"visit_item_type","","",109,[[["itemtype",3]]]],[11,"visit_item_union","","",109,[[["itemunion",3]]]],[11,"visit_item_use","","",109,[[["itemuse",3]]]],[11,"visit_label","","",109,[[["label",3]]]],[11,"visit_lifetime","","",109,[[["lifetime",3]]]],[11,"visit_lifetime_def","","",109,[[["lifetimedef",3]]]],[11,"visit_lit","","",109,[[["lit",4]]]],[11,"visit_lit_bool","","",109,[[["litbool",3]]]],[11,"visit_lit_byte","","",109,[[["litbyte",3]]]],[11,"visit_lit_byte_str","","",109,[[["litbytestr",3]]]],[11,"visit_lit_char","","",109,[[["litchar",3]]]],[11,"visit_lit_float","","",109,[[["litfloat",3]]]],[11,"visit_lit_int","","",109,[[["litint",3]]]],[11,"visit_lit_str","","",109,[[["litstr",3]]]],[11,"visit_local","","",109,[[["local",3]]]],[11,"visit_macro","","",109,[[["macro",3]]]],[11,"visit_macro_delimiter","","",109,[[["macrodelimiter",4]]]],[11,"visit_member","","",109,[[["member",4]]]],[11,"visit_meta","","",109,[[["meta",4]]]],[11,"visit_meta_list","","",109,[[["metalist",3]]]],[11,"visit_meta_name_value","","",109,[[["metanamevalue",3]]]],[11,"visit_method_turbofish","","",109,[[["methodturbofish",3]]]],[11,"visit_nested_meta","","",109,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments","","",109,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat","","",109,[[["pat",4]]]],[11,"visit_pat_box","","",109,[[["patbox",3]]]],[11,"visit_pat_ident","","",109,[[["patident",3]]]],[11,"visit_pat_lit","","",109,[[["patlit",3]]]],[11,"visit_pat_macro","","",109,[[["patmacro",3]]]],[11,"visit_pat_or","","",109,[[["pator",3]]]],[11,"visit_pat_path","","",109,[[["patpath",3]]]],[11,"visit_pat_range","","",109,[[["patrange",3]]]],[11,"visit_pat_reference","","",109,[[["patreference",3]]]],[11,"visit_pat_rest","","",109,[[["patrest",3]]]],[11,"visit_pat_slice","","",109,[[["patslice",3]]]],[11,"visit_pat_struct","","",109,[[["patstruct",3]]]],[11,"visit_pat_tuple","","",109,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct","","",109,[[["pattuplestruct",3]]]],[11,"visit_pat_type","","",109,[[["pattype",3]]]],[11,"visit_pat_wild","","",109,[[["patwild",3]]]],[11,"visit_path","","",109,[[["path",3]]]],[11,"visit_path_arguments","","",109,[[["patharguments",4]]]],[11,"visit_path_segment","","",109,[[["pathsegment",3]]]],[11,"visit_predicate_eq","","",109,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime","","",109,[[["predicatelifetime",3]]]],[11,"visit_predicate_type","","",109,[[["predicatetype",3]]]],[11,"visit_qself","","",109,[[["qself",3]]]],[11,"visit_range_limits","","",109,[[["rangelimits",4]]]],[11,"visit_receiver","","",109,[[["receiver",3]]]],[11,"visit_return_type","","",109,[[["returntype",4]]]],[11,"visit_signature","","",109,[[["signature",3]]]],[11,"visit_span","","",109,[[["span",3]]]],[11,"visit_stmt","","",109,[[["stmt",4]]]],[11,"visit_trait_bound","","",109,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier","","",109,[[["traitboundmodifier",4]]]],[11,"visit_trait_item","","",109,[[["traititem",4]]]],[11,"visit_trait_item_const","","",109,[[["traititemconst",3]]]],[11,"visit_trait_item_macro","","",109,[[["traititemmacro",3]]]],[11,"visit_trait_item_method","","",109,[[["traititemmethod",3]]]],[11,"visit_trait_item_type","","",109,[[["traititemtype",3]]]],[11,"visit_type","","",109,[[["type",4]]]],[11,"visit_type_array","","",109,[[["typearray",3]]]],[11,"visit_type_bare_fn","","",109,[[["typebarefn",3]]]],[11,"visit_type_group","","",109,[[["typegroup",3]]]],[11,"visit_type_impl_trait","","",109,[[["typeimpltrait",3]]]],[11,"visit_type_infer","","",109,[[["typeinfer",3]]]],[11,"visit_type_macro","","",109,[[["typemacro",3]]]],[11,"visit_type_never","","",109,[[["typenever",3]]]],[11,"visit_type_param","","",109,[[["typeparam",3]]]],[11,"visit_type_param_bound","","",109,[[["typeparambound",4]]]],[11,"visit_type_paren","","",109,[[["typeparen",3]]]],[11,"visit_type_path","","",109,[[["typepath",3]]]],[11,"visit_type_ptr","","",109,[[["typeptr",3]]]],[11,"visit_type_reference","","",109,[[["typereference",3]]]],[11,"visit_type_slice","","",109,[[["typeslice",3]]]],[11,"visit_type_trait_object","","",109,[[["typetraitobject",3]]]],[11,"visit_type_tuple","","",109,[[["typetuple",3]]]],[11,"visit_un_op","","",109,[[["unop",4]]]],[11,"visit_use_glob","","",109,[[["useglob",3]]]],[11,"visit_use_group","","",109,[[["usegroup",3]]]],[11,"visit_use_name","","",109,[[["usename",3]]]],[11,"visit_use_path","","",109,[[["usepath",3]]]],[11,"visit_use_rename","","",109,[[["userename",3]]]],[11,"visit_use_tree","","",109,[[["usetree",4]]]],[11,"visit_variadic","","",109,[[["variadic",3]]]],[11,"visit_variant","","",109,[[["variant",3]]]],[11,"visit_vis_crate","","",109,[[["viscrate",3]]]],[11,"visit_vis_public","","",109,[[["vispublic",3]]]],[11,"visit_vis_restricted","","",109,[[["visrestricted",3]]]],[11,"visit_visibility","","",109,[[["visibility",4]]]],[11,"visit_where_clause","","",109,[[["whereclause",3]]]],[11,"visit_where_predicate","","",109,[[["wherepredicate",4]]]],[11,"visit_abi_mut","syn::visit_mut","",110,[[["abi",3]]]],[11,"visit_angle_bracketed_generic_arguments_mut","","",110,[[["anglebracketedgenericarguments",3]]]],[11,"visit_arm_mut","","",110,[[["arm",3]]]],[11,"visit_attr_style_mut","","",110,[[["attrstyle",4]]]],[11,"visit_attribute_mut","","",110,[[["attribute",3]]]],[11,"visit_bare_fn_arg_mut","","",110,[[["barefnarg",3]]]],[11,"visit_bin_op_mut","","",110,[[["binop",4]]]],[11,"visit_binding_mut","","",110,[[["binding",3]]]],[11,"visit_block_mut","","",110,[[["block",3]]]],[11,"visit_bound_lifetimes_mut","","",110,[[["boundlifetimes",3]]]],[11,"visit_const_param_mut","","",110,[[["constparam",3]]]],[11,"visit_constraint_mut","","",110,[[["constraint",3]]]],[11,"visit_data_mut","","",110,[[["data",4]]]],[11,"visit_data_enum_mut","","",110,[[["dataenum",3]]]],[11,"visit_data_struct_mut","","",110,[[["datastruct",3]]]],[11,"visit_data_union_mut","","",110,[[["dataunion",3]]]],[11,"visit_derive_input_mut","","",110,[[["deriveinput",3]]]],[11,"visit_expr_mut","","",110,[[["expr",4]]]],[11,"visit_expr_array_mut","","",110,[[["exprarray",3]]]],[11,"visit_expr_assign_mut","","",110,[[["exprassign",3]]]],[11,"visit_expr_assign_op_mut","","",110,[[["exprassignop",3]]]],[11,"visit_expr_async_mut","","",110,[[["exprasync",3]]]],[11,"visit_expr_await_mut","","",110,[[["exprawait",3]]]],[11,"visit_expr_binary_mut","","",110,[[["exprbinary",3]]]],[11,"visit_expr_block_mut","","",110,[[["exprblock",3]]]],[11,"visit_expr_box_mut","","",110,[[["exprbox",3]]]],[11,"visit_expr_break_mut","","",110,[[["exprbreak",3]]]],[11,"visit_expr_call_mut","","",110,[[["exprcall",3]]]],[11,"visit_expr_cast_mut","","",110,[[["exprcast",3]]]],[11,"visit_expr_closure_mut","","",110,[[["exprclosure",3]]]],[11,"visit_expr_continue_mut","","",110,[[["exprcontinue",3]]]],[11,"visit_expr_field_mut","","",110,[[["exprfield",3]]]],[11,"visit_expr_for_loop_mut","","",110,[[["exprforloop",3]]]],[11,"visit_expr_group_mut","","",110,[[["exprgroup",3]]]],[11,"visit_expr_if_mut","","",110,[[["exprif",3]]]],[11,"visit_expr_index_mut","","",110,[[["exprindex",3]]]],[11,"visit_expr_let_mut","","",110,[[["exprlet",3]]]],[11,"visit_expr_lit_mut","","",110,[[["exprlit",3]]]],[11,"visit_expr_loop_mut","","",110,[[["exprloop",3]]]],[11,"visit_expr_macro_mut","","",110,[[["exprmacro",3]]]],[11,"visit_expr_match_mut","","",110,[[["exprmatch",3]]]],[11,"visit_expr_method_call_mut","","",110,[[["exprmethodcall",3]]]],[11,"visit_expr_paren_mut","","",110,[[["exprparen",3]]]],[11,"visit_expr_path_mut","","",110,[[["exprpath",3]]]],[11,"visit_expr_range_mut","","",110,[[["exprrange",3]]]],[11,"visit_expr_reference_mut","","",110,[[["exprreference",3]]]],[11,"visit_expr_repeat_mut","","",110,[[["exprrepeat",3]]]],[11,"visit_expr_return_mut","","",110,[[["exprreturn",3]]]],[11,"visit_expr_struct_mut","","",110,[[["exprstruct",3]]]],[11,"visit_expr_try_mut","","",110,[[["exprtry",3]]]],[11,"visit_expr_try_block_mut","","",110,[[["exprtryblock",3]]]],[11,"visit_expr_tuple_mut","","",110,[[["exprtuple",3]]]],[11,"visit_expr_type_mut","","",110,[[["exprtype",3]]]],[11,"visit_expr_unary_mut","","",110,[[["exprunary",3]]]],[11,"visit_expr_unsafe_mut","","",110,[[["exprunsafe",3]]]],[11,"visit_expr_while_mut","","",110,[[["exprwhile",3]]]],[11,"visit_expr_yield_mut","","",110,[[["expryield",3]]]],[11,"visit_field_mut","","",110,[[["field",3]]]],[11,"visit_field_pat_mut","","",110,[[["fieldpat",3]]]],[11,"visit_field_value_mut","","",110,[[["fieldvalue",3]]]],[11,"visit_fields_mut","","",110,[[["fields",4]]]],[11,"visit_fields_named_mut","","",110,[[["fieldsnamed",3]]]],[11,"visit_fields_unnamed_mut","","",110,[[["fieldsunnamed",3]]]],[11,"visit_file_mut","","",110,[[["file",3]]]],[11,"visit_fn_arg_mut","","",110,[[["fnarg",4]]]],[11,"visit_foreign_item_mut","","",110,[[["foreignitem",4]]]],[11,"visit_foreign_item_fn_mut","","",110,[[["foreignitemfn",3]]]],[11,"visit_foreign_item_macro_mut","","",110,[[["foreignitemmacro",3]]]],[11,"visit_foreign_item_static_mut","","",110,[[["foreignitemstatic",3]]]],[11,"visit_foreign_item_type_mut","","",110,[[["foreignitemtype",3]]]],[11,"visit_generic_argument_mut","","",110,[[["genericargument",4]]]],[11,"visit_generic_method_argument_mut","","",110,[[["genericmethodargument",4]]]],[11,"visit_generic_param_mut","","",110,[[["genericparam",4]]]],[11,"visit_generics_mut","","",110,[[["generics",3]]]],[11,"visit_ident_mut","","",110,[[["ident",3]]]],[11,"visit_impl_item_mut","","",110,[[["implitem",4]]]],[11,"visit_impl_item_const_mut","","",110,[[["implitemconst",3]]]],[11,"visit_impl_item_macro_mut","","",110,[[["implitemmacro",3]]]],[11,"visit_impl_item_method_mut","","",110,[[["implitemmethod",3]]]],[11,"visit_impl_item_type_mut","","",110,[[["implitemtype",3]]]],[11,"visit_index_mut","","",110,[[["index",3]]]],[11,"visit_item_mut","","",110,[[["item",4]]]],[11,"visit_item_const_mut","","",110,[[["itemconst",3]]]],[11,"visit_item_enum_mut","","",110,[[["itemenum",3]]]],[11,"visit_item_extern_crate_mut","","",110,[[["itemexterncrate",3]]]],[11,"visit_item_fn_mut","","",110,[[["itemfn",3]]]],[11,"visit_item_foreign_mod_mut","","",110,[[["itemforeignmod",3]]]],[11,"visit_item_impl_mut","","",110,[[["itemimpl",3]]]],[11,"visit_item_macro_mut","","",110,[[["itemmacro",3]]]],[11,"visit_item_macro2_mut","","",110,[[["itemmacro2",3]]]],[11,"visit_item_mod_mut","","",110,[[["itemmod",3]]]],[11,"visit_item_static_mut","","",110,[[["itemstatic",3]]]],[11,"visit_item_struct_mut","","",110,[[["itemstruct",3]]]],[11,"visit_item_trait_mut","","",110,[[["itemtrait",3]]]],[11,"visit_item_trait_alias_mut","","",110,[[["itemtraitalias",3]]]],[11,"visit_item_type_mut","","",110,[[["itemtype",3]]]],[11,"visit_item_union_mut","","",110,[[["itemunion",3]]]],[11,"visit_item_use_mut","","",110,[[["itemuse",3]]]],[11,"visit_label_mut","","",110,[[["label",3]]]],[11,"visit_lifetime_mut","","",110,[[["lifetime",3]]]],[11,"visit_lifetime_def_mut","","",110,[[["lifetimedef",3]]]],[11,"visit_lit_mut","","",110,[[["lit",4]]]],[11,"visit_lit_bool_mut","","",110,[[["litbool",3]]]],[11,"visit_lit_byte_mut","","",110,[[["litbyte",3]]]],[11,"visit_lit_byte_str_mut","","",110,[[["litbytestr",3]]]],[11,"visit_lit_char_mut","","",110,[[["litchar",3]]]],[11,"visit_lit_float_mut","","",110,[[["litfloat",3]]]],[11,"visit_lit_int_mut","","",110,[[["litint",3]]]],[11,"visit_lit_str_mut","","",110,[[["litstr",3]]]],[11,"visit_local_mut","","",110,[[["local",3]]]],[11,"visit_macro_mut","","",110,[[["macro",3]]]],[11,"visit_macro_delimiter_mut","","",110,[[["macrodelimiter",4]]]],[11,"visit_member_mut","","",110,[[["member",4]]]],[11,"visit_meta_mut","","",110,[[["meta",4]]]],[11,"visit_meta_list_mut","","",110,[[["metalist",3]]]],[11,"visit_meta_name_value_mut","","",110,[[["metanamevalue",3]]]],[11,"visit_method_turbofish_mut","","",110,[[["methodturbofish",3]]]],[11,"visit_nested_meta_mut","","",110,[[["nestedmeta",4]]]],[11,"visit_parenthesized_generic_arguments_mut","","",110,[[["parenthesizedgenericarguments",3]]]],[11,"visit_pat_mut","","",110,[[["pat",4]]]],[11,"visit_pat_box_mut","","",110,[[["patbox",3]]]],[11,"visit_pat_ident_mut","","",110,[[["patident",3]]]],[11,"visit_pat_lit_mut","","",110,[[["patlit",3]]]],[11,"visit_pat_macro_mut","","",110,[[["patmacro",3]]]],[11,"visit_pat_or_mut","","",110,[[["pator",3]]]],[11,"visit_pat_path_mut","","",110,[[["patpath",3]]]],[11,"visit_pat_range_mut","","",110,[[["patrange",3]]]],[11,"visit_pat_reference_mut","","",110,[[["patreference",3]]]],[11,"visit_pat_rest_mut","","",110,[[["patrest",3]]]],[11,"visit_pat_slice_mut","","",110,[[["patslice",3]]]],[11,"visit_pat_struct_mut","","",110,[[["patstruct",3]]]],[11,"visit_pat_tuple_mut","","",110,[[["pattuple",3]]]],[11,"visit_pat_tuple_struct_mut","","",110,[[["pattuplestruct",3]]]],[11,"visit_pat_type_mut","","",110,[[["pattype",3]]]],[11,"visit_pat_wild_mut","","",110,[[["patwild",3]]]],[11,"visit_path_mut","","",110,[[["path",3]]]],[11,"visit_path_arguments_mut","","",110,[[["patharguments",4]]]],[11,"visit_path_segment_mut","","",110,[[["pathsegment",3]]]],[11,"visit_predicate_eq_mut","","",110,[[["predicateeq",3]]]],[11,"visit_predicate_lifetime_mut","","",110,[[["predicatelifetime",3]]]],[11,"visit_predicate_type_mut","","",110,[[["predicatetype",3]]]],[11,"visit_qself_mut","","",110,[[["qself",3]]]],[11,"visit_range_limits_mut","","",110,[[["rangelimits",4]]]],[11,"visit_receiver_mut","","",110,[[["receiver",3]]]],[11,"visit_return_type_mut","","",110,[[["returntype",4]]]],[11,"visit_signature_mut","","",110,[[["signature",3]]]],[11,"visit_span_mut","","",110,[[["span",3]]]],[11,"visit_stmt_mut","","",110,[[["stmt",4]]]],[11,"visit_trait_bound_mut","","",110,[[["traitbound",3]]]],[11,"visit_trait_bound_modifier_mut","","",110,[[["traitboundmodifier",4]]]],[11,"visit_trait_item_mut","","",110,[[["traititem",4]]]],[11,"visit_trait_item_const_mut","","",110,[[["traititemconst",3]]]],[11,"visit_trait_item_macro_mut","","",110,[[["traititemmacro",3]]]],[11,"visit_trait_item_method_mut","","",110,[[["traititemmethod",3]]]],[11,"visit_trait_item_type_mut","","",110,[[["traititemtype",3]]]],[11,"visit_type_mut","","",110,[[["type",4]]]],[11,"visit_type_array_mut","","",110,[[["typearray",3]]]],[11,"visit_type_bare_fn_mut","","",110,[[["typebarefn",3]]]],[11,"visit_type_group_mut","","",110,[[["typegroup",3]]]],[11,"visit_type_impl_trait_mut","","",110,[[["typeimpltrait",3]]]],[11,"visit_type_infer_mut","","",110,[[["typeinfer",3]]]],[11,"visit_type_macro_mut","","",110,[[["typemacro",3]]]],[11,"visit_type_never_mut","","",110,[[["typenever",3]]]],[11,"visit_type_param_mut","","",110,[[["typeparam",3]]]],[11,"visit_type_param_bound_mut","","",110,[[["typeparambound",4]]]],[11,"visit_type_paren_mut","","",110,[[["typeparen",3]]]],[11,"visit_type_path_mut","","",110,[[["typepath",3]]]],[11,"visit_type_ptr_mut","","",110,[[["typeptr",3]]]],[11,"visit_type_reference_mut","","",110,[[["typereference",3]]]],[11,"visit_type_slice_mut","","",110,[[["typeslice",3]]]],[11,"visit_type_trait_object_mut","","",110,[[["typetraitobject",3]]]],[11,"visit_type_tuple_mut","","",110,[[["typetuple",3]]]],[11,"visit_un_op_mut","","",110,[[["unop",4]]]],[11,"visit_use_glob_mut","","",110,[[["useglob",3]]]],[11,"visit_use_group_mut","","",110,[[["usegroup",3]]]],[11,"visit_use_name_mut","","",110,[[["usename",3]]]],[11,"visit_use_path_mut","","",110,[[["usepath",3]]]],[11,"visit_use_rename_mut","","",110,[[["userename",3]]]],[11,"visit_use_tree_mut","","",110,[[["usetree",4]]]],[11,"visit_variadic_mut","","",110,[[["variadic",3]]]],[11,"visit_variant_mut","","",110,[[["variant",3]]]],[11,"visit_vis_crate_mut","","",110,[[["viscrate",3]]]],[11,"visit_vis_public_mut","","",110,[[["vispublic",3]]]],[11,"visit_vis_restricted_mut","","",110,[[["visrestricted",3]]]],[11,"visit_visibility_mut","","",110,[[["visibility",4]]]],[11,"visit_where_clause_mut","","",110,[[["whereclause",3]]]],[11,"visit_where_predicate_mut","","",110,[[["wherepredicate",4]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine …",313,[[["peek",8]],["bool",15]]],[11,"error","","Triggers an error at the current position of the parse …",313,[[],["error",3]]]],"p":[[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[3,"Punctuated"],[4,"Pair"],[8,"Spanned"],[8,"Visit"],[8,"VisitMut"],[8,"Speculative"],[8,"Parse"],[3,"StepCursor"],[3,"ParseBuffer"],[8,"Parser"],[3,"Error"],[4,"AttrStyle"],[3,"Attribute"],[4,"Meta"],[3,"MetaList"],[3,"MetaNameValue"],[4,"NestedMeta"],[3,"Field"],[4,"Fields"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[4,"Visibility"],[3,"Arm"],[3,"FieldValue"],[4,"GenericMethodArgument"],[3,"Label"],[3,"MethodTurbofish"],[4,"RangeLimits"],[4,"Expr"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBinary"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprField"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprIndex"],[3,"ExprLet"],[3,"ExprLit"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnary"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"Index"],[4,"Member"],[3,"BoundLifetimes"],[3,"ConstParam"],[4,"GenericParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[4,"TraitBoundModifier"],[3,"TypeParam"],[4,"TypeParamBound"],[3,"WhereClause"],[4,"WherePredicate"],[4,"FnArg"],[4,"ForeignItem"],[3,"ForeignItemFn"],[3,"ForeignItemMacro"],[3,"ForeignItemStatic"],[3,"ForeignItemType"],[4,"ImplItem"],[3,"ImplItemConst"],[3,"ImplItemMacro"],[3,"ImplItemMethod"],[3,"ImplItemType"],[4,"Item"],[3,"ItemConst"],[3,"ItemEnum"],[3,"ItemExternCrate"],[3,"ItemFn"],[3,"ItemForeignMod"],[3,"ItemImpl"],[3,"ItemMacro"],[3,"ItemMacro2"],[3,"ItemMod"],[3,"ItemStatic"],[3,"ItemStruct"],[3,"ItemTrait"],[3,"ItemTraitAlias"],[3,"ItemType"],[3,"ItemUnion"],[3,"ItemUse"],[3,"Receiver"],[3,"Signature"],[4,"TraitItem"],[3,"TraitItemConst"],[3,"TraitItemMacro"],[3,"TraitItemMethod"],[3,"TraitItemType"],[3,"UseGlob"],[3,"UseGroup"],[3,"UseName"],[3,"UsePath"],[3,"UseRename"],[4,"UseTree"],[3,"File"],[3,"Lifetime"],[4,"Lit"],[3,"LitBool"],[4,"StrStyle"],[3,"Macro"],[4,"MacroDelimiter"],[4,"Data"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[4,"BinOp"],[4,"UnOp"],[3,"Block"],[3,"Local"],[4,"Stmt"],[3,"Abi"],[3,"BareFnArg"],[4,"ReturnType"],[4,"Type"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"FieldPat"],[4,"Pat"],[3,"PatBox"],[3,"PatIdent"],[3,"PatLit"],[3,"PatMacro"],[3,"PatOr"],[3,"PatPath"],[3,"PatRange"],[3,"PatReference"],[3,"PatRest"],[3,"PatSlice"],[3,"PatStruct"],[3,"PatTuple"],[3,"PatTupleStruct"],[3,"PatType"],[3,"PatWild"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[4,"GenericArgument"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[4,"PathArguments"],[3,"PathSegment"],[3,"QSelf"],[3,"Ident"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]},\
"tinyvec":{"doc":"<code>tinyvec</code> provides 100% safe vec-like data structures.","i":[[8,"Array","tinyvec","A trait for types that are an array.",null,null],[16,"Item","","The type of the items in the thing.",0,null],[18,"CAPACITY","","The number of slots in the thing.",0,null],[10,"as_slice","","Gives a shared slice over the whole thing.",0,[[]]],[10,"as_slice_mut","","Gives a unique slice over the whole thing.",0,[[]]],[10,"default","","Create a default-initialized instance of ourself, similar …",0,[[]]],[3,"ArrayVec","","An array-backed, vector-like data structure.",null,null],[3,"ArrayVecSplice","","Splicing iterator for <code>ArrayVec</code> See <code>ArrayVec::splice</code>",null,null],[3,"TryFromSliceError","","The error type returned when a conversion from a slice to …",null,null],[3,"ArrayVecIterator","","Iterator for consuming an <code>ArrayVec</code> and returning owned …",null,null],[3,"ArrayVecDrain","","Draining iterator for [<code>ArrayVec</code>]",null,null],[3,"SliceVec","","A slice-backed vector-like data structure.",null,null],[3,"SliceVecDrain","","Draining iterator for [<code>SliceVec</code>]",null,null],[4,"TinyVec","","A vector that starts inline, but can automatically move …",null,null],[13,"Inline","","",1,null],[13,"Heap","","",1,null],[4,"TinyVecDrain","","Draining iterator for <code>TinyVecDrain</code>",null,null],[13,"Inline","","",2,null],[13,"Heap","","",2,null],[3,"TinyVecSplice","","Splicing iterator for <code>TinyVec</code> See <code>TinyVec::splice</code>",null,null],[4,"TinyVecIterator","","Iterator for consuming an <code>TinyVec</code> and returning owned …",null,null],[13,"Inline","","",3,null],[13,"Heap","","",3,null],[14,"array_vec","","Helper to make an <code>ArrayVec</code>.",null,null],[14,"tiny_vec","","Helper to make a <code>TinyVec</code>.",null,null],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"into_iter","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"into_iter","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"into_iter","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"into_iter","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"into_iter","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"into_iter","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"into_iter","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"deref","","",4,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",4,[[]]],[11,"deref_mut","","",9,[[]]],[11,"deref_mut","","",1,[[]]],[11,"from","","The output has a length equal to the full array.",4,[[]]],[11,"from","","Uses the full slice as the initial length.",9,[[]]],[11,"from","","Calls <code>AsRef::as_mut</code> then uses the full slice as the …",9,[[]]],[11,"from","","",1,[[["arrayvec",3]]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","","",4,[[],["bool",15]]],[11,"eq","","",9,[[],["bool",15]]],[11,"eq","","",9,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",1,[[],["bool",15]]],[11,"cmp","","",4,[[],["ordering",4]]],[11,"cmp","","",9,[[],["ordering",4]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"partial_cmp","","",4,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",9,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[],[["option",4],["ordering",4]]]],[11,"drop","","",5,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"index","","",4,[[]]],[11,"index","","",9,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","","",4,[[]]],[11,"index_mut","","",9,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",1,[[]]],[11,"len","","",5,[[],["usize",15]]],[11,"len","","",11,[[],["usize",15]]],[11,"borrow","","",4,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","The output has a length equal to that of the slice, with …",4,[[],["result",4]]],[11,"from_iter","","",4,[[["intoiterator",8]]]],[11,"from_iter","","",1,[[["intoiterator",8]]]],[11,"as_ref","","",4,[[]]],[11,"as_ref","","",9,[[]]],[11,"as_ref","","",1,[[]]],[11,"as_mut","","",4,[[]]],[11,"as_mut","","",9,[[]]],[11,"as_mut","","",1,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"next_back","","",5,[[],["option",4]]],[11,"next_back","","",7,[[],["option",4]]],[11,"next_back","","",8,[[],["option",4]]],[11,"next_back","","",2,[[],["option",4]]],[11,"next_back","","",11,[[],["option",4]]],[11,"next","","",5,[[],["option",4]]],[11,"size_hint","","",5,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"count","","",7,[[],["usize",15]]],[11,"last","","",7,[[],["option",4]]],[11,"nth","","",7,[[["usize",15]],["option",4]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"nth","","",8,[[["usize",15]],["option",4]]],[11,"last","","",8,[[],["option",4]]],[11,"for_each","","",8,[[]]],[11,"next","","",10,[[],["option",4]]],[11,"next","","",2,[[],["option",4]]],[11,"nth","","",2,[[["usize",15]],["option",4]]],[11,"size_hint","","",2,[[]]],[11,"last","","",2,[[],["option",4]]],[11,"count","","",2,[[],["usize",15]]],[11,"for_each","","",2,[[["fnmut",8]]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",3,[[],["option",4]]],[11,"size_hint","","",3,[[]]],[11,"count","","",3,[[],["usize",15]]],[11,"last","","",3,[[],["option",4]]],[11,"nth","","",3,[[["usize",15]],["option",4]]],[11,"into_iter","","",4,[[]]],[11,"into_iter","","",9,[[]]],[11,"into_iter","","",1,[[]]],[11,"extend","","",4,[[["intoiterator",8]]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",1,[[["intoiterator",8]]]],[11,"clone","","",4,[[],["arrayvec",3]]],[11,"clone","","",6,[[],["tryfromsliceerror",3]]],[11,"clone","","",1,[[],["tinyvec",4]]],[11,"default","","",4,[[]]],[11,"default","","",9,[[]]],[11,"default","","",1,[[]]],[18,"CAPACITY","","The number of slots in the thing.",0,null],[11,"append","","Move all values from <code>other</code> into this vec.",4,[[]]],[11,"try_append","","Move all values from <code>other</code> into this vec. If appending …",4,[[],["option",4]]],[11,"as_mut_ptr","","A <code>*mut</code> pointer to the backing array.",4,[[]]],[11,"as_mut_slice","","Performs a <code>deref_mut</code>, into unique slice form.",4,[[]]],[11,"as_ptr","","A <code>*const</code> pointer to the backing array.",4,[[]]],[11,"as_slice","","Performs a <code>deref</code>, into shared slice form.",4,[[]]],[11,"capacity","","The capacity of the <code>ArrayVec</code>.",4,[[],["usize",15]]],[11,"clear","","Truncates the <code>ArrayVec</code> down to length 0.",4,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",4,[[],["arrayvecdrain",3]]],[11,"into_inner","","Returns the inner array of the <code>ArrayVec</code>.",4,[[]]],[11,"extend_from_slice","","Clone each element of the slice into this <code>ArrayVec</code>.",4,[[]]],[11,"fill","","Fill the vector until its capacity has been reached.",4,[[["intoiterator",8]]]],[11,"from_array_len","","Wraps up an array and uses the given length as the …",4,[[["usize",15]]]],[11,"insert","","Inserts an item at the position given, moving all …",4,[[["usize",15]]]],[11,"try_insert","","Tries to insert an item at the position given, moving all …",4,[[["usize",15]],["option",4]]],[11,"is_empty","","Checks if the length is 0.",4,[[],["bool",15]]],[11,"len","","The length of the <code>ArrayVec</code> (in elements).",4,[[],["usize",15]]],[11,"new","","Makes a new, empty <code>ArrayVec</code>.",4,[[]]],[11,"pop","","Remove and return the last element of the vec, if there …",4,[[],["option",4]]],[11,"push","","Place an element onto the end of the vec.",4,[[]]],[11,"try_push","","Tries to place an element onto the end of the vec. …",4,[[],["option",4]]],[11,"remove","","Removes the item at <code>index</code>, shifting all others down by …",4,[[["usize",15]]]],[11,"resize","","As <code>resize_with</code> and it clones the value as the closure.",4,[[["usize",15]]]],[11,"resize_with","","Resize the vec to the new length.",4,[[["usize",15],["fnmut",8]]]],[11,"retain","","Walk the vec and keep only the elements that pass the …",4,[[["fnmut",8]]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",4,[[["usize",15]]]],[11,"split_off","","Splits the collection at the point given.",4,[[["usize",15]]]],[11,"splice","","Creates a splicing iterator that removes the specified …",4,[[],[["arrayvecsplice",3],["fuse",3]]]],[11,"swap_remove","","Remove an element, swapping the end of the vec into its …",4,[[["usize",15]]]],[11,"truncate","","Reduces the vec\'s length to the given value.",4,[[["usize",15]]]],[11,"try_from_array_len","","Wraps an array, using the given length as the starting …",4,[[["usize",15]],["result",4]]],[11,"from_array_empty","","Wraps up an array as a new empty <code>ArrayVec</code>.",4,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",7,[[]]],[11,"drain_to_vec_and_reserve","","Drains all elements to a Vec, but reserves additional …",4,[[["usize",15]],["vec",3]]],[11,"drain_to_vec","","Drains all elements to a Vec",4,[[],["vec",3]]],[11,"append","","",9,[[]]],[11,"as_mut_ptr","","A <code>*mut</code> pointer to the backing slice.",9,[[]]],[11,"as_mut_slice","","Performs a <code>deref_mut</code>, into unique slice form.",9,[[]]],[11,"as_ptr","","A <code>*const</code> pointer to the backing slice.",9,[[]]],[11,"as_slice","","Performs a <code>deref</code>, into shared slice form.",9,[[]]],[11,"capacity","","The capacity of the <code>SliceVec</code>.",9,[[],["usize",15]]],[11,"clear","","Truncates the <code>SliceVec</code> down to length 0.",9,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",9,[[["rangebounds",8],["usize",15]],["slicevecdrain",3]]],[11,"extend_from_slice","","",9,[[]]],[11,"fill","","Fill the vector until its capacity has been reached.",9,[[["intoiterator",8]]]],[11,"from_slice_len","","Wraps up a slice and uses the given length as the initial …",9,[[["usize",15]]]],[11,"insert","","Inserts an item at the position given, moving all …",9,[[["usize",15]]]],[11,"is_empty","","Checks if the length is 0.",9,[[],["bool",15]]],[11,"len","","The length of the <code>SliceVec</code> (in elements).",9,[[],["usize",15]]],[11,"pop","","Remove and return the last element of the vec, if there …",9,[[],["option",4]]],[11,"push","","Place an element onto the end of the vec.",9,[[]]],[11,"remove","","Removes the item at <code>index</code>, shifting all others down by …",9,[[["usize",15]]]],[11,"resize","","As <code>resize_with</code> and it clones the value as the closure.",9,[[["usize",15]]]],[11,"resize_with","","Resize the vec to the new length.",9,[[["usize",15],["fnmut",8]]]],[11,"retain","","Walk the vec and keep only the elements that pass the …",9,[[["fnmut",8]]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",9,[[["usize",15]]]],[11,"split_off","","Splits the collection at the point given.",9,[[["usize",15]],["slicevec",3]]],[11,"swap_remove","","Remove an element, swapping the end of the vec into its …",9,[[["usize",15]]]],[11,"truncate","","Reduces the vec\'s length to the given value.",9,[[["usize",15]]]],[11,"try_from_slice_len","","Wraps a slice, using the given length as the starting …",9,[[["usize",15]],["option",4]]],[11,"is_heap","","Returns whether elements are on heap",1,[[],["bool",15]]],[11,"is_inline","","Returns whether elements are on stack",1,[[],["bool",15]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible. …",1,[[]]],[11,"move_to_the_heap","","Moves the content of the TinyVec to the heap, if it\'s …",1,[[]]],[11,"move_to_the_heap_and_reserve","","If TinyVec is inline, moves the content of it to the heap.…",1,[[["usize",15]]]],[11,"reserve","","Reserves additional space. Moves to the heap if array …",1,[[["usize",15]]]],[11,"reserve_exact","","Reserves additional space. Moves to the heap if array …",1,[[["usize",15]]]],[11,"with_capacity","","Makes a new TinyVec with <em>at least</em> the given capacity.",1,[[["usize",15]]]],[11,"append","","Move all values from <code>other</code> into this vec.",1,[[]]],[11,"swap_remove","","Remove an element, swapping the end of the vec into its …",1,[[["usize",15]]]],[11,"pop","","Remove and return the last element of the vec, if there …",1,[[],["option",4]]],[11,"remove","","Removes the item at <code>index</code>, shifting all others down by …",1,[[["usize",15]]]],[11,"len","","The length of the vec (in elements).",1,[[],["usize",15]]],[11,"capacity","","The capacity of the <code>TinyVec</code>.",1,[[],["usize",15]]],[11,"truncate","","Reduces the vec\'s length to the given value.",1,[[["usize",15]]]],[11,"as_mut_ptr","","A mutable pointer to the backing array.",1,[[]]],[11,"as_ptr","","A const pointer to the backing array.",1,[[]]],[11,"retain","","Walk the vec and keep only the elements that pass the …",1,[[["fnmut",8]]]],[11,"as_mut_slice","","Helper for getting the mut slice.",1,[[]]],[11,"as_slice","","Helper for getting the shared slice.",1,[[]]],[11,"clear","","Removes all elements from the vec.",1,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",1,[[["rangebounds",8],["usize",15]],["tinyvecdrain",4]]],[11,"extend_from_slice","","Clone each element of the slice into this vec.",1,[[]]],[11,"from_array_len","","Wraps up an array and uses the given length as the …",1,[[["usize",15]]]],[11,"insert","","Inserts an item at the position given, moving all …",1,[[["usize",15]]]],[11,"is_empty","","If the vec is empty.",1,[[],["bool",15]]],[11,"new","","Makes a new, empty vec.",1,[[]]],[11,"push","","Place an element onto the end of the vec.",1,[[]]],[11,"resize","","Resize the vec to the new length.",1,[[["usize",15]]]],[11,"resize_with","","Resize the vec to the new length.",1,[[["usize",15],["fnmut",8]]]],[11,"split_off","","Splits the collection at the point given.",1,[[["usize",15]]]],[11,"splice","","Creates a splicing iterator that removes the specified …",1,[[],[["tinyvecsplice",3],["fuse",3]]]],[11,"try_from_array_len","","Wraps an array, using the given length as the starting …",1,[[["usize",15]],["result",4]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",3,[[]]]],"p":[[8,"Array"],[4,"TinyVec"],[4,"TinyVecDrain"],[4,"TinyVecIterator"],[3,"ArrayVec"],[3,"ArrayVecSplice"],[3,"TryFromSliceError"],[3,"ArrayVecIterator"],[3,"ArrayVecDrain"],[3,"SliceVec"],[3,"SliceVecDrain"],[3,"TinyVecSplice"]]},\
"tinyvec_macros":{"doc":"","i":[[14,"impl_mirrored","tinyvec_macros","",null,null]],"p":[]},\
"tokio":{"doc":"A runtime for writing reliable network applications …","i":[[0,"io","tokio","Traits, helpers, and type definitions for asynchronous …",null,null],[0,"unix","tokio::io","Asynchronous IO structures specific to Unix-like …",null,null],[3,"AsyncFd","tokio::io::unix","Associates an IO object backed by a Unix file descriptor …",null,null],[3,"AsyncFdReadyGuard","","Represents an IO-ready event detected on a particular …",null,null],[3,"AsyncFdReadyMutGuard","","Represents an IO-ready event detected on a particular …",null,null],[3,"TryIoError","","The error type returned by <code>try_io</code>.",null,null],[8,"AsyncBufRead","tokio::io","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer, …",0,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[10,"consume","","Tells this buffer that <code>amt</code> bytes have been consumed from …",0,[[["pin",3],["usize",15]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[10,"poll_read","","Attempts to read from the <code>AsyncRead</code> into <code>buf</code>.",1,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"start_seek","","Attempts to seek to an offset, in bytes, in a stream.",2,[[["pin",3],["seekfrom",4]],["result",6]]],[10,"poll_complete","","Waits for a seek operation to complete.",2,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from <code>buf</code> into the object.",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered …",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning …",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write_vectored","","Like <code>poll_write</code>, except that it writes from a slice of …",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_write_vectored","","Determines if this writer has an efficient …",3,[[],["bool",15]]],[3,"ReadBuf","","A wrapper around a byte buffer that is incrementally …",null,null],[3,"Interest","","Readiness event interest",null,null],[3,"Ready","","Describes the readiness state of an I/O resources.",null,null],[5,"split","","Splits a single value implementing <code>AsyncRead + AsyncWrite</code> …",null,[[]]],[3,"ReadHalf","","The readable half of a value returned from <code>split</code>.",null,null],[3,"WriteHalf","","The writable half of a value returned from <code>split</code>.",null,null],[5,"copy","","Asynchronously copies the entire contents of a reader …",null,[[]]],[5,"copy_bidirectional","","Copies data in both directions between <code>a</code> and <code>b</code>.",null,[[]]],[5,"copy_buf","","Asynchronously copies the entire contents of a reader …",null,[[]]],[5,"duplex","","Create a new pair of <code>DuplexStream</code>s that act like a pair …",null,[[["usize",15]]]],[5,"empty","","Creates a new empty async reader.",null,[[],["empty",3]]],[5,"repeat","","Creates an instance of an async reader that infinitely …",null,[[["u8",15]],["repeat",3]]],[5,"sink","","Creates an instance of an async writer which will …",null,[[],["sink",3]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to …",null,null],[11,"read_until","","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …",4,[[["vec",3],["u8",15]],["readuntil",3]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is …",4,[[["string",3]],["readline",3]]],[11,"split","","Returns a stream of the contents of this reader split on …",4,[[["u8",15]],["split",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",4,[[],["lines",3]]],[8,"AsyncReadExt","","Reads bytes from a source.",null,null],[11,"chain","","Creates a new <code>AsyncRead</code> instance that chains this stream …",5,[[],["chain",3]]],[11,"read","","Pulls some bytes from this source into the specified …",5,[[],["read",3]]],[11,"read_buf","","Pulls some bytes from this source into the specified …",5,[[],["readbuf",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",5,[[],["readexact",3]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",5,[[],["readu8",3]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",5,[[],["readi8",3]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from …",5,[[],["readu16",3]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",5,[[],["readi16",3]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from …",5,[[],["readu32",3]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",5,[[],["readi32",3]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from …",5,[[],["readu64",3]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from …",5,[[],["readi64",3]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order …",5,[[],["readu128",3]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from …",5,[[],["readi128",3]]],[11,"read_u16_le","","Reads an unsigned 16-bit integer in little-endian order …",5,[[],["readu16le",3]]],[11,"read_i16_le","","Reads a signed 16-bit integer in little-endian order from …",5,[[],["readi16le",3]]],[11,"read_u32_le","","Reads an unsigned 32-bit integer in little-endian order …",5,[[],["readu32le",3]]],[11,"read_i32_le","","Reads a signed 32-bit integer in little-endian order from …",5,[[],["readi32le",3]]],[11,"read_u64_le","","Reads an unsigned 64-bit integer in little-endian order …",5,[[],["readu64le",3]]],[11,"read_i64_le","","Reads an signed 64-bit integer in little-endian order …",5,[[],["readi64le",3]]],[11,"read_u128_le","","Reads an unsigned 128-bit integer in little-endian order …",5,[[],["readu128le",3]]],[11,"read_i128_le","","Reads an signed 128-bit integer in little-endian order …",5,[[],["readi128le",3]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them …",5,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them …",5,[[["string",3]],["readtostring",3]]],[11,"take","","Creates an adaptor which reads at most <code>limit</code> bytes from …",5,[[["u64",15]],["take",3]]],[8,"AsyncSeekExt","","An extension trait that adds utility methods to <code>AsyncSeek</code> …",null,null],[11,"seek","","Creates a future which will seek an IO object, and then …",6,[[["seekfrom",4]],["seek",3]]],[11,"stream_position","","Creates a future which will return the current seek …",6,[[],["seek",3]]],[8,"AsyncWriteExt","","Writes bytes to a sink.",null,null],[11,"write","","Writes a buffer into this writer, returning how many …",7,[[],["write",3]]],[11,"write_vectored","","Like <code>write</code>, except that it writes from a slice of buffers.",7,[[],["writevectored",3]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer\'s …",7,[[],["writebuf",3]]],[11,"write_all_buf","","Attempts to write an entire buffer into this writer",7,[[],["writeallbuf",3]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",7,[[],["writeall",3]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",7,[[["u8",15]],["writeu8",3]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",7,[[["i8",15]],["writei8",3]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to …",7,[[["u16",15]],["writeu16",3]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the …",7,[[["i16",15]],["writei16",3]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to …",7,[[["u32",15]],["writeu32",3]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the …",7,[[["i32",15]],["writei32",3]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to …",7,[[["u64",15]],["writeu64",3]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",7,[[["i64",15]],["writei64",3]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to …",7,[[["u128",15]],["writeu128",3]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to …",7,[[["i128",15]],["writei128",3]]],[11,"write_u16_le","","Writes an unsigned 16-bit integer in little-endian order …",7,[[["u16",15]],["writeu16le",3]]],[11,"write_i16_le","","Writes a signed 16-bit integer in little-endian order to …",7,[[["i16",15]],["writei16le",3]]],[11,"write_u32_le","","Writes an unsigned 32-bit integer in little-endian order …",7,[[["u32",15]],["writeu32le",3]]],[11,"write_i32_le","","Writes a signed 32-bit integer in little-endian order to …",7,[[["i32",15]],["writei32le",3]]],[11,"write_u64_le","","Writes an unsigned 64-bit integer in little-endian order …",7,[[["u64",15]],["writeu64le",3]]],[11,"write_i64_le","","Writes an signed 64-bit integer in little-endian order to …",7,[[["i64",15]],["writei64le",3]]],[11,"write_u128_le","","Writes an unsigned 128-bit integer in little-endian order …",7,[[["u128",15]],["writeu128le",3]]],[11,"write_i128_le","","Writes an signed 128-bit integer in little-endian order …",7,[[["i128",15]],["writei128le",3]]],[11,"flush","","Flushes this output stream, ensuring that all …",7,[[],["flush",3]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can …",7,[[],["shutdown",3]]],[3,"BufReader","","The <code>BufReader</code> struct adds buffering to any reader.",null,null],[3,"BufStream","","Wraps a type that is [<code>AsyncWrite</code>] and [<code>AsyncRead</code>], and …",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"DuplexStream","","A bidirectional pipe to read and write bytes in memory.",null,null],[3,"Empty","","An async reader which is always at EOF.",null,null],[3,"Lines","","Read lines from an <code>AsyncBufRead</code>.",null,null],[3,"Repeat","","An async reader which yields one byte over and over and …",null,null],[3,"Sink","","An async writer which will move data into the void.",null,null],[3,"Split","","Splitter for the <code>split</code> method.",null,null],[3,"Take","","Stream for the <code>take</code> method.",null,null],[0,"net","tokio","TCP/UDP/Unix bindings for <code>tokio</code>.",null,null],[0,"tcp","tokio::net","TCP utility types",null,null],[3,"ReadHalf","tokio::net::tcp","Borrowed read half of a <code>TcpStream</code>, created by <code>split</code>.",null,null],[3,"WriteHalf","","Borrowed write half of a <code>TcpStream</code>, created by <code>split</code>.",null,null],[3,"OwnedReadHalf","","Owned read half of a <code>TcpStream</code>, created by <code>into_split</code>.",null,null],[3,"OwnedWriteHalf","","Owned write half of a <code>TcpStream</code>, created by <code>into_split</code>.",null,null],[3,"ReuniteError","","Error indicating that two halves were not from the same …",null,null],[12,"0","","",8,null],[12,"1","","",8,null],[0,"unix","tokio::net","Unix domain socket utility types",null,null],[3,"ReadHalf","tokio::net::unix","Borrowed read half of a <code>UnixStream</code>, created by <code>split</code>.",null,null],[3,"WriteHalf","","Borrowed write half of a <code>UnixStream</code>, created by <code>split</code>.",null,null],[3,"OwnedReadHalf","","Owned read half of a <code>UnixStream</code>, created by <code>into_split</code>.",null,null],[3,"OwnedWriteHalf","","Owned write half of a <code>UnixStream</code>, created by <code>into_split</code>.",null,null],[3,"ReuniteError","","Error indicating that two halves were not from the same …",null,null],[12,"0","","",9,null],[12,"1","","",9,null],[3,"SocketAddr","","An address associated with a Tokio Unix socket.",null,null],[3,"UCred","","Credentials of a process",null,null],[8,"ToSocketAddrs","tokio::net","Converts or resolves without blocking to one or more …",null,null],[5,"lookup_host","","Performs a DNS resolution.",null,[[]]],[3,"TcpListener","","A TCP socket server, listening for connections.",null,null],[3,"TcpSocket","","A TCP socket that has not yet been converted to a …",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[3,"UdpSocket","","A UDP socket",null,null],[3,"UnixDatagram","","An I/O object representing a Unix datagram socket.",null,null],[3,"UnixListener","","A Unix socket which can accept connections from other …",null,null],[3,"UnixStream","","A structure representing a connected Unix socket.",null,null],[0,"runtime","tokio","The Tokio runtime.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"EnterGuard","","Runtime context guard.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[3,"Runtime","","The Tokio runtime.",null,null],[11,"handle","","Return a handle to the runtime\'s spawner.",10,[[],["handle",3]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",10,[[],["joinhandle",3]]],[11,"spawn_blocking","","Run the provided function on an executor dedicated to …",10,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is …",10,[[["future",8]]]],[11,"enter","","Enter the runtime context.",10,[[],["enterguard",3]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most <code>duration</code> for …",10,[[["duration",3]]]],[11,"shutdown_background","","Shutdown the runtime, without waiting for any spawned …",10,[[]]],[0,"sync","tokio","Synchronization primitives for use in asynchronous …",null,null],[0,"broadcast","tokio::sync","A multi-producer, multi-consumer broadcast queue. Each …",null,null],[0,"error","tokio::sync::broadcast","Broadcast error types",null,null],[3,"SendError","tokio::sync::broadcast::error","Error returned by from the <code>send</code> function on a <code>Sender</code>.",null,null],[12,"0","","",11,null],[4,"RecvError","","An error returned from the <code>recv</code> function on a <code>Receiver</code>.",null,null],[13,"Closed","","There are no more active senders implying no further …",12,null],[13,"Lagged","","The receiver lagged too far behind. Attempting to receive …",12,null],[4,"TryRecvError","","An error returned from the <code>try_recv</code> function on a <code>Receiver</code>…",null,null],[13,"Empty","","The channel is currently empty. There are still active …",13,null],[13,"Closed","","There are no more active senders implying no further …",13,null],[13,"Lagged","","The receiver lagged too far behind and has been forcibly …",13,null],[3,"Sender","tokio::sync::broadcast","Sending-half of the <code>broadcast</code> channel.",null,null],[3,"Receiver","","Receiving-half of the <code>broadcast</code> channel.",null,null],[5,"channel","","Create a bounded, multi-producer, multi-consumer channel …",null,[[["usize",15]]]],[11,"send","","Attempts to send a value to all active <code>Receiver</code> handles, …",14,[[],[["result",4],["usize",15],["senderror",3]]]],[11,"subscribe","","Creates a new [<code>Receiver</code>] handle that will receive values …",14,[[],["receiver",3]]],[11,"receiver_count","","Returns the number of active receivers",14,[[],["usize",15]]],[11,"recv","","Receives the next value for this receiver.",15,[[]]],[11,"try_recv","","Attempts to return a pending value on this receiver …",15,[[],[["result",4],["tryrecverror",4]]]],[0,"mpsc","tokio::sync","A multi-producer, single-consumer queue for sending …",null,null],[0,"error","tokio::sync::mpsc","Channel error types",null,null],[3,"SendError","tokio::sync::mpsc::error","Error returned by the <code>Sender</code>.",null,null],[12,"0","","",16,null],[4,"TrySendError","","This enumeration is the list of the possible error …",null,null],[13,"Full","","The data could not be sent on the channel because the …",17,null],[13,"Closed","","The receive half of the channel was explicitly closed or …",17,null],[3,"RecvError","","Error returned by <code>Receiver</code>.",null,null],[4,"SendTimeoutError","","Error returned by <code>Sender::send_timeout</code>].",null,null],[13,"Timeout","","The data could not be sent on the channel because the …",18,null],[13,"Closed","","The receive half of the channel was explicitly closed or …",18,null],[5,"channel","tokio::sync::mpsc","Creates a bounded mpsc channel for communicating between …",null,[[["usize",15]]]],[3,"OwnedPermit","","Owned permit to send one value into the channel.",null,null],[3,"Permit","","Permit to send one value into the channel.",null,null],[3,"Receiver","","Receive values from the associated <code>Sender</code>.",null,null],[3,"Sender","","Send values to the associated <code>Receiver</code>.",null,null],[5,"unbounded_channel","","Creates an unbounded mpsc channel for communicating …",null,[[]]],[3,"UnboundedReceiver","","Receive values from the associated <code>UnboundedSender</code>.",null,null],[3,"UnboundedSender","","Send values to the associated <code>UnboundedReceiver</code>.",null,null],[0,"oneshot","tokio::sync","A one-shot channel is used for sending a single message …",null,null],[0,"error","tokio::sync::oneshot","Oneshot error types",null,null],[3,"RecvError","tokio::sync::oneshot::error","Error returned by the <code>Future</code> implementation for <code>Receiver</code>.",null,null],[4,"TryRecvError","","Error returned by the <code>try_recv</code> function on <code>Receiver</code>.",null,null],[13,"Empty","","The send half of the channel has not yet sent a value.",19,null],[13,"Closed","","The send half of the channel was dropped without sending …",19,null],[3,"Sender","tokio::sync::oneshot","Sends a value to the associated [<code>Receiver</code>].",null,null],[3,"Receiver","","Receive a value from the associated [<code>Sender</code>].",null,null],[5,"channel","","Create a new one-shot channel for sending single values …",null,[[]]],[11,"send","","Attempts to send a value on this channel, returning it …",20,[[],["result",4]]],[11,"closed","","Waits for the associated <code>Receiver</code> handle to close.",20,[[]]],[11,"is_closed","","Returns <code>true</code> if the associated <code>Receiver</code> handle has been …",20,[[],["bool",15]]],[11,"poll_closed","","Check whether the oneshot channel has been closed, and if …",20,[[["context",3]],["poll",4]]],[11,"close","","Prevents the associated <code>Sender</code> handle from sending a …",21,[[]]],[11,"try_recv","","Attempts to receive a value.",21,[[],[["tryrecverror",4],["result",4]]]],[0,"watch","tokio::sync","A single-producer, multi-consumer channel that only …",null,null],[0,"error","tokio::sync::watch","Watch error types",null,null],[3,"SendError","tokio::sync::watch::error","Error produced when sending a value fails.",null,null],[3,"RecvError","","Error produced when receiving a change notification.",null,null],[3,"Receiver","tokio::sync::watch","Receives values from the associated <code>Sender</code>.",null,null],[3,"Sender","","Sends values to the associated <code>Receiver</code>.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Creates a new watch channel, returning the \\\"send\\\" and …",null,[[]]],[11,"borrow","","Returns a reference to the most recently sent value",22,[[],["ref",3]]],[11,"changed","","Wait for a change notification",22,[[]]],[11,"send","","Sends a new value via the channel, notifying all …",23,[[],[["senderror",3],["result",4]]]],[11,"borrow","","Returns a reference to the most recently sent value",23,[[],["ref",3]]],[11,"is_closed","","Checks if the channel has been closed. This happens when …",23,[[],["bool",15]]],[11,"closed","","Completes when all receivers have dropped.",23,[[]]],[3,"Barrier","tokio::sync","A barrier enables multiple tasks to synchronize the …",null,null],[3,"BarrierWaitResult","","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all tasks in …",null,null],[3,"Mutex","","An asynchronous <code>Mutex</code>-like type.",null,null],[3,"MutexGuard","","A handle to a held <code>Mutex</code>. The guard can be held across …",null,null],[3,"TryLockError","","Error returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> …",null,null],[3,"OwnedMutexGuard","","An owned handle to a held <code>Mutex</code>.",null,null],[3,"MappedMutexGuard","","A handle to a held <code>Mutex</code> that has had a function applied …",null,null],[3,"Notify","","Notify a single task to wake up.",null,null],[3,"AcquireError","","Error returned from the <code>Semaphore::acquire</code> function.",null,null],[4,"TryAcquireError","","Error returned from the <code>Semaphore::try_acquire</code> function.",null,null],[13,"Closed","","The semaphore has been closed and cannot issue new …",24,null],[13,"NoPermits","","The semaphore has no available permits.",24,null],[3,"Semaphore","","Counting semaphore performing asynchronous permit …",null,null],[3,"SemaphorePermit","","A permit from the semaphore.",null,null],[3,"OwnedSemaphorePermit","","An owned permit from the semaphore.",null,null],[3,"RwLock","","An asynchronous reader-writer lock.",null,null],[3,"OwnedRwLockReadGuard","","Owned RAII structure used to release the shared read …",null,null],[3,"OwnedRwLockWriteGuard","","Owned RAII structure used to release the exclusive write …",null,null],[3,"OwnedRwLockMappedWriteGuard","","Owned RAII structure used to release the exclusive write …",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[3,"RwLockMappedWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[3,"OnceCell","","A thread-safe cell which can be written to only once.",null,null],[4,"SetError","","Errors that can be returned from <code>OnceCell::set</code>",null,null],[13,"AlreadyInitializedError","","Error resulting from <code>OnceCell::set</code> calls if the cell was …",25,null],[13,"InitializingError","","Error resulting from <code>OnceCell::set</code> calls when the cell is …",25,null],[0,"task","tokio","Asynchronous green-threads.",null,null],[3,"JoinError","tokio::task","Task failed to execute to completion.",null,null],[3,"JoinHandle","","An owned permission to join on a task (await its …",null,null],[5,"spawn_blocking","","Runs the provided closure on a thread where blocking is …",null,[[],["joinhandle",3]]],[5,"spawn","","Spawns a new asynchronous task, returning a <code>JoinHandle</code> …",null,[[],["joinhandle",3]]],[5,"yield_now","","Yields execution back to the Tokio runtime.",null,[[]]],[5,"spawn_local","","Spawns a <code>!Send</code> future on the local task set.",null,[[],["joinhandle",3]]],[3,"LocalSet","","A set of tasks which are executed on the same thread.",null,null],[3,"LocalKey","","A key for task-local data.",null,null],[5,"unconstrained","","Turn off cooperative scheduling for a future. The future …",null,[[],["unconstrained",3]]],[3,"Unconstrained","","Future for the <code>unconstrained</code> method.",null,null],[0,"time","tokio","Utilities for tracking time.",null,null],[0,"error","tokio::time","Time error types.",null,null],[3,"Error","tokio::time::error","Errors encountered by the timer implementation.",null,null],[3,"Elapsed","","Error returned by <code>Timeout</code>.",null,null],[11,"shutdown","","Creates an error representing a shutdown timer.",26,[[],["error",3]]],[11,"is_shutdown","","Returns <code>true</code> if the error was caused by the timer being …",26,[[],["bool",15]]],[11,"at_capacity","","Creates an error representing a timer at capacity.",26,[[],["error",3]]],[11,"is_at_capacity","","Returns <code>true</code> if the error was caused by the timer being …",26,[[],["bool",15]]],[11,"invalid","","Create an error representing a misconfigured timer.",26,[[],["error",3]]],[11,"is_invalid","","Returns <code>true</code> if the error was caused by the timer being …",26,[[],["bool",15]]],[5,"sleep","tokio::time","Waits until <code>duration</code> has elapsed.",null,[[["duration",3]],["sleep",3]]],[5,"sleep_until","","Waits until <code>deadline</code> is reached.",null,[[["instant",3]],["sleep",3]]],[3,"Sleep","","Future returned by <code>sleep</code> and <code>sleep_until</code>.",null,null],[3,"Instant","","A measurement of a monotonically nondecreasing clock. …",null,null],[5,"interval","","Creates new <code>Interval</code> that yields with interval of <code>duration</code>…",null,[[["duration",3]],["interval",3]]],[5,"interval_at","","Creates new <code>Interval</code> that yields with interval of <code>period</code> …",null,[[["duration",3],["instant",3]],["interval",3]]],[3,"Interval","","Interval returned by <code>interval</code> and <code>interval_at</code>.",null,null],[5,"timeout","","Require a <code>Future</code> to complete before the specified …",null,[[["duration",3]],["timeout",3]]],[5,"timeout_at","","Require a <code>Future</code> to complete before the specified instant …",null,[[["instant",3]],["timeout",3]]],[3,"Timeout","","Future returned by <code>timeout</code> and <code>timeout_at</code>.",null,null],[0,"stream","tokio","Due to the <code>Stream</code> trait\'s inclusion in <code>std</code> landing later …",null,null],[5,"spawn","","Spawns a new asynchronous task, returning a <code>JoinHandle</code> …",null,[[],["joinhandle",3]]],[14,"pin","","Pins a value on the stack.",null,null],[14,"task_local","","Declares a new task-local key of type …",null,null],[11,"from","tokio::io","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","tokio::io::unix","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","tokio::io","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","tokio::net","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","tokio::net::tcp","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tokio::net","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","tokio::net::unix","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","tokio::net","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","tokio::net::unix","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","tokio::task","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_future","","",64,[[]]],[11,"from","tokio::runtime","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tokio::sync","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","tokio::sync::broadcast::error","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","tokio::sync::broadcast","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","tokio::sync::mpsc","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","tokio::sync::mpsc::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tokio::sync","",77,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","tokio::sync::oneshot::error","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","tokio::sync::oneshot","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_future","","",21,[[]]],[11,"from","tokio::sync","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","tokio::sync::watch::error","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_string","","",96,[[],["string",3]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","tokio::sync::watch","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","tokio::task","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_future","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_future","","",101,[[]]],[11,"from","tokio::time","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_future","","",102,[[]]],[11,"from","tokio::time::error","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","tokio::time","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_future","","",106,[[]]],[11,"poll_fill_buf","tokio::io","",36,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",36,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",37,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",37,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",38,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",38,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",39,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",39,[[["pin",3],["usize",15]]]],[11,"poll_fill_buf","","",45,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"consume","","",45,[[["pin",3],["usize",15]]]],[11,"poll_read","","",34,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",36,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",37,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",38,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",39,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",41,[[["pin",3],["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_read","","",42,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",45,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_read","tokio::net::tcp","",48,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",50,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","tokio::net","",52,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","tokio::net::unix","",56,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","","",58,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_read","tokio::net","",61,[[["pin",3],["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"start_seek","tokio::io","",36,[[["pin",3],["seekfrom",4]],["result",6]]],[11,"poll_complete","","",36,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"start_seek","","",38,[[["pin",3],["seekfrom",4]],["result",6]]],[11,"poll_complete","","",38,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",35,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_flush","","",35,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",35,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","","",36,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",36,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",36,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",37,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",37,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",37,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",38,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_flush","","",38,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",38,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",41,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",41,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_shutdown","","",41,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write","","",43,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_flush","","",43,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_shutdown","","",43,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_write","tokio::net::tcp","",49,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",49,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",49,[[],["bool",15]]],[11,"poll_flush","","",49,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",49,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",51,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",51,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",51,[[],["bool",15]]],[11,"poll_flush","","",51,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",51,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","tokio::net","",52,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",52,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",52,[[],["bool",15]]],[11,"poll_flush","","",52,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",52,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","tokio::net::unix","",57,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",57,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",57,[[],["bool",15]]],[11,"poll_flush","","",57,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",57,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",59,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",59,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",59,[[],["bool",15]]],[11,"poll_flush","","",59,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",59,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","tokio::net","",61,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_vectored","","",61,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"is_write_vectored","","",61,[[],["bool",15]]],[11,"poll_flush","","",61,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",61,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"drop","tokio::io::unix","",30,[[]]],[11,"drop","tokio::io","",41,[[]]],[11,"drop","tokio::net::tcp","",51,[[]]],[11,"drop","tokio::net::unix","",59,[[]]],[11,"drop","tokio::task","",64,[[]]],[11,"drop","tokio::sync::broadcast","",14,[[]]],[11,"drop","","",15,[[]]],[11,"drop","tokio::sync::mpsc","",71,[[]]],[11,"drop","","",72,[[]]],[11,"drop","tokio::sync","",78,[[]]],[11,"drop","","",79,[[]]],[11,"drop","","",80,[[]]],[11,"drop","tokio::sync::oneshot","",20,[[]]],[11,"drop","","",21,[[]]],[11,"drop","tokio::sync","",86,[[]]],[11,"drop","","",87,[[]]],[11,"drop","","",88,[[]]],[11,"drop","","",89,[[]]],[11,"drop","","",90,[[]]],[11,"drop","","",91,[[]]],[11,"drop","","",92,[[]]],[11,"drop","","",93,[[]]],[11,"drop","","",95,[[]]],[11,"drop","tokio::sync::watch","",22,[[]]],[11,"drop","","",23,[[]]],[11,"drop","tokio::task","",99,[[]]],[11,"as_ref","tokio::net::tcp","",48,[[],["tcpstream",3]]],[11,"as_ref","","",49,[[],["tcpstream",3]]],[11,"as_ref","","",50,[[],["tcpstream",3]]],[11,"as_ref","","",51,[[],["tcpstream",3]]],[11,"as_ref","tokio::net::unix","",56,[[],["unixstream",3]]],[11,"as_ref","","",57,[[],["unixstream",3]]],[11,"as_ref","","",58,[[],["unixstream",3]]],[11,"as_ref","","",59,[[],["unixstream",3]]],[11,"from","tokio::io","",37,[[["bufreader",3],["bufwriter",3]]]],[11,"from","","",37,[[["bufwriter",3],["bufreader",3]]]],[11,"from","tokio::sync::mpsc::error","",17,[[["senderror",3]],["trysenderror",4]]],[11,"from","tokio::sync","",77,[[]]],[11,"from","","",94,[[]]],[11,"from","tokio::time","",104,[[["instant",3]],["instant",3]]],[11,"clone","tokio::io","",28,[[],["interest",3]]],[11,"clone","","",29,[[],["ready",3]]],[11,"clone","tokio::net::unix","",62,[[],["ucred",3]]],[11,"clone","tokio::runtime","",66,[[],["handle",3]]],[11,"clone","tokio::sync","",69,[[],["barrierwaitresult",3]]],[11,"clone","tokio::sync::broadcast","",14,[[],["sender",3]]],[11,"clone","tokio::sync::mpsc","",70,[[]]],[11,"clone","","",74,[[]]],[11,"clone","tokio::sync","",95,[[],["oncecell",3]]],[11,"clone","tokio::sync::watch","",22,[[]]],[11,"clone","tokio::time::error","",26,[[],["error",3]]],[11,"clone","tokio::time","",104,[[],["instant",3]]],[11,"default","tokio::sync","",77,[[]]],[11,"default","","",82,[[],["notify",3]]],[11,"default","","",94,[[]]],[11,"default","","",95,[[],["oncecell",3]]],[11,"default","tokio::task","",99,[[],["localset",3]]],[11,"cmp","tokio::time","",104,[[["instant",3]],["ordering",4]]],[11,"eq","tokio::io","",28,[[["interest",3]],["bool",15]]],[11,"ne","","",28,[[["interest",3]],["bool",15]]],[11,"eq","","",29,[[["ready",3]],["bool",15]]],[11,"ne","","",29,[[["ready",3]],["bool",15]]],[11,"eq","tokio::net::unix","",62,[[["ucred",3]],["bool",15]]],[11,"ne","","",62,[[["ucred",3]],["bool",15]]],[11,"eq","tokio::sync::broadcast::error","",12,[[["recverror",4]],["bool",15]]],[11,"ne","","",12,[[["recverror",4]],["bool",15]]],[11,"eq","","",13,[[["tryrecverror",4]],["bool",15]]],[11,"ne","","",13,[[["tryrecverror",4]],["bool",15]]],[11,"eq","tokio::sync::oneshot::error","",83,[[["recverror",3]],["bool",15]]],[11,"ne","","",83,[[["recverror",3]],["bool",15]]],[11,"eq","","",19,[[["tryrecverror",4]],["bool",15]]],[11,"eq","tokio::sync","",24,[[["tryacquireerror",4]],["bool",15]]],[11,"eq","","",95,[[["oncecell",3]],["bool",15]]],[11,"eq","","",25,[[["seterror",4]],["bool",15]]],[11,"ne","","",25,[[["seterror",4]],["bool",15]]],[11,"eq","tokio::time::error","",103,[[["elapsed",3]],["bool",15]]],[11,"ne","","",103,[[["elapsed",3]],["bool",15]]],[11,"eq","tokio::time","",104,[[["instant",3]],["bool",15]]],[11,"ne","","",104,[[["instant",3]],["bool",15]]],[11,"partial_cmp","tokio::io","",29,[[["ready",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["ready",3]],["bool",15]]],[11,"le","","",29,[[["ready",3]],["bool",15]]],[11,"gt","","",29,[[["ready",3]],["bool",15]]],[11,"ge","","",29,[[["ready",3]],["bool",15]]],[11,"partial_cmp","tokio::time","",104,[[["instant",3]],[["option",4],["ordering",4]]]],[11,"lt","","",104,[[["instant",3]],["bool",15]]],[11,"le","","",104,[[["instant",3]],["bool",15]]],[11,"gt","","",104,[[["instant",3]],["bool",15]]],[11,"ge","","",104,[[["instant",3]],["bool",15]]],[11,"deref","tokio::sync","",78,[[]]],[11,"deref","","",79,[[]]],[11,"deref","","",80,[[]]],[11,"deref","","",88,[[]]],[11,"deref","","",89,[[]]],[11,"deref","","",90,[[]]],[11,"deref","","",91,[[]]],[11,"deref","","",92,[[]]],[11,"deref","","",93,[[]]],[11,"deref","tokio::sync::watch","",98,[[]]],[11,"deref_mut","tokio::sync","",78,[[]]],[11,"deref_mut","","",79,[[]]],[11,"deref_mut","","",80,[[]]],[11,"deref_mut","","",89,[[]]],[11,"deref_mut","","",90,[[]]],[11,"deref_mut","","",92,[[]]],[11,"deref_mut","","",93,[[]]],[11,"fmt","tokio::io","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::io::unix","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::io","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::tcp","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net","",61,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",62,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::runtime","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc::error","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot::error","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch::error","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",102,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time::error","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::tcp","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::net::unix","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::task","",63,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::broadcast::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::mpsc::error","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::oneshot::error","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::sync::watch::error","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","tokio::time::error","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"sub","tokio::io","",29,[[["ready",3]],["ready",3]]],[11,"sub","tokio::time","",104,[[["instant",3]],["duration",3]]],[11,"sub","","",104,[[["duration",3]],["instant",3]]],[11,"add","","",104,[[["duration",3]],["instant",3]]],[11,"add_assign","","",104,[[["duration",3]]]],[11,"sub_assign","","",104,[[["duration",3]]]],[11,"bitand","tokio::io","",29,[[["ready",3]],["ready",3]]],[11,"bitor","","",28,[[]]],[11,"bitor","","",29,[[["ready",3]],["ready",3]]],[11,"bitor_assign","","",28,[[]]],[11,"bitor_assign","","",29,[[["ready",3]]]],[11,"hash","tokio::net::unix","",62,[[]]],[11,"hash","tokio::time","",104,[[]]],[11,"try_from","tokio::net","Consumes stream, returning the tokio I/O object.",46,[[["tcplistener",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",52,[[["tcpstream",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",53,[[["udpsocket",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the Tokio I/O object.",54,[[["unixdatagram",3]],["result",4]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",55,[[["unixlistener",3]],["result",6]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",61,[[["unixstream",3]],["result",6]]],[11,"as_raw_fd","tokio::io::unix","",30,[[],["rawfd",6]]],[11,"as_raw_fd","tokio::net","",46,[[],["rawfd",6]]],[11,"as_raw_fd","","",47,[[],["rawfd",6]]],[11,"as_raw_fd","","",52,[[],["rawfd",6]]],[11,"as_raw_fd","","",53,[[],["rawfd",6]]],[11,"as_raw_fd","","",54,[[],["rawfd",6]]],[11,"as_raw_fd","","",55,[[],["rawfd",6]]],[11,"as_raw_fd","","",61,[[],["rawfd",6]]],[11,"from_raw_fd","","Converts a <code>RawFd</code> to a <code>TcpSocket</code>.",47,[[["rawfd",6]],["tcpsocket",3]]],[11,"into_raw_fd","","",47,[[],["rawfd",6]]],[11,"poll","tokio::task","",64,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::sync::oneshot","",21,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::task","",99,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",101,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio::time","",102,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","",106,[[["pin",3],["context",3]],["poll",4]]],[11,"poll_write_vectored","tokio::io","Like <code>poll_write</code>, except that it writes from a slice of …",3,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"is_write_vectored","","Determines if this writer has an efficient …",3,[[],["bool",15]]],[11,"new","","Creates a new <code>ReadBuf</code> from a fully initialized buffer.",27,[[],["readbuf",3]]],[11,"uninit","","Creates a new <code>ReadBuf</code> from a fully uninitialized buffer.",27,[[],["readbuf",3]]],[11,"capacity","","Returns the total capacity of the buffer.",27,[[],["usize",15]]],[11,"filled","","Returns a shared reference to the filled portion of the …",27,[[]]],[11,"filled_mut","","Returns a mutable reference to the filled portion of the …",27,[[]]],[11,"take","","Returns a new <code>ReadBuf</code> comprised of the unfilled section …",27,[[["usize",15]],["readbuf",3]]],[11,"initialized","","Returns a shared reference to the initialized portion of …",27,[[]]],[11,"initialized_mut","","Returns a mutable reference to the initialized portion of …",27,[[]]],[11,"inner_mut","","Returns a mutable reference to the entire buffer, without …",27,[[]]],[11,"unfilled_mut","","Returns a mutable reference to the unfilled part of the …",27,[[]]],[11,"initialize_unfilled","","Returns a mutable reference to the unfilled part of the …",27,[[]]],[11,"initialize_unfilled_to","","Returns a mutable reference to the first <code>n</code> bytes of the …",27,[[["usize",15]]]],[11,"remaining","","Returns the number of bytes at the end of the slice that …",27,[[],["usize",15]]],[11,"clear","","Clears the buffer, resetting the filled region to empty.",27,[[]]],[11,"advance","","Advances the size of the filled region of the buffer.",27,[[["usize",15]]]],[11,"set_filled","","Sets the size of the filled region of the buffer.",27,[[["usize",15]]]],[11,"assume_init","","Asserts that the first <code>n</code> unfilled bytes of the buffer are …",27,[[["usize",15]]]],[11,"put_slice","","Appends data to the buffer, advancing the written …",27,[[]]],[18,"READABLE","","Interest in all readable events.",28,null],[18,"WRITABLE","","Interest in all writable events",28,null],[11,"is_readable","","Returns true if the value includes readable interest.",28,[[],["bool",15]]],[11,"is_writable","","Returns true if the value includes writable interest.",28,[[],["bool",15]]],[11,"add","","Add together two <code>Interst</code> values.",28,[[["interest",3]],["interest",3]]],[18,"EMPTY","","Returns the empty <code>Ready</code> set.",29,null],[18,"READABLE","","Returns a <code>Ready</code> representing readable readiness.",29,null],[18,"WRITABLE","","Returns a <code>Ready</code> representing writable readiness.",29,null],[18,"READ_CLOSED","","Returns a <code>Ready</code> representing read closed readiness.",29,null],[18,"WRITE_CLOSED","","Returns a <code>Ready</code> representing write closed readiness.",29,null],[18,"ALL","","Returns a <code>Ready</code> representing readiness for all operations.",29,null],[11,"is_empty","","Returns true if <code>Ready</code> is the empty set",29,[[],["bool",15]]],[11,"is_readable","","Returns <code>true</code> if the value includes <code>readable</code>",29,[[],["bool",15]]],[11,"is_writable","","Returns <code>true</code> if the value includes writable <code>readiness</code>",29,[[],["bool",15]]],[11,"is_read_closed","","Returns <code>true</code> if the value includes read-closed <code>readiness</code>",29,[[],["bool",15]]],[11,"is_write_closed","","Returns <code>true</code> if the value includes write-closed <code>readiness</code>",29,[[],["bool",15]]],[11,"new","tokio::io::unix","Creates an AsyncFd backed by (and taking ownership of) an …",30,[[],["result",6]]],[11,"with_interest","","Creates new instance as <code>new</code> with additional ability to …",30,[[["interest",3]],["result",6]]],[11,"get_ref","","Returns a shared reference to the backing object of this […",30,[[]]],[11,"get_mut","","Returns a mutable reference to the backing object of this …",30,[[]]],[11,"into_inner","","Deregisters this file descriptor and returns ownership of …",30,[[]]],[11,"poll_read_ready","","Polls for read readiness.",30,[[["context",3]],[["result",6],["poll",4]]]],[11,"poll_read_ready_mut","","Polls for read readiness.",30,[[["context",3]],[["poll",4],["result",6]]]],[11,"poll_write_ready","","Polls for write readiness.",30,[[["context",3]],[["result",6],["poll",4]]]],[11,"poll_write_ready_mut","","Polls for write readiness.",30,[[["context",3]],[["poll",4],["result",6]]]],[11,"readable","","Waits for the file descriptor to become readable, …",30,[[]]],[11,"readable_mut","","Waits for the file descriptor to become readable, …",30,[[]]],[11,"writable","","Waits for the file descriptor to become writable, …",30,[[]]],[11,"writable_mut","","Waits for the file descriptor to become writable, …",30,[[]]],[11,"clear_ready","","Indicates to tokio that the file descriptor is no longer …",31,[[]]],[11,"retain_ready","","This method should be invoked when you intentionally want …",31,[[]]],[11,"try_io","","Performs the provided IO operation.",31,[[],[["result",4],["tryioerror",3],["result",6]]]],[11,"clear_ready","","Indicates to tokio that the file descriptor is no longer …",32,[[]]],[11,"retain_ready","","This method should be invoked when you intentionally want …",32,[[]]],[11,"try_io","","Performs the provided IO operation.",32,[[],[["result",4],["tryioerror",3],["result",6]]]],[11,"is_pair_of","tokio::io","Checks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split …",34,[[["writehalf",3]],["bool",15]]],[11,"unsplit","","Reunites with a previously split <code>WriteHalf</code>.",34,[[["writehalf",3]]]],[11,"is_pair_of","","Check if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …",35,[[["readhalf",3]],["bool",15]]],[11,"read_until","","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …",4,[[["vec",3],["u8",15]],["readuntil",3]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is …",4,[[["string",3]],["readline",3]]],[11,"split","","Returns a stream of the contents of this reader split on …",4,[[["u8",15]],["split",3]]],[11,"lines","","Returns a stream over the lines of this reader. This …",4,[[],["lines",3]]],[11,"chain","","Creates a new <code>AsyncRead</code> instance that chains this stream …",5,[[],["chain",3]]],[11,"read","","Pulls some bytes from this source into the specified …",5,[[],["read",3]]],[11,"read_buf","","Pulls some bytes from this source into the specified …",5,[[],["readbuf",3]]],[11,"read_exact","","Reads the exact number of bytes required to fill <code>buf</code>.",5,[[],["readexact",3]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying …",5,[[],["readu8",3]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",5,[[],["readi8",3]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from …",5,[[],["readu16",3]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",5,[[],["readi16",3]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from …",5,[[],["readu32",3]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",5,[[],["readi32",3]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from …",5,[[],["readu64",3]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from …",5,[[],["readi64",3]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order …",5,[[],["readu128",3]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from …",5,[[],["readi128",3]]],[11,"read_u16_le","","Reads an unsigned 16-bit integer in little-endian order …",5,[[],["readu16le",3]]],[11,"read_i16_le","","Reads a signed 16-bit integer in little-endian order from …",5,[[],["readi16le",3]]],[11,"read_u32_le","","Reads an unsigned 32-bit integer in little-endian order …",5,[[],["readu32le",3]]],[11,"read_i32_le","","Reads a signed 32-bit integer in little-endian order from …",5,[[],["readi32le",3]]],[11,"read_u64_le","","Reads an unsigned 64-bit integer in little-endian order …",5,[[],["readu64le",3]]],[11,"read_i64_le","","Reads an signed 64-bit integer in little-endian order …",5,[[],["readi64le",3]]],[11,"read_u128_le","","Reads an unsigned 128-bit integer in little-endian order …",5,[[],["readu128le",3]]],[11,"read_i128_le","","Reads an signed 128-bit integer in little-endian order …",5,[[],["readi128le",3]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them …",5,[[["vec",3]],["readtoend",3]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them …",5,[[["string",3]],["readtostring",3]]],[11,"take","","Creates an adaptor which reads at most <code>limit</code> bytes from …",5,[[["u64",15]],["take",3]]],[11,"seek","","Creates a future which will seek an IO object, and then …",6,[[["seekfrom",4]],["seek",3]]],[11,"stream_position","","Creates a future which will return the current seek …",6,[[],["seek",3]]],[11,"write","","Writes a buffer into this writer, returning how many …",7,[[],["write",3]]],[11,"write_vectored","","Like <code>write</code>, except that it writes from a slice of buffers.",7,[[],["writevectored",3]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer\'s …",7,[[],["writebuf",3]]],[11,"write_all_buf","","Attempts to write an entire buffer into this writer",7,[[],["writeallbuf",3]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",7,[[],["writeall",3]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",7,[[["u8",15]],["writeu8",3]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",7,[[["i8",15]],["writei8",3]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to …",7,[[["u16",15]],["writeu16",3]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the …",7,[[["i16",15]],["writei16",3]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to …",7,[[["u32",15]],["writeu32",3]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the …",7,[[["i32",15]],["writei32",3]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to …",7,[[["u64",15]],["writeu64",3]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",7,[[["i64",15]],["writei64",3]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to …",7,[[["u128",15]],["writeu128",3]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to …",7,[[["i128",15]],["writei128",3]]],[11,"write_u16_le","","Writes an unsigned 16-bit integer in little-endian order …",7,[[["u16",15]],["writeu16le",3]]],[11,"write_i16_le","","Writes a signed 16-bit integer in little-endian order to …",7,[[["i16",15]],["writei16le",3]]],[11,"write_u32_le","","Writes an unsigned 32-bit integer in little-endian order …",7,[[["u32",15]],["writeu32le",3]]],[11,"write_i32_le","","Writes a signed 32-bit integer in little-endian order to …",7,[[["i32",15]],["writei32le",3]]],[11,"write_u64_le","","Writes an unsigned 64-bit integer in little-endian order …",7,[[["u64",15]],["writeu64le",3]]],[11,"write_i64_le","","Writes an signed 64-bit integer in little-endian order to …",7,[[["i64",15]],["writei64le",3]]],[11,"write_u128_le","","Writes an unsigned 128-bit integer in little-endian order …",7,[[["u128",15]],["writeu128le",3]]],[11,"write_i128_le","","Writes an signed 128-bit integer in little-endian order …",7,[[["i128",15]],["writei128le",3]]],[11,"flush","","Flushes this output stream, ensuring that all …",7,[[],["flush",3]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can …",7,[[],["shutdown",3]]],[11,"new","","Creates a new <code>BufReader</code> with a default buffer capacity. …",36,[[]]],[11,"with_capacity","","Creates a new <code>BufReader</code> with the specified buffer …",36,[[["usize",15]]]],[11,"get_ref","","Gets a reference to the underlying reader.",36,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",36,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",36,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this <code>BufReader</code>, returning the underlying reader.",36,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",36,[[]]],[11,"new","","Wraps a type in both [<code>BufWriter</code>] and [<code>BufReader</code>].",37,[[],["bufstream",3]]],[11,"with_capacity","","Creates a <code>BufStream</code> with the specified [<code>BufReader</code>] …",37,[[["usize",15]],["bufstream",3]]],[11,"get_ref","","Gets a reference to the underlying I/O object.",37,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying I/O object.",37,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying I/O …",37,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this <code>BufStream</code>, returning the underlying I/O …",37,[[]]],[11,"new","","Creates a new <code>BufWriter</code> with a default buffer capacity. …",38,[[]]],[11,"with_capacity","","Creates a new <code>BufWriter</code> with the specified buffer …",38,[[["usize",15]]]],[11,"get_ref","","Gets a reference to the underlying writer.",38,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",38,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",38,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes this <code>BufWriter</code>, returning the underlying writer.",38,[[]]],[11,"buffer","","Returns a reference to the internally buffered data.",38,[[]]],[11,"next_line","","Returns the next line in the stream.",40,[[]]],[11,"get_mut","","Obtain a mutable reference to the underlying reader",40,[[]]],[11,"get_ref","","Obtain a reference to the underlying reader",40,[[]]],[11,"into_inner","","Unwraps this <code>Lines<R></code>, returning the underlying reader.",40,[[]]],[11,"poll_next_line","","Polls for the next line in the stream.",40,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"next_segment","","Returns the next segment in the stream.",44,[[]]],[11,"poll_next_segment","","Polls for the next segment in the stream.",44,[[["pin",3],["context",3]],[["result",6],["poll",4]]]],[11,"limit","","Returns the remaining number of bytes that can be read …",45,[[],["u64",15]]],[11,"set_limit","","Sets the number of bytes that can be read before this …",45,[[["u64",15]]]],[11,"get_ref","","Gets a reference to the underlying reader.",45,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",45,[[]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",45,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the <code>Take</code>, returning the wrapped reader.",45,[[]]],[11,"bind","tokio::net","Creates a new TcpListener, which will be bound to the …",46,[[["tosocketaddrs",8]]]],[11,"accept","","Accepts a new incoming connection from this listener.",46,[[]]],[11,"poll_accept","","Polls to accept a new incoming connection to this …",46,[[["context",3]],[["poll",4],["result",6]]]],[11,"from_std","","Creates new <code>TcpListener</code> from a <code>std::net::TcpListener</code>.",46,[[["tcplistener",3]],[["result",6],["tcplistener",3]]]],[11,"into_std","","Turn a <code>tokio::net::TcpListener</code> into a …",46,[[],[["result",6],["tcplistener",3]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",46,[[],[["socketaddr",4],["result",6]]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",46,[[],[["u32",15],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",46,[[["u32",15]],["result",6]]],[11,"new_v4","","Create a new socket configured for IPv4.",47,[[],[["tcpsocket",3],["result",6]]]],[11,"new_v6","","Create a new socket configured for IPv6.",47,[[],[["tcpsocket",3],["result",6]]]],[11,"set_reuseaddr","","Allow the socket to bind to an in-use address.",47,[[["bool",15]],["result",6]]],[11,"reuseaddr","","Retrieves the value set for <code>SO_REUSEADDR</code> on this socket",47,[[],[["bool",15],["result",6]]]],[11,"set_reuseport","","Allow the socket to bind to an in-use port. Only …",47,[[["bool",15]],["result",6]]],[11,"reuseport","","Allow the socket to bind to an in-use port. Only …",47,[[],[["bool",15],["result",6]]]],[11,"set_send_buffer_size","","Sets the size of the TCP send buffer on this socket.",47,[[["u32",15]],["result",6]]],[11,"send_buffer_size","","Returns the size of the TCP send buffer for this socket.",47,[[],[["u32",15],["result",6]]]],[11,"set_recv_buffer_size","","Sets the size of the TCP receive buffer on this socket.",47,[[["u32",15]],["result",6]]],[11,"recv_buffer_size","","Returns the size of the TCP receive buffer for this …",47,[[],[["u32",15],["result",6]]]],[11,"local_addr","","Get the local address of this socket.",47,[[],[["socketaddr",4],["result",6]]]],[11,"bind","","Bind the socket to the given address.",47,[[["socketaddr",4]],["result",6]]],[11,"connect","","Establish a TCP connection with a peer at the specified …",47,[[["socketaddr",4]]]],[11,"listen","","Convert the socket into a <code>TcpListener</code>.",47,[[["u32",15]],[["result",6],["tcplistener",3]]]],[11,"poll_peek","tokio::net::tcp","Attempt to receive data on the socket, without removing …",48,[[["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"peek","","Receives data on the socket from the remote address to …",48,[[]]],[11,"reunite","","Attempts to put the two halves of a <code>TcpStream</code> back …",50,[[["ownedwritehalf",3]],[["reuniteerror",3],["result",4],["tcpstream",3]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing …",50,[[["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"peek","","Receives data on the socket from the remote address to …",50,[[]]],[11,"reunite","","Attempts to put the two halves of a <code>TcpStream</code> back …",51,[[["ownedreadhalf",3]],[["reuniteerror",3],["result",4],["tcpstream",3]]]],[11,"forget","","Destroy the write half, but don\'t close the write half of …",51,[[]]],[11,"connect","tokio::net","Opens a TCP connection to a remote host.",52,[[["tosocketaddrs",8]]]],[11,"from_std","","Creates new <code>TcpStream</code> from a <code>std::net::TcpStream</code>.",52,[[["tcpstream",3]],[["result",6],["tcpstream",3]]]],[11,"into_std","","Turn a <code>tokio::net::TcpStream</code> into a <code>std::net::TcpStream</code>.",52,[[],[["tcpstream",3],["result",6]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",52,[[],[["socketaddr",4],["result",6]]]],[11,"peer_addr","","Returns the remote address that this stream is connected …",52,[[],[["socketaddr",4],["result",6]]]],[11,"poll_peek","","Attempts to receive data on the socket, without removing …",52,[[["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"ready","","Wait for any of the requested ready states.",52,[[["interest",3]]]],[11,"readable","","Wait for the socket to become readable.",52,[[]]],[11,"poll_read_ready","","Polls for read readiness.",52,[[["context",3]],[["poll",4],["result",6]]]],[11,"try_read","","Try to read data from the stream into the provided …",52,[[],[["usize",15],["result",6]]]],[11,"try_read_vectored","","Try to read data from the stream into the provided …",52,[[],[["usize",15],["result",6]]]],[11,"try_read_buf","","Try to read data from the stream into the provided …",52,[[],[["usize",15],["result",6]]]],[11,"writable","","Wait for the socket to become writable.",52,[[]]],[11,"poll_write_ready","","Polls for write readiness.",52,[[["context",3]],[["poll",4],["result",6]]]],[11,"try_write","","Try to write a buffer to the stream, returning how many …",52,[[],[["usize",15],["result",6]]]],[11,"try_write_vectored","","Try to write several buffers to the stream, returning how …",52,[[],[["usize",15],["result",6]]]],[11,"peek","","Receives data on the socket from the remote address to …",52,[[]]],[11,"nodelay","","Gets the value of the <code>TCP_NODELAY</code> option on this socket.",52,[[],[["bool",15],["result",6]]]],[11,"set_nodelay","","Sets the value of the <code>TCP_NODELAY</code> option on this socket.",52,[[["bool",15]],["result",6]]],[11,"linger","","Reads the linger duration for this socket by getting the …",52,[[],[["result",6],["option",4]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the …",52,[[["option",4],["duration",3]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",52,[[],[["u32",15],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",52,[[["u32",15]],["result",6]]],[11,"split","","Splits a <code>TcpStream</code> into a read half and a write half, …",52,[[]]],[11,"into_split","","Splits a <code>TcpStream</code> into a read half and a write half, …",52,[[]]],[11,"bind","","This function will create a new UDP socket and attempt to …",53,[[["tosocketaddrs",8]]]],[11,"from_std","","Creates new <code>UdpSocket</code> from a previously bound …",53,[[["udpsocket",3]],[["udpsocket",3],["result",6]]]],[11,"into_std","","Turn a <code>tokio::net::UdpSocket</code> into a <code>std::net::UdpSocket</code>.",53,[[],[["udpsocket",3],["result",6]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",53,[[],[["socketaddr",4],["result",6]]]],[11,"connect","","Connects the UDP socket setting the default destination …",53,[[["tosocketaddrs",8]]]],[11,"ready","","Wait for any of the requested ready states.",53,[[["interest",3]]]],[11,"writable","","Wait for the socket to become writable.",53,[[]]],[11,"send","","Sends data on the socket to the remote address that the …",53,[[]]],[11,"poll_send","","Attempts to send data on the socket to the remote address …",53,[[["context",3]],[["result",6],["poll",4]]]],[11,"try_send","","Try to send data on the socket to the remote address to …",53,[[],[["usize",15],["result",6]]]],[11,"readable","","Wait for the socket to become readable.",53,[[]]],[11,"recv","","Receives a single datagram message on the socket from the …",53,[[]]],[11,"poll_recv","","Attempts to receive a single datagram message on the …",53,[[["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"try_recv","","Try to receive a single datagram message on the socket …",53,[[],[["usize",15],["result",6]]]],[11,"try_recv_buf","","Try to receive data from the stream into the provided …",53,[[],[["usize",15],["result",6]]]],[11,"try_recv_buf_from","","Try to receive a single datagram message on the socket. …",53,[[],["result",6]]],[11,"send_to","","Sends data on the socket to the given address. On …",53,[[["tosocketaddrs",8]]]],[11,"poll_send_to","","Attempts to send data on the socket to a given address.",53,[[["socketaddr",4],["context",3]],[["result",6],["poll",4]]]],[11,"try_send_to","","Try to send data on the socket to the given address, but …",53,[[["socketaddr",4]],[["usize",15],["result",6]]]],[11,"recv_from","","Receives a single datagram message on the socket. On …",53,[[]]],[11,"poll_recv_from","","Attempts to receive a single datagram on the socket.",53,[[["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"try_recv_from","","Try to receive a single datagram message on the socket. …",53,[[],["result",6]]],[11,"peek_from","","Receives data from the socket, without removing it from …",53,[[]]],[11,"poll_peek_from","","Receives data from the socket, without removing it from …",53,[[["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"broadcast","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.",53,[[],[["bool",15],["result",6]]]],[11,"set_broadcast","","Sets the value of the <code>SO_BROADCAST</code> option for this socket.",53,[[["bool",15]],["result",6]]],[11,"multicast_loop_v4","","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",53,[[],[["bool",15],["result",6]]]],[11,"set_multicast_loop_v4","","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …",53,[[["bool",15]],["result",6]]],[11,"multicast_ttl_v4","","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …",53,[[],[["u32",15],["result",6]]]],[11,"set_multicast_ttl_v4","","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …",53,[[["u32",15]],["result",6]]],[11,"multicast_loop_v6","","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",53,[[],[["bool",15],["result",6]]]],[11,"set_multicast_loop_v6","","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …",53,[[["bool",15]],["result",6]]],[11,"ttl","","Gets the value of the <code>IP_TTL</code> option for this socket.",53,[[],[["u32",15],["result",6]]]],[11,"set_ttl","","Sets the value for the <code>IP_TTL</code> option on this socket.",53,[[["u32",15]],["result",6]]],[11,"join_multicast_v4","","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.",53,[[["ipv4addr",3]],["result",6]]],[11,"join_multicast_v6","","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.",53,[[["u32",15],["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v4","","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.",53,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v6","","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.",53,[[["u32",15],["ipv6addr",3]],["result",6]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",53,[[],[["result",6],["option",4]]]],[11,"ready","","Wait for any of the requested ready states.",54,[[["interest",3]]]],[11,"writable","","Wait for the socket to become writable.",54,[[]]],[11,"readable","","Wait for the socket to become readable.",54,[[]]],[11,"bind","","Creates a new <code>UnixDatagram</code> bound to the specified path.",54,[[],[["unixdatagram",3],["result",6]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",54,[[],["result",6]]],[11,"from_std","","Creates new <code>UnixDatagram</code> from a …",54,[[["unixdatagram",3]],[["unixdatagram",3],["result",6]]]],[11,"into_std","","Turn a <code>tokio::net::UnixDatagram</code> into a …",54,[[],[["result",6],["unixdatagram",3]]]],[11,"unbound","","Creates a new <code>UnixDatagram</code> which is not bound to any …",54,[[],[["unixdatagram",3],["result",6]]]],[11,"connect","","Connects the socket to the specified address.",54,[[["path",3],["asref",8]],["result",6]]],[11,"send","","Sends data on the socket to the socket\'s peer.",54,[[]]],[11,"try_send","","Try to send a datagram to the peer without waiting.",54,[[],[["usize",15],["result",6]]]],[11,"try_send_to","","Try to send a datagram to the peer without waiting.",54,[[],[["usize",15],["result",6]]]],[11,"recv","","Receives data from the socket.",54,[[]]],[11,"try_recv","","Try to receive a datagram from the peer without waiting.",54,[[],[["usize",15],["result",6]]]],[11,"try_recv_buf_from","","Try to receive data from the socket without waiting.",54,[[],["result",6]]],[11,"try_recv_buf","","Try to read data from the stream into the provided …",54,[[],[["usize",15],["result",6]]]],[11,"send_to","","Sends data on the socket to the specified address.",54,[[]]],[11,"recv_from","","Receives data from the socket.",54,[[]]],[11,"poll_recv_from","","Attempts to receive a single datagram on the specified …",54,[[["readbuf",3],["context",3]],[["result",6],["poll",4]]]],[11,"poll_send_to","","Attempts to send data to the specified address.",54,[[["context",3]],[["result",6],["poll",4]]]],[11,"poll_send","","Attempts to send data on the socket to the remote address …",54,[[["context",3]],[["result",6],["poll",4]]]],[11,"poll_recv","","Attempts to receive a single datagram message on the …",54,[[["readbuf",3],["context",3]],[["poll",4],["result",6]]]],[11,"try_recv_from","","Try to receive data from the socket without waiting.",54,[[],["result",6]]],[11,"local_addr","","Returns the local address that this socket is bound to.",54,[[],[["result",6],["socketaddr",3]]]],[11,"peer_addr","","Returns the address of this socket\'s peer.",54,[[],[["result",6],["socketaddr",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",54,[[],[["result",6],["option",4]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this …",54,[[["shutdown",4]],["result",6]]],[11,"bind","","Creates a new <code>UnixListener</code> bound to the specified path.",55,[[],[["result",6],["unixlistener",3]]]],[11,"from_std","","Creates new <code>UnixListener</code> from a …",55,[[["unixlistener",3]],[["result",6],["unixlistener",3]]]],[11,"into_std","","Turn a <code>tokio::net::UnixListener</code> into a …",55,[[],[["result",6],["unixlistener",3]]]],[11,"local_addr","","Returns the local socket address of this listener.",55,[[],[["result",6],["socketaddr",3]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",55,[[],[["result",6],["option",4]]]],[11,"accept","","Accepts a new incoming connection to this listener.",55,[[]]],[11,"poll_accept","","Polls to accept a new incoming connection to this …",55,[[["context",3]],[["result",6],["poll",4]]]],[11,"reunite","tokio::net::unix","Attempts to put the two halves of a <code>UnixStream</code> back …",58,[[["ownedwritehalf",3]],[["unixstream",3],["reuniteerror",3],["result",4]]]],[11,"reunite","","Attempts to put the two halves of a <code>UnixStream</code> back …",59,[[["ownedreadhalf",3]],[["unixstream",3],["reuniteerror",3],["result",4]]]],[11,"forget","","Destroy the write half, but don\'t close the write half of …",59,[[]]],[11,"is_unnamed","","Returns <code>true</code> if the address is unnamed.",60,[[],["bool",15]]],[11,"as_pathname","","Returns the contents of this address if it is a <code>pathname</code> …",60,[[],[["option",4],["path",3]]]],[11,"connect","tokio::net","Connects to the socket named by <code>path</code>.",61,[[]]],[11,"ready","","Wait for any of the requested ready states.",61,[[["interest",3]]]],[11,"readable","","Wait for the socket to become readable.",61,[[]]],[11,"poll_read_ready","","Polls for read readiness.",61,[[["context",3]],[["poll",4],["result",6]]]],[11,"try_read","","Try to read data from the stream into the provided …",61,[[],[["usize",15],["result",6]]]],[11,"try_read_vectored","","Try to read data from the stream into the provided …",61,[[],[["usize",15],["result",6]]]],[11,"try_read_buf","","Try to read data from the stream into the provided …",61,[[],[["usize",15],["result",6]]]],[11,"writable","","Wait for the socket to become writable.",61,[[]]],[11,"poll_write_ready","","Polls for write readiness.",61,[[["context",3]],[["poll",4],["result",6]]]],[11,"try_write","","Try to write a buffer to the stream, returning how many …",61,[[],[["usize",15],["result",6]]]],[11,"try_write_vectored","","Try to write several buffers to the stream, returning how …",61,[[],[["usize",15],["result",6]]]],[11,"from_std","","Creates new <code>UnixStream</code> from a …",61,[[["unixstream",3]],[["unixstream",3],["result",6]]]],[11,"into_std","","Turn a <code>tokio::net::UnixStream</code> into a …",61,[[],[["unixstream",3],["result",6]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",61,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this …",61,[[],[["result",6],["socketaddr",3]]]],[11,"peer_addr","","Returns the socket address of the remote half of this …",61,[[],[["result",6],["socketaddr",3]]]],[11,"peer_cred","","Returns effective credentials of the process which called …",61,[[],[["ucred",3],["result",6]]]],[11,"take_error","","Returns the value of the <code>SO_ERROR</code> option.",61,[[],[["result",6],["option",4]]]],[11,"split","","Split a <code>UnixStream</code> into a read half and a write half, …",61,[[]]],[11,"into_split","","Splits a <code>UnixStream</code> into a read half and a write half, …",61,[[]]],[11,"uid","tokio::net::unix","Gets UID (user ID) of the process.",62,[[],["uid_t",6]]],[11,"gid","","Gets GID (group ID) of the process.",62,[[],["gid_t",6]]],[11,"pid","","Gets PID (process ID) of the process.",62,[[],[["option",4],["pid_t",6]]]],[11,"is_cancelled","tokio::task","Returns true if the error was caused by the task being …",63,[[],["bool",15]]],[11,"is_panic","","Returns true if the error was caused by the task panicking",63,[[],["bool",15]]],[11,"into_panic","","Consumes the join error, returning the object with which …",63,[[],[["any",8],["box",3]]]],[11,"try_into_panic","","Consumes the join error, returning the object with which …",63,[[],[["result",4],["box",3],["joinerror",3]]]],[11,"abort","","Abort the task associated with the handle.",64,[[]]],[11,"new_current_thread","tokio::runtime","Returns a new builder with the current thread scheduler …",65,[[],["builder",3]]],[11,"enable_all","","Enables both I/O and time drivers.",65,[[]]],[11,"worker_threads","","Sets the number of worker threads the <code>Runtime</code> will use.",65,[[["usize",15]]]],[11,"max_blocking_threads","","Specifies the limit for additional threads spawned by the …",65,[[["usize",15]]]],[11,"thread_name","","Sets name of threads spawned by the <code>Runtime</code>\'s thread pool.",65,[[]]],[11,"thread_name_fn","","Sets a function used to generate the name of threads …",65,[[]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",65,[[["usize",15]]]],[11,"on_thread_start","","Executes function <code>f</code> after each thread is started but …",65,[[]]],[11,"on_thread_stop","","Executes function <code>f</code> before each thread stops.",65,[[]]],[11,"build","","Creates the configured <code>Runtime</code>.",65,[[],[["result",6],["runtime",3]]]],[11,"thread_keep_alive","","Sets a custom timeout for a thread in the blocking pool.",65,[[["duration",3]]]],[11,"enable_io","","Enables the I/O driver.",65,[[]]],[11,"enable_time","","Enables the time driver.",65,[[]]],[11,"enter","","Enter the runtime context. This allows you to construct …",66,[[],["enterguard",3]]],[11,"current","","Returns a <code>Handle</code> view over the currently running <code>Runtime</code>",66,[[]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",66,[[],[["result",4],["trycurrenterror",3]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",66,[[],["joinhandle",3]]],[11,"spawn_blocking","","Run the provided function on an executor dedicated to …",66,[[],["joinhandle",3]]],[11,"block_on","","Run a future to completion on this <code>Handle</code>\'s associated …",66,[[["future",8]]]],[11,"new","tokio::sync","Creates a new barrier that can block a given number of …",68,[[["usize",15]],["barrier",3]]],[11,"wait","","Does not resolve until all tasks have rendezvoused here.",68,[[]]],[11,"is_leader","","Returns <code>true</code> if this task from wait is the \\\"leader task\\\".",69,[[],["bool",15]]],[11,"recv","tokio::sync::mpsc","Receives the next value for this receiver.",73,[[]]],[11,"blocking_recv","","Blocking receive to call outside of asynchronous contexts.",73,[[],["option",4]]],[11,"close","","Closes the receiving half of a channel without dropping …",73,[[]]],[11,"poll_recv","","Polls to receive the next message on this channel.",73,[[["context",3]],[["poll",4],["option",4]]]],[11,"send","","Sends a value, waiting until there is capacity.",70,[[]]],[11,"closed","","Completes when the receiver has dropped.",70,[[]]],[11,"try_send","","Attempts to immediately send a message on this <code>Sender</code>",70,[[],[["result",4],["trysenderror",4]]]],[11,"send_timeout","","Sends a value, waiting until there is capacity, but only …",70,[[["duration",3]]]],[11,"blocking_send","","Blocking send to call outside of asynchronous contexts.",70,[[],[["result",4],["senderror",3]]]],[11,"is_closed","","Checks if the channel has been closed. This happens when …",70,[[],["bool",15]]],[11,"reserve","","Wait for channel capacity. Once capacity to send one …",70,[[]]],[11,"reserve_owned","","Wait for channel capacity, moving the <code>Sender</code> and …",70,[[]]],[11,"try_reserve","","Try to acquire a slot in the channel without waiting for …",70,[[],[["permit",3],["result",4],["trysenderror",4]]]],[11,"try_reserve_owned","","Try to acquire a slot in the channel without waiting for …",70,[[],[["trysenderror",4],["ownedpermit",3],["result",4]]]],[11,"same_channel","","Returns <code>true</code> if senders belong to the same channel.",70,[[],["bool",15]]],[11,"capacity","","Returns the current capacity of the channel.",70,[[],["usize",15]]],[11,"send","","Sends a value using the reserved capacity.",71,[[]]],[11,"send","","Sends a value using the reserved capacity.",72,[[],["sender",3]]],[11,"release","","Release the reserved capacity <em>without</em> sending a message, …",72,[[],["sender",3]]],[11,"recv","","Receives the next value for this receiver.",75,[[]]],[11,"blocking_recv","","Blocking receive to call outside of asynchronous contexts.",75,[[],["option",4]]],[11,"close","","Closes the receiving half of a channel, without dropping …",75,[[]]],[11,"poll_recv","","Polls to receive the next message on this channel.",75,[[["context",3]],[["poll",4],["option",4]]]],[11,"send","","Attempts to send a message on this <code>UnboundedSender</code> …",74,[[],[["result",4],["senderror",3]]]],[11,"closed","","Completes when the receiver has dropped.",74,[[]]],[11,"is_closed","","Checks if the channel has been closed. This happens when …",74,[[],["bool",15]]],[11,"same_channel","","Returns <code>true</code> if senders belong to the same channel.",74,[[],["bool",15]]],[11,"new","tokio::sync","Creates a new lock in an unlocked state ready for use.",77,[[]]],[11,"lock","","Locks this mutex, causing the current task to yield until …",77,[[]]],[11,"lock_owned","","Locks this mutex, causing the current task to yield until …",77,[[["arc",3]]]],[11,"try_lock","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …",77,[[],[["result",4],["mutexguard",3],["trylockerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",77,[[]]],[11,"try_lock_owned","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …",77,[[["arc",3]],[["result",4],["ownedmutexguard",3],["trylockerror",3]]]],[11,"into_inner","","Consumes the mutex, returning the underlying data.",77,[[]]],[11,"map","","Makes a new <code>MappedMutexGuard</code> for a component of the …",78,[[],["mappedmutexguard",3]]],[11,"try_map","","Attempts to make a new <code>MappedMutexGuard</code> for a component …",78,[[],[["mappedmutexguard",3],["result",4]]]],[11,"map","","Makes a new <code>MappedMutexGuard</code> for a component of the …",80,[[],["mappedmutexguard",3]]],[11,"try_map","","Attempts to make a new <code>MappedMutexGuard</code> for a component …",80,[[],[["mappedmutexguard",3],["result",4]]]],[11,"new","","Create a new <code>Notify</code>, initialized without a permit.",82,[[],["notify",3]]],[11,"notified","","Wait for a notification.",82,[[],["notified",3]]],[11,"notify_one","","Notifies a waiting task",82,[[]]],[11,"notify_waiters","","Notifies all waiting tasks",82,[[]]],[11,"new","","Creates a new semaphore with the initial number of …",85,[[["usize",15]]]],[11,"available_permits","","Returns the current number of available permits.",85,[[],["usize",15]]],[11,"add_permits","","Adds <code>n</code> new permits to the semaphore.",85,[[["usize",15]]]],[11,"acquire","","Acquires a permit from the semaphore.",85,[[]]],[11,"acquire_many","","Acquires <code>n</code> permits from the semaphore.",85,[[["u32",15]]]],[11,"try_acquire","","Tries to acquire a permit from the semaphore.",85,[[],[["result",4],["tryacquireerror",4],["semaphorepermit",3]]]],[11,"try_acquire_many","","Tries to acquire <code>n</code> permits from the semaphore.",85,[[["u32",15]],[["result",4],["tryacquireerror",4],["semaphorepermit",3]]]],[11,"acquire_owned","","Acquires a permit from the semaphore.",85,[[["arc",3]]]],[11,"acquire_many_owned","","Acquires <code>n</code> permits from the semaphore.",85,[[["u32",15],["arc",3]]]],[11,"try_acquire_owned","","Tries to acquire a permit from the semaphore.",85,[[["arc",3]],[["tryacquireerror",4],["ownedsemaphorepermit",3],["result",4]]]],[11,"try_acquire_many_owned","","Tries to acquire <code>n</code> permits from the semaphore.",85,[[["u32",15],["arc",3]],[["tryacquireerror",4],["ownedsemaphorepermit",3],["result",4]]]],[11,"close","","Closes the semaphore.",85,[[]]],[11,"is_closed","","Returns true if the semaphore is closed",85,[[],["bool",15]]],[11,"forget","","Forgets the permit <strong>without</strong> releasing it back to the …",86,[[]]],[11,"forget","","Forgets the permit <strong>without</strong> releasing it back to the …",87,[[]]],[11,"map","","Make a new <code>OwnedRwLockReadGuard</code> for a component of the …",88,[[],[["sized",8],["ownedrwlockreadguard",3]]]],[11,"try_map","","Attempts to make a new [<code>OwnedRwLockReadGuard</code>] for a …",88,[[],[["result",4],["ownedrwlockreadguard",3]]]],[11,"map","","Make a new [<code>OwnedRwLockMappedWriteGuard</code>] for a component …",89,[[],[["sized",8],["ownedrwlockmappedwriteguard",3]]]],[11,"try_map","","Attempts to make  a new [<code>OwnedRwLockMappedWriteGuard</code>] for …",89,[[],[["result",4],["ownedrwlockmappedwriteguard",3]]]],[11,"into_mapped","","Converts this <code>OwnedRwLockWriteGuard</code> into an …",89,[[],["ownedrwlockmappedwriteguard",3]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock …",89,[[],["ownedrwlockreadguard",3]]],[11,"map","","Make a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …",90,[[],[["ownedrwlockmappedwriteguard",3],["sized",8]]]],[11,"try_map","","Attempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …",90,[[],[["result",4],["ownedrwlockmappedwriteguard",3]]]],[11,"map","","Make a new <code>RwLockReadGuard</code> for a component of the locked …",91,[[],[["sized",8],["rwlockreadguard",3]]]],[11,"try_map","","Attempts to make a new [<code>RwLockReadGuard</code>] for a component …",91,[[],[["result",4],["rwlockreadguard",3]]]],[11,"map","","Make a new <code>RwLockMappedWriteGuard</code> for a component of the …",92,[[],[["sized",8],["rwlockmappedwriteguard",3]]]],[11,"try_map","","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …",92,[[],[["rwlockmappedwriteguard",3],["result",4]]]],[11,"into_mapped","","Converts this <code>RwLockWriteGuard</code> into an …",92,[[],["rwlockmappedwriteguard",3]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock …",92,[[],["rwlockreadguard",3]]],[11,"map","","Make a new <code>RwLockMappedWriteGuard</code> for a component of the …",93,[[],[["sized",8],["rwlockmappedwriteguard",3]]]],[11,"try_map","","Attempts to make a new [<code>RwLockMappedWriteGuard</code>] for a …",93,[[],[["rwlockmappedwriteguard",3],["result",4]]]],[11,"new","","Creates a new instance of an <code>RwLock<T></code> which is unlocked.",94,[[],["rwlock",3]]],[11,"with_max_readers","","Creates a new instance of an <code>RwLock<T></code> which is unlocked …",94,[[["u32",15]],["rwlock",3]]],[11,"read","","Locks this <code>RwLock</code> with shared read access, causing the …",94,[[]]],[11,"read_owned","","Locks this <code>RwLock</code> with shared read access, causing the …",94,[[["arc",3]]]],[11,"try_read","","Attempts to acquire this <code>RwLock</code> with shared read access.",94,[[],[["rwlockreadguard",3],["trylockerror",3],["result",4]]]],[11,"try_read_owned","","Attempts to acquire this <code>RwLock</code> with shared read access.",94,[[["arc",3]],[["ownedrwlockreadguard",3],["trylockerror",3],["result",4]]]],[11,"write","","Locks this <code>RwLock</code> with exclusive write access, causing …",94,[[]]],[11,"write_owned","","Locks this <code>RwLock</code> with exclusive write access, causing …",94,[[["arc",3]]]],[11,"try_write","","Attempts to acquire this <code>RwLock</code> with exclusive write …",94,[[],[["rwlockwriteguard",3],["trylockerror",3],["result",4]]]],[11,"try_write_owned","","Attempts to acquire this <code>RwLock</code> with exclusive write …",94,[[["arc",3]],[["trylockerror",3],["result",4],["ownedrwlockwriteguard",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",94,[[]]],[11,"into_inner","","Consumes the lock, returning the underlying data.",94,[[]]],[11,"new","","Creates a new uninitialized OnceCell instance.",95,[[]]],[11,"new_with","","Creates a new initialized OnceCell instance if <code>value</code> is …",95,[[["option",4]]]],[11,"initialized","","Whether the value of the OnceCell is set or not.",95,[[],["bool",15]]],[11,"get","","Tries to get a reference to the value of the OnceCell.",95,[[],["option",4]]],[11,"get_mut","","Tries to return a mutable reference to the value of the …",95,[[],["option",4]]],[11,"set","","Sets the value of the OnceCell to the argument value.",95,[[],[["seterror",4],["result",4]]]],[11,"get_or_init","","Tries to initialize the value of the OnceCell using the …",95,[[]]],[11,"get_or_try_init","","Tries to initialize the value of the OnceCell using the …",95,[[]]],[11,"into_inner","","Moves the value out of the cell, destroying the cell in …",95,[[],["option",4]]],[11,"take","","Takes ownership of the current value, leaving the cell …",95,[[],["option",4]]],[11,"is_already_init_err","","Whether <code>SetError</code> is <code>SetError::AlreadyInitializedError</code>.",25,[[],["bool",15]]],[11,"is_initializing_err","","Whether <code>SetError</code> is <code>SetError::InitializingError</code>",25,[[],["bool",15]]],[11,"new","tokio::task","Returns a new local task set.",99,[[],["localset",3]]],[11,"spawn_local","","Spawns a <code>!Send</code> task onto the local task set.",99,[[],["joinhandle",3]]],[11,"block_on","","Runs a future to completion on the provided runtime, …",99,[[["runtime",3]]]],[11,"run_until","","Run a future to completion on the local set, returning …",99,[[]]],[11,"scope","","Sets a value <code>T</code> as the task-local value for the future <code>F</code>.",100,[[]]],[11,"sync_scope","","Sets a value <code>T</code> as the task-local value for the closure <code>F</code>.",100,[[]]],[11,"with","","Accesses the current task-local and runs the provided …",100,[[]]],[11,"try_with","","Accesses the current task-local and runs the provided …",100,[[],[["result",4],["accesserror",3]]]],[11,"get","","Returns a copy of the task-local value if the task-local …",100,[[]]],[11,"deadline","tokio::time","Returns the instant at which the future will complete.",102,[[],["instant",3]]],[11,"is_elapsed","","Returns <code>true</code> if <code>Sleep</code> has elapsed.",102,[[],["bool",15]]],[11,"reset","","Resets the <code>Sleep</code> instance to a new deadline.",102,[[["pin",3],["instant",3]]]],[11,"now","","Returns an instant corresponding to \\\"now\\\".",104,[[],["instant",3]]],[11,"from_std","","Create a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.",104,[[["instant",3]],["instant",3]]],[11,"into_std","","Convert the value into a <code>std::time::Instant</code>.",104,[[],["instant",3]]],[11,"duration_since","","Returns the amount of time elapsed from another instant …",104,[[["instant",3]],["duration",3]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant …",104,[[["instant",3]],[["option",4],["duration",3]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant …",104,[[["instant",3]],["duration",3]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was …",104,[[],["duration",3]]],[11,"checked_add","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …",104,[[["duration",3]],[["option",4],["instant",3]]]],[11,"checked_sub","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …",104,[[["duration",3]],[["option",4],["instant",3]]]],[11,"tick","","Completes when the next instant in the interval has been …",105,[[]]],[11,"poll_tick","","Poll for the next instant in the interval to be reached.",105,[[["context",3]],[["poll",4],["instant",3]]]],[11,"period","","Returns the period of the interval.",105,[[],["duration",3]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",106,[[]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this …",106,[[]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",106,[[]]]],"p":[[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[8,"AsyncBufReadExt"],[8,"AsyncReadExt"],[8,"AsyncSeekExt"],[8,"AsyncWriteExt"],[3,"ReuniteError"],[3,"ReuniteError"],[3,"Runtime"],[3,"SendError"],[4,"RecvError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Receiver"],[3,"Sender"],[4,"TryAcquireError"],[4,"SetError"],[3,"Error"],[3,"ReadBuf"],[3,"Interest"],[3,"Ready"],[3,"AsyncFd"],[3,"AsyncFdReadyGuard"],[3,"AsyncFdReadyMutGuard"],[3,"TryIoError"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"BufReader"],[3,"BufStream"],[3,"BufWriter"],[3,"Empty"],[3,"Lines"],[3,"DuplexStream"],[3,"Repeat"],[3,"Sink"],[3,"Split"],[3,"Take"],[3,"TcpListener"],[3,"TcpSocket"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"TcpStream"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UCred"],[3,"JoinError"],[3,"JoinHandle"],[3,"Builder"],[3,"Handle"],[3,"EnterGuard"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Sender"],[3,"Permit"],[3,"OwnedPermit"],[3,"Receiver"],[3,"UnboundedSender"],[3,"UnboundedReceiver"],[3,"RecvError"],[3,"Mutex"],[3,"MutexGuard"],[3,"OwnedMutexGuard"],[3,"MappedMutexGuard"],[3,"TryLockError"],[3,"Notify"],[3,"RecvError"],[3,"AcquireError"],[3,"Semaphore"],[3,"SemaphorePermit"],[3,"OwnedSemaphorePermit"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"OwnedRwLockMappedWriteGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockMappedWriteGuard"],[3,"RwLock"],[3,"OnceCell"],[3,"SendError"],[3,"RecvError"],[3,"Ref"],[3,"LocalSet"],[3,"LocalKey"],[3,"Unconstrained"],[3,"Sleep"],[3,"Elapsed"],[3,"Instant"],[3,"Interval"],[3,"Timeout"]]},\
"tokio_util":{"doc":"Utilities for working with Tokio.","i":[[0,"codec","tokio_util","Adaptors from AsyncRead/AsyncWrite to Stream/Sink",null,null],[0,"length_delimited","tokio_util::codec","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_util::codec::length_delimited","Configure length delimited <code>LengthDelimitedCodec</code>s.",null,null],[3,"LengthDelimitedCodecError","","An error when the number of bytes read is more than max …",null,null],[3,"LengthDelimitedCodec","","A codec for frames delimited by a frame head specifying …",null,null],[11,"new","","Creates a new <code>LengthDelimitedCodec</code> with the default …",0,[[]]],[11,"builder","","Creates a new length delimited codec builder with default …",0,[[],["builder",3]]],[11,"max_frame_length","","Returns the current max frame setting",0,[[],["usize",15]]],[11,"set_max_frame_length","","Updates the max frame setting.",0,[[["usize",15]]]],[11,"new","","Creates a new length delimited codec builder with default …",1,[[],["builder",3]]],[11,"big_endian","","Read the length field as a big endian integer",1,[[]]],[11,"little_endian","","Read the length field as a little endian integer",1,[[]]],[11,"native_endian","","Read the length field as a native endian integer",1,[[]]],[11,"max_frame_length","","Sets the max frame length",1,[[["usize",15]]]],[11,"length_field_length","","Sets the number of bytes used to represent the length …",1,[[["usize",15]]]],[11,"length_field_offset","","Sets the number of bytes in the header before the length …",1,[[["usize",15]]]],[11,"length_adjustment","","Delta between the payload length specified in the header …",1,[[["isize",15]]]],[11,"num_skip","","Sets the number of bytes to skip before reading the …",1,[[["usize",15]]]],[11,"new_codec","","Create a configured length delimited <code>LengthDelimitedCodec</code>",1,[[],["lengthdelimitedcodec",3]]],[11,"new_read","","Create a configured length delimited <code>FramedRead</code>",1,[[],[["lengthdelimitedcodec",3],["framedread",3]]]],[11,"new_write","","Create a configured length delimited <code>FramedWrite</code>",1,[[],[["lengthdelimitedcodec",3],["framedwrite",3]]]],[11,"new_framed","","Create a configured length delimited <code>Framed</code>",1,[[],[["lengthdelimitedcodec",3],["framed",3]]]],[3,"BytesCodec","tokio_util::codec","A simple <code>Decoder</code> and <code>Encoder</code> implementation that just …",null,null],[8,"Decoder","","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",2,null],[16,"Error","","The type of unrecoverable frame decoding errors.",2,null],[10,"decode","","Attempts to decode a frame from the provided buffer of …",2,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"decode_eof","","A default method available to be called when there are no …",2,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"framed","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",2,[[["asyncwrite",8],["sized",8],["asyncread",8]],[["asyncwrite",8],["framed",3],["asyncread",8],["sized",8]]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes, …",null,null],[16,"Error","","The type of encoding errors.",3,null],[10,"encode","","Encodes a frame into the buffer provided.",3,[[["bytesmut",3]],["result",4]]],[3,"Framed","","A unified <code>Stream</code> and <code>Sink</code> interface to an underlying I/O …",null,null],[3,"FramedParts","","<code>FramedParts</code> contains an export of the data of a Framed …",null,null],[12,"io","","The inner transport used to read bytes to and write bytes …",4,null],[12,"codec","","The codec",4,null],[12,"read_buf","","The buffer with read but unprocessed data.",4,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",4,null],[3,"FramedRead","","A <code>Stream</code> of messages decoded from an <code>AsyncRead</code>.",null,null],[3,"FramedWrite","","A <code>Sink</code> of frames encoded to an <code>AsyncWrite</code>.",null,null],[3,"LinesCodec","","A simple <code>Decoder</code> and <code>Encoder</code> implementation that splits …",null,null],[4,"LinesCodecError","","An error occured while encoding or decoding a line.",null,null],[13,"MaxLineLengthExceeded","","The maximum line length was exceeded.",5,null],[13,"Io","","An IO error occured.",5,null],[3,"AnyDelimiterCodec","","A simple <code>Decoder</code> and <code>Encoder</code> implementation that splits …",null,null],[4,"AnyDelimiterCodecError","","An error occured while encoding or decoding a chunk.",null,null],[13,"MaxChunkLengthExceeded","","The maximum chunk length was exceeded.",6,null],[13,"Io","","An IO error occurred.",6,null],[0,"sync","tokio_util","Synchronization primitives",null,null],[3,"CancellationToken","tokio_util::sync","A token which can be used to signal a cancellation …",null,null],[3,"WaitForCancellationFuture","","A Future that is resolved once the corresponding […",null,null],[3,"PollSender","","A wrapper around <code>mpsc::Sender</code> that can be polled.",null,null],[3,"PollSemaphore","","A wrapper around <code>Semaphore</code> that provides a <code>poll_acquire</code> …",null,null],[3,"ReusableBoxFuture","","A reusable <code>Pin<Box<dyn Future<Output = T> + Send>></code>.",null,null],[0,"either","tokio_util","Module defining an Either type.",null,null],[4,"Either","tokio_util::either","Combines two different futures, streams, or sinks having …",null,null],[13,"Left","","",7,null],[13,"Right","","",7,null],[11,"from","tokio_util::codec","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"try_poll_next","","",9,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"try_poll_next","","",10,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"try_poll_next","","",11,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"from","tokio_util::codec::length_delimited","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tokio_util::codec","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","tokio_util::sync","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_future","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_future","","",19,[[]]],[11,"try_poll","","",19,[[["pin",3],["context",3]],["poll",4]]],[11,"from","tokio_util::either","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_future","","",7,[[]]],[11,"try_poll","","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"try_poll_next","","",7,[[["context",3],["pin",3]],[["option",4],["poll",4]]]],[11,"decode","tokio_util::codec","",8,[[["bytesmut",3]],[["error",3],["option",4],["result",4]]]],[11,"decode","tokio_util::codec::length_delimited","",0,[[["bytesmut",3]],[["option",4],["result",6]]]],[11,"decode","tokio_util::codec","",13,[[["bytesmut",3]],[["result",4],["option",4],["linescodecerror",4]]]],[11,"decode_eof","","",13,[[["bytesmut",3]],[["result",4],["option",4],["linescodecerror",4]]]],[11,"decode","","",14,[[["bytesmut",3]],[["anydelimitercodecerror",4],["result",4],["option",4]]]],[11,"decode_eof","","",14,[[["bytesmut",3]],[["anydelimitercodecerror",4],["result",4],["option",4]]]],[11,"encode","","",8,[[["bytes",3],["bytesmut",3]],[["result",4],["error",3]]]],[11,"encode","tokio_util::codec::length_delimited","",0,[[["bytes",3],["bytesmut",3]],[["result",4],["error",3]]]],[11,"encode","tokio_util::codec","",13,[[["bytesmut",3]],[["linescodecerror",4],["result",4]]]],[11,"encode","","",14,[[["bytesmut",3]],[["result",4],["anydelimitercodecerror",4]]]],[11,"drop","tokio_util::sync","",15,[[]]],[11,"drop","","",16,[[]]],[11,"drop","","",19,[[]]],[11,"as_ref","","",18,[[],["semaphore",3]]],[11,"from","tokio_util::codec","",5,[[["error",3]],["linescodecerror",4]]],[11,"from","","",6,[[["error",3]],["anydelimitercodecerror",4]]],[11,"clone","","",8,[[],["bytescodec",3]]],[11,"clone","tokio_util::codec::length_delimited","",1,[[],["builder",3]]],[11,"clone","tokio_util::codec","",13,[[],["linescodec",3]]],[11,"clone","","",14,[[],["anydelimitercodec",3]]],[11,"clone","tokio_util::sync","",15,[[]]],[11,"clone","","Clones this <code>PollSender</code>. The resulting clone will not have …",17,[[],["pollsender",3]]],[11,"clone","","",18,[[],["pollsemaphore",3]]],[11,"clone","tokio_util::either","",7,[[],["either",4]]],[11,"default","tokio_util::codec","",8,[[],["bytescodec",3]]],[11,"default","tokio_util::codec::length_delimited","",0,[[]]],[11,"default","","",1,[[]]],[11,"default","tokio_util::codec","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","tokio_util::sync","",15,[[],["cancellationtoken",3]]],[11,"cmp","tokio_util::codec","",8,[[["bytescodec",3]],["ordering",4]]],[11,"cmp","","",13,[[["linescodec",3]],["ordering",4]]],[11,"cmp","","",14,[[["anydelimitercodec",3]],["ordering",4]]],[11,"eq","","",8,[[["bytescodec",3]],["bool",15]]],[11,"ne","","",8,[[["bytescodec",3]],["bool",15]]],[11,"eq","","",13,[[["linescodec",3]],["bool",15]]],[11,"ne","","",13,[[["linescodec",3]],["bool",15]]],[11,"eq","","",14,[[["anydelimitercodec",3]],["bool",15]]],[11,"ne","","",14,[[["anydelimitercodec",3]],["bool",15]]],[11,"partial_cmp","","",8,[[["bytescodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["bytescodec",3]],["bool",15]]],[11,"le","","",8,[[["bytescodec",3]],["bool",15]]],[11,"gt","","",8,[[["bytescodec",3]],["bool",15]]],[11,"ge","","",8,[[["bytescodec",3]],["bool",15]]],[11,"partial_cmp","","",13,[[["linescodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["linescodec",3]],["bool",15]]],[11,"le","","",13,[[["linescodec",3]],["bool",15]]],[11,"gt","","",13,[[["linescodec",3]],["bool",15]]],[11,"ge","","",13,[[["linescodec",3]],["bool",15]]],[11,"partial_cmp","","",14,[[["anydelimitercodec",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["anydelimitercodec",3]],["bool",15]]],[11,"le","","",14,[[["anydelimitercodec",3]],["bool",15]]],[11,"gt","","",14,[[["anydelimitercodec",3]],["bool",15]]],[11,"ge","","",14,[[["anydelimitercodec",3]],["bool",15]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec::length_delimited","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::sync","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::either","",7,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec::length_delimited","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tokio_util::codec","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",8,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"poll","tokio_util::sync","",16,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","","Poll the future stored inside this box.",19,[[["pin",3],["context",3]],["poll",4]]],[11,"poll","tokio_util::either","",7,[[["pin",3],["context",3]],["poll",4]]],[11,"poll_next","tokio_util::codec","",9,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",10,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","","",11,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio_util::sync","",18,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_next","tokio_util::either","",7,[[["pin",3],["context",3]],[["option",4],["poll",4]]]],[11,"poll_ready","tokio_util::codec","",9,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",9,[[["pin",3]],["result",4]]],[11,"poll_flush","","",9,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",9,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",10,[[["pin",3]],["result",4]]],[11,"poll_flush","","",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",10,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","","",11,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","",11,[[["pin",3]],["result",4]]],[11,"poll_flush","","",11,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_close","","",11,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_ready","tokio_util::sync","This is equivalent to calling <code>poll_send_done</code>.",17,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_flush","","This is equivalent to calling <code>poll_send_done</code>.",17,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"start_send","","This is equivalent to calling <code>start_send</code>.",17,[[["pin",3]],["result",4]]],[11,"poll_close","","This method will first flush the <code>PollSender</code>, and then …",17,[[["pin",3],["context",3]],[["poll",4],["result",4]]]],[11,"poll_fill_buf","tokio_util::either","",7,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"consume","","",7,[[["pin",3],["usize",15]]]],[11,"poll_read","","",7,[[["pin",3],["context",3],["readbuf",3]],[["result",6],["poll",4]]]],[11,"start_seek","","",7,[[["pin",3],["seekfrom",4]],["result",6]]],[11,"poll_complete","","",7,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",7,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",7,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",7,[[["pin",3],["context",3]],[["poll",4],["result",6]]]],[11,"new","tokio_util::codec","Creates a new <code>BytesCodec</code> for shipping around raw bytes.",8,[[],["bytescodec",3]]],[11,"decode_eof","","A default method available to be called when there are no …",2,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"framed","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",2,[[["asyncwrite",8],["sized",8],["asyncread",8]],[["asyncwrite",8],["framed",3],["asyncread",8],["sized",8]]]],[11,"new","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",9,[[],["framed",3]]],[11,"with_capacity","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",9,[[["usize",15]],["framed",3]]],[11,"from_parts","","Provides a <code>Stream</code> and <code>Sink</code> interface for reading and …",9,[[["framedparts",3]],["framed",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped …",9,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream …",9,[[]]],[11,"get_pin_mut","","Returns a pinned mutable reference to the underlying I/O …",9,[[["pin",3]],["pin",3]]],[11,"codec","","Returns a reference to the underlying codec wrapped by …",9,[[]]],[11,"codec_mut","","Returns a mutable reference to the underlying codec …",9,[[]]],[11,"read_buffer","","Returns a reference to the read buffer.",9,[[],["bytesmut",3]]],[11,"read_buffer_mut","","Returns a mutable reference to the read buffer.",9,[[],["bytesmut",3]]],[11,"write_buffer","","Returns a reference to the write buffer.",9,[[],["bytesmut",3]]],[11,"write_buffer_mut","","Returns a mutable reference to the write buffer.",9,[[],["bytesmut",3]]],[11,"into_inner","","Consumes the <code>Framed</code>, returning its underlying I/O stream.",9,[[]]],[11,"into_parts","","Consumes the <code>Framed</code>, returning its underlying I/O stream, …",9,[[],["framedparts",3]]],[11,"new","","Create a new, default, <code>FramedParts</code>",4,[[],["framedparts",3]]],[11,"new","","Creates a new <code>FramedRead</code> with the given <code>decoder</code>.",10,[[],["framedread",3]]],[11,"with_capacity","","Creates a new <code>FramedRead</code> with the given <code>decoder</code> and a …",10,[[["usize",15]],["framedread",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped …",10,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream …",10,[[]]],[11,"get_pin_mut","","Returns a pinned mutable reference to the underlying I/O …",10,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the <code>FramedRead</code>, returning its underlying I/O …",10,[[]]],[11,"decoder","","Returns a reference to the underlying decoder.",10,[[]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",10,[[]]],[11,"read_buffer","","Returns a reference to the read buffer.",10,[[],["bytesmut",3]]],[11,"read_buffer_mut","","Returns a mutable reference to the read buffer.",10,[[],["bytesmut",3]]],[11,"new","","Creates a new <code>FramedWrite</code> with the given <code>encoder</code>.",11,[[],["framedwrite",3]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped …",11,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream …",11,[[]]],[11,"get_pin_mut","","Returns a pinned mutable reference to the underlying I/O …",11,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the <code>FramedWrite</code>, returning its underlying I/O …",11,[[]]],[11,"encoder","","Returns a reference to the underlying encoder.",11,[[]]],[11,"encoder_mut","","Returns a mutable reference to the underlying encoder.",11,[[]]],[11,"write_buffer","","Returns a reference to the write buffer.",11,[[],["bytesmut",3]]],[11,"write_buffer_mut","","Returns a mutable reference to the write buffer.",11,[[],["bytesmut",3]]],[11,"new","","Returns a <code>LinesCodec</code> for splitting up data into lines.",13,[[],["linescodec",3]]],[11,"new_with_max_length","","Returns a <code>LinesCodec</code> with a maximum line length limit.",13,[[["usize",15]]]],[11,"max_length","","Returns the maximum line length when decoding.",13,[[],["usize",15]]],[11,"new","","Returns a <code>AnyDelimiterCodec</code> for splitting up data into …",14,[[["vec",3],["u8",15]],["anydelimitercodec",3]]],[11,"new_with_max_length","","Returns a <code>AnyDelimiterCodec</code> with a maximum chunk length …",14,[[["usize",15],["vec",3],["u8",15]]]],[11,"max_length","","Returns the maximum chunk length when decoding.",14,[[],["usize",15]]],[11,"new","tokio_util::sync","Creates a new CancellationToken in the non-cancelled …",15,[[],["cancellationtoken",3]]],[11,"child_token","","Creates a <code>CancellationToken</code> which will get cancelled …",15,[[],["cancellationtoken",3]]],[11,"cancel","","Cancel the [<code>CancellationToken</code>] and all child tokens which …",15,[[]]],[11,"is_cancelled","","Returns <code>true</code> if the <code>CancellationToken</code> had been cancelled",15,[[],["bool",15]]],[11,"cancelled","","Returns a <code>Future</code> that gets fulfilled when cancellation is …",15,[[],["waitforcancellationfuture",3]]],[11,"new","","Create a new <code>PollSender</code>.",17,[[["sender",3]]]],[11,"start_send","","Start sending a new item.",17,[[],[["result",4],["senderror",3]]]],[11,"poll_send_done","","If a send is in progress, poll for its completion. If no …",17,[[["context",3]],[["result",4],["poll",4]]]],[11,"is_ready","","Check whether the channel is ready to send more messages …",17,[[],["bool",15]]],[11,"is_closed","","Check whether the channel has been closed.",17,[[],["bool",15]]],[11,"clone_inner","","Clone the underlying <code>Sender</code>.",17,[[],[["option",4],["sender",3]]]],[11,"inner_ref","","Access the underlying <code>Sender</code>.",17,[[],[["option",4],["sender",3]]]],[11,"close_this_sender","","Close this sender. No more messages can be sent from this …",17,[[]]],[11,"abort_send","","Abort the current in-progress send, if any.",17,[[],["bool",15]]],[11,"new","","Create a new <code>PollSemaphore</code>.",18,[[["arc",3],["semaphore",3]]]],[11,"close","","Closes the semaphore.",18,[[]]],[11,"clone_inner","","Obtain a clone of the inner semaphore.",18,[[],[["arc",3],["semaphore",3]]]],[11,"into_inner","","Get back the inner semaphore.",18,[[],[["arc",3],["semaphore",3]]]],[11,"poll_acquire","","Poll to acquire a permit from the semaphore.",18,[[["context",3]],[["option",4],["poll",4]]]],[11,"available_permits","","Returns the current number of available permits.",18,[[],["usize",15]]],[11,"add_permits","","Adds <code>n</code> new permits to the semaphore.",18,[[["usize",15]]]],[11,"new","","Create a new <code>ReusableBoxFuture<T></code> containing the provided …",19,[[]]],[11,"set","","Replace the future currently stored in this box.",19,[[]]],[11,"try_set","","Replace the future currently stored in this box.",19,[[],["result",4]]],[11,"get_pin","","Get a pinned reference to the underlying future.",19,[[],[["future",8],["pin",3]]]],[11,"poll","","Poll the future stored inside this box.",19,[[["context",3]],["poll",4]]]],"p":[[3,"LengthDelimitedCodec"],[3,"Builder"],[8,"Decoder"],[8,"Encoder"],[3,"FramedParts"],[4,"LinesCodecError"],[4,"AnyDelimiterCodecError"],[4,"Either"],[3,"BytesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"LengthDelimitedCodecError"],[3,"LinesCodec"],[3,"AnyDelimiterCodec"],[3,"CancellationToken"],[3,"WaitForCancellationFuture"],[3,"PollSender"],[3,"PollSemaphore"],[3,"ReusableBoxFuture"]]},\
"tower_service":{"doc":"Definition of the core <code>Service</code> trait to Tower","i":[[8,"Service","tower_service","An asynchronous function from a <code>Request</code> to a <code>Response</code>.",null,null],[16,"Response","","Responses given by the service.",0,null],[16,"Error","","Errors produced by the service.",0,null],[16,"Future","","The future response value.",0,null],[10,"poll_ready","","Returns <code>Poll::Ready(Ok(()))</code> when the service is able to …",0,[[["context",3]],[["poll",4],["result",4]]]],[10,"call","","Process the request and return the response …",0,[[]]]],"p":[[8,"Service"]]},\
"tracing":{"doc":"A scoped, structured logging and diagnostics system.","i":[[0,"dispatcher","tracing","Dispatches trace events to <code>Subscriber</code>s.",null,null],[5,"set_default","tracing::dispatcher","Sets the dispatch as the default dispatch for the …",null,[[["dispatch",3]],["defaultguard",3]]],[5,"with_default","","Sets this dispatch as the default for the duration of a …",null,[[["dispatch",3]]]],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the …",null,null],[5,"get_default","","Executes a closure with a reference to this thread\'s …",null,[[]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration …",null,[[["dispatch",3]],[["result",4],["setglobaldefaulterror",3]]]],[3,"Dispatch","","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[0,"field","tracing","Structured data associated with <code>Span</code>s and <code>Event</code>s.",null,null],[3,"Field","tracing::field","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\'s …",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",0,[[["i64",15],["field",3]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",0,[[["field",3],["u64",15]]]],[11,"record_bool","","Visit a boolean value.",0,[[["bool",15],["field",3]]]],[11,"record_str","","Visit a string value.",0,[[["field",3],["str",15]]]],[11,"record_error","","Records a type implementing <code>Error</code>.",0,[[["field",3],["error",8]]]],[10,"record_debug","","Visit a value implementing <code>fmt::Debug</code>.",0,[[["debug",8],["field",3]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given <code>Visitor</code>.",1,[[["visit",8],["field",3]]]],[3,"DisplayValue","","A <code>Value</code> which serializes using <code>fmt::Display</code>.",null,null],[3,"DebugValue","","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.",null,null],[5,"display","","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that …",null,[[],["displayvalue",3]]],[5,"debug","","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can …",null,[[],["debugvalue",3]]],[8,"AsField","","Trait implemented to allow a type to be used as a field …",null,null],[10,"as_field","","Attempts to convert <code>&self</code> into a <code>Field</code> with the specified …",2,[[["metadata",3]],[["option",4],["field",3]]]],[0,"instrument","tracing","Attach a span to a <code>std::future::Future</code>.",null,null],[8,"Instrument","tracing::instrument","Attaches spans to a <code>std::future::Future</code>.",null,null],[11,"instrument","","Instruments this type with the provided <code>Span</code>, returning an…",3,[[["span",3]],["instrumented",3]]],[11,"in_current_span","","Instruments this type with the current <code>Span</code>, returning an …",3,[[],["instrumented",3]]],[8,"WithSubscriber","","Extension trait allowing futures to be instrumented with …",null,null],[11,"with_subscriber","","Attaches the provided <code>Subscriber</code> to this type, returning a…",4,[[],["withdispatch",3]]],[11,"with_current_subscriber","","Attaches the current default <code>Subscriber</code> to this type, …",4,[[],["withdispatch",3]]],[3,"WithDispatch","","A future that has been instrumented with a <code>tracing</code> …",null,null],[3,"Instrumented","","A future that has been instrumented with a <code>tracing</code> span.",null,null],[11,"span","","Borrows the <code>Span</code> that this type is instrumented by.",5,[[],["span",3]]],[11,"span_mut","","Mutably borrows the <code>Span</code> that this type is instrumented …",5,[[],["span",3]]],[11,"inner","","Borrows the wrapped type.",5,[[]]],[11,"inner_mut","","Mutably borrows the wrapped type.",5,[[]]],[11,"inner_pin_ref","","Get a pinned reference to the wrapped type.",5,[[["pin",3]],["pin",3]]],[11,"inner_pin_mut","","Get a pinned mutable reference to the wrapped type.",5,[[["pin",3]],["pin",3]]],[11,"into_inner","","Consumes the <code>Instrumented</code>, returning the wrapped type.",5,[[]]],[0,"level_filters","tracing","Trace verbosity level filtering.",null,null],[3,"ParseLevelFilterError","tracing::level_filters","Indicates that a string could not be parsed to a valid …",null,null],[3,"LevelFilter","","A filter comparable to a verbosity <code>Level</code>.",null,null],[17,"STATIC_MAX_LEVEL","","The statically configured maximum trace level.",null,null],[0,"span","tracing","Spans represent periods of time in which a program was …",null,null],[3,"Attributes","tracing::span","Attributes provided to a <code>Subscriber</code> describing a new span …",null,null],[3,"Id","","Identifies a span within the context of a subscriber.",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[8,"AsId","","Trait implemented by types which have a span <code>Id</code>.",null,null],[10,"as_id","","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …",6,[[],[["option",4],["id",3]]]],[3,"Span","","A handle representing a span, with the capability to …",null,null],[3,"Entered","","A guard representing a span which has been entered and is …",null,null],[3,"EnteredSpan","","An owned version of [<code>Entered</code>], a guard representing a …",null,null],[11,"new","","Constructs a new <code>Span</code> with the given metadata and set of …",7,[[["valueset",3],["metadata",3]],["span",3]]],[11,"new_root","","Constructs a new <code>Span</code> as the root of its own trace tree, …",7,[[["valueset",3],["metadata",3]],["span",3]]],[11,"child_of","","Constructs a new <code>Span</code> as child of the given parent span, …",7,[[["valueset",3],["metadata",3]],["span",3]]],[11,"new_disabled","","Constructs a new disabled span with the given <code>Metadata</code>.",7,[[["metadata",3]],["span",3]]],[11,"none","","Constructs a new span that is <em>completely disabled</em>.",7,[[],["span",3]]],[11,"current","","Returns a handle to the span considered by the <code>Subscriber</code> …",7,[[],["span",3]]],[11,"enter","","Enters this span, returning a guard that will exit the …",7,[[],["entered",3]]],[11,"entered","","Enters this span, consuming it and returning a [guard][…",7,[[],["enteredspan",3]]],[11,"in_scope","","Executes the given function in the context of this span.",7,[[["fnonce",8]]]],[11,"field","","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …",7,[[],[["field",3],["option",4]]]],[11,"has_field","","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …",7,[[],["bool",15]]],[11,"record","","Records that the field described by <code>field</code> has the value …",7,[[]]],[11,"record_all","","Records all the fields in the provided <code>ValueSet</code>.",7,[[["valueset",3]]]],[11,"is_disabled","","Returns <code>true</code> if this span was disabled by the subscriber …",7,[[],["bool",15]]],[11,"is_none","","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …",7,[[],["bool",15]]],[11,"follows_from","","Indicates that the span with the given ID has an indirect …",7,[[]]],[11,"id","","Returns this span\'s <code>Id</code>, if it is enabled.",7,[[],[["option",4],["id",3]]]],[11,"metadata","","Returns this span\'s <code>Metadata</code>, if it is enabled.",7,[[],[["option",4],["metadata",3]]]],[11,"with_subscriber","","Invokes a function with a reference to this span\'s ID and …",7,[[],["option",4]]],[11,"id","","Returns this span\'s <code>Id</code>, if it is enabled.",8,[[],[["option",4],["id",3]]]],[11,"exit","","Exits this span, returning the underlying [<code>Span</code>].",8,[[],["span",3]]],[0,"subscriber","tracing","Collects and records trace data.",null,null],[8,"Subscriber","tracing::subscriber","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",9,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",9,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",9,[[],[["option",4],["levelfilter",3]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",9,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",9,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",9,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",9,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",9,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",9,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",9,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",9,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",9,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",9,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",9,[[["typeid",3]],["option",4]]],[3,"Interest","","Indicates a <code>Subscriber</code>\'s interest in a particular …",null,null],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the …",null,null],[5,"with_default","","Sets this subscriber as the default for the duration of a …",null,[[]]],[5,"set_global_default","","Sets this subscriber as the global default for the …",null,[[],[["result",4],["setglobaldefaulterror",3]]]],[5,"set_default","","Sets the subscriber as the default for the duration of …",null,[[],["defaultguard",3]]],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[8,"Instrument","tracing","Attaches spans to a <code>std::future::Future</code>.",null,null],[11,"instrument","","Instruments this type with the provided <code>Span</code>, returning an…",3,[[["span",3]],["instrumented",3]]],[11,"in_current_span","","Instruments this type with the current <code>Span</code>, returning an …",3,[[],["instrumented",3]]],[3,"Dispatch","","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"Event","","<code>Event</code>s represent single points in time where something …",null,null],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given <code>Visitor</code>.",1,[[["visit",8],["field",3]]]],[8,"Subscriber","","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",9,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",9,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",9,[[],[["option",4],["levelfilter",3]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",9,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",9,[[["id",3],["record",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",9,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",9,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",9,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",9,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",9,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",9,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",9,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",9,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",9,[[["typeid",3]],["option",4]]],[0,"event","","Events represent single points in time during the …",null,null],[3,"Event","tracing::event","<code>Event</code>s represent single points in time where something …",null,null],[3,"Level","tracing","Describes the level of verbosity of a span or event.",null,null],[3,"Metadata","","Metadata describing a span or event.",null,null],[3,"Span","","A handle representing a span, with the capability to …",null,null],[14,"span","","Constructs a new span.",null,null],[14,"trace_span","","Constructs a span at the trace level.",null,null],[14,"debug_span","","Constructs a span at the debug level.",null,null],[14,"info_span","","Constructs a span at the info level.",null,null],[14,"warn_span","","Constructs a span at the warn level.",null,null],[14,"error_span","","Constructs a span at the error level.",null,null],[14,"event","","Constructs a new <code>Event</code>.",null,null],[14,"trace","","Constructs an event at the trace level.",null,null],[14,"debug","","Constructs an event at the debug level.",null,null],[14,"info","","Constructs an event at the info level.",null,null],[14,"warn","","Constructs an event at the warn level.",null,null],[14,"error","","Constructs an event at the error level.",null,null],[11,"from","tracing::subscriber","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","tracing","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","tracing::subscriber","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","tracing::field","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"into_iter","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","tracing::instrument","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_future","","",5,[[]]],[11,"from","tracing::level_filters","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"to_string","","",22,[[],["string",3]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","tracing::span","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","tracing","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","tracing::span","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tracing::subscriber","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","tracing::event","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","tracing","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::span","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::event","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::span","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::field","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::level_filters","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::span","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tracing::subscriber","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","tracing::field","",13,[[]]],[11,"hash","tracing::span","",24,[[]]],[11,"partial_cmp","tracing::level_filters","",22,[[["level",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["level",3]],["bool",15]]],[11,"le","","",22,[[["level",3]],["bool",15]]],[11,"gt","","",22,[[["level",3]],["bool",15]]],[11,"ge","","",22,[[["level",3]],["bool",15]]],[11,"partial_cmp","","",22,[[["levelfilter",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["levelfilter",3]],["bool",15]]],[11,"le","","",22,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",22,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",22,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","tracing","",29,[[["levelfilter",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["levelfilter",3]],["bool",15]]],[11,"le","","",29,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",29,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",29,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",29,[[["level",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["level",3]],["bool",15]]],[11,"le","","",29,[[["level",3]],["bool",15]]],[11,"gt","","",29,[[["level",3]],["bool",15]]],[11,"ge","","",29,[[["level",3]],["bool",15]]],[11,"as_ref","tracing::field","",13,[[],["str",15]]],[11,"next","","",17,[[],[["field",3],["option",4]]]],[11,"from","tracing::level_filters","",22,[[["level",3]],["levelfilter",3]]],[11,"from","tracing","",11,[[],["dispatch",3]]],[11,"from","tracing::level_filters","",22,[[["option",4],["level",3]],["levelfilter",3]]],[11,"default","tracing","Returns the current default dispatcher",11,[[],["dispatch",3]]],[11,"clone","tracing::field","",13,[[],["field",3]]],[11,"clone","tracing::level_filters","",22,[[],["levelfilter",3]]],[11,"clone","tracing::span","",24,[[],["id",3]]],[11,"clone","tracing::field","",18,[[],["displayvalue",3]]],[11,"clone","tracing::level_filters","",21,[[],["parselevelfiltererror",3]]],[11,"clone","tracing::field","",19,[[],["debugvalue",3]]],[11,"clone","tracing::subscriber","",27,[[],["interest",3]]],[11,"clone","tracing","",11,[[],["dispatch",3]]],[11,"clone","","",29,[[],["level",3]]],[11,"record","tracing::field","",18,[[["visit",8],["field",3]]]],[11,"record","","",19,[[["visit",8],["field",3]]]],[11,"record","","",14,[[["visit",8],["field",3]]]],[11,"cmp","tracing::level_filters","",22,[[["levelfilter",3]],["ordering",4]]],[11,"cmp","tracing","",29,[[["level",3]],["ordering",4]]],[11,"eq","tracing::level_filters","",22,[[["levelfilter",3]],["bool",15]]],[11,"ne","","",22,[[["levelfilter",3]],["bool",15]]],[11,"eq","tracing","",29,[[["levelfilter",3]],["bool",15]]],[11,"eq","tracing::level_filters","",22,[[["level",3]],["bool",15]]],[11,"eq","tracing::field","",13,[[["field",3]],["bool",15]]],[11,"eq","tracing::span","",24,[[["id",3]],["bool",15]]],[11,"ne","","",24,[[["id",3]],["bool",15]]],[11,"eq","tracing::field","",14,[[["empty",3]],["bool",15]]],[11,"eq","tracing","",29,[[["level",3]],["bool",15]]],[11,"ne","","",29,[[["level",3]],["bool",15]]],[11,"drop","tracing::subscriber","",10,[[]]],[11,"from_str","tracing::level_filters","",22,[[["str",15]],[["result",4],["levelfilter",3]]]],[11,"from_str","tracing","",29,[[["str",15]],[["result",4],["level",3],["parselevelerror",3]]]],[11,"as_field","tracing::field","",13,[[["metadata",3]],[["option",4],["field",3]]]],[11,"drop","tracing","",7,[[]]],[11,"drop","tracing::span","",26,[[]]],[11,"drop","","",8,[[]]],[11,"clone","tracing::instrument","",20,[[],["withdispatch",3]]],[11,"clone","","",5,[[],["instrumented",3]]],[11,"clone","tracing","",7,[[],["span",3]]],[11,"eq","","",7,[[],["bool",15]]],[11,"deref","tracing::span","",8,[[],["span",3]]],[11,"fmt","tracing::instrument","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tracing::span","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tracing","",7,[[["formatter",3]],["result",6]]],[11,"hash","","",7,[[]]],[11,"poll","tracing::instrument","",5,[[["pin",3],["context",3]],["poll",4]]],[11,"none","tracing","Returns a new <code>Dispatch</code> that discards events and spans.",11,[[],["dispatch",3]]],[11,"new","","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.",11,[[],["dispatch",3]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",11,[[["metadata",3]],["interest",3]]],[11,"new_span","","Record the construction of a new span, returning a new ID …",11,[[["attributes",3]],["id",3]]],[11,"record","","Record a set of values on a span.",11,[[["id",3],["record",3]]]],[11,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",11,[[["id",3]]]],[11,"enabled","","Returns true if a span with the specified metadata would …",11,[[["metadata",3]],["bool",15]]],[11,"event","","Records that an <code>Event</code> has occurred.",11,[[["event",3]]]],[11,"enter","","Records that a span has been can_enter.",11,[[["id",3]]]],[11,"exit","","Records that a span has been exited.",11,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",11,[[["id",3]],["id",3]]],[11,"drop_span","","Notifies the subscriber that a span ID has been dropped.",11,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a span ID has been dropped, …",11,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",11,[[],["current",3]]],[11,"is","","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …",11,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …",11,[[],["option",4]]],[11,"callsite","tracing::field","Returns an <code>Identifier</code> that uniquely identifies the …",13,[[],["identifier",3]]],[11,"name","","Returns a string representing the name of the field.",13,[[],["str",15]]],[11,"new","","Constructs a new <code>FieldSet</code> with the given array of field …",15,[[["identifier",3]],["fieldset",3]]],[11,"field","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …",15,[[],[["field",3],["option",4]]]],[11,"contains","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.",15,[[["field",3]],["bool",15]]],[11,"iter","","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.",15,[[],["iter",3]]],[11,"len","","Returns the number of fields in this <code>FieldSet</code>.",15,[[],["usize",15]]],[11,"is_empty","","Returns whether or not this <code>FieldSet</code> has fields.",15,[[],["bool",15]]],[11,"callsite","","Returns an <code>Identifier</code> that uniquely identifies the …",16,[[],["identifier",3]]],[18,"OFF","tracing::level_filters","The \\\"off\\\" level.",22,null],[18,"ERROR","","The \\\"error\\\" level.",22,null],[18,"WARN","","The \\\"warn\\\" level.",22,null],[18,"INFO","","The \\\"info\\\" level.",22,null],[18,"DEBUG","","The \\\"debug\\\" level.",22,null],[18,"TRACE","","The \\\"trace\\\" level.",22,null],[11,"from_level","","Returns a <code>LevelFilter</code> that enables spans and events with …",22,[[["level",3]],["levelfilter",3]]],[11,"into_level","","Returns the most verbose <code>Level</code> that this filter accepts, …",22,[[],[["option",4],["level",3]]]],[11,"current","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …",22,[[],["levelfilter",3]]],[11,"new","tracing::span","Returns <code>Attributes</code> describing a new child span of the …",23,[[["valueset",3],["metadata",3]],["attributes",3]]],[11,"new_root","","Returns <code>Attributes</code> describing a new span at the root of …",23,[[["valueset",3],["metadata",3]],["attributes",3]]],[11,"child_of","","Returns <code>Attributes</code> describing a new child span of the …",23,[[["valueset",3],["id",3],["metadata",3]],["attributes",3]]],[11,"metadata","","Returns a reference to the new span\'s metadata.",23,[[],["metadata",3]]],[11,"values","","Returns a reference to a <code>ValueSet</code> containing any values …",23,[[],["valueset",3]]],[11,"is_root","","Returns true if the new span should be a root.",23,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new span\'s parent should be …",23,[[],["bool",15]]],[11,"parent","","Returns the new span\'s explicitly-specified parent, if …",23,[[],[["id",3],["option",4]]]],[11,"record","","Records all the fields in this set of <code>Attributes</code> with the …",23,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …",23,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.",23,[[],["bool",15]]],[11,"fields","","Returns the set of all fields defined by this span\'s …",23,[[],["fieldset",3]]],[11,"from_u64","","Constructs a new span ID from the given <code>u64</code>.",24,[[["u64",15]],["id",3]]],[11,"from_non_zero_u64","","Constructs a new span ID from the given <code>NonZeroU64</code>.",24,[[["nonzerou64",3]],["id",3]]],[11,"into_u64","","Returns the span\'s ID as a <code>u64</code>.",24,[[],["u64",15]]],[11,"into_non_zero_u64","","Returns the span\'s ID as a <code>NonZeroU64</code>.",24,[[],["nonzerou64",3]]],[11,"new","","Constructs a new <code>Record</code> from a <code>ValueSet</code>.",25,[[["valueset",3]],["record",3]]],[11,"record","","Records all the fields in this <code>Record</code> with the provided …",25,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this <code>Record</code> contains a value for the …",25,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this <code>Record</code> contains <em>no</em> values.",25,[[],["bool",15]]],[11,"is","tracing","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.",9,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to this <code>Subscriber</code> value if it is …",9,[[],["option",4]]],[11,"never","tracing::subscriber","Returns an <code>Interest</code> indicating that the subscriber is …",27,[[],["interest",3]]],[11,"sometimes","","Returns an <code>Interest</code> indicating the subscriber is …",27,[[],["interest",3]]],[11,"always","","Returns an <code>Interest</code> indicating the subscriber is always …",27,[[],["interest",3]]],[11,"is_never","","Returns <code>true</code> if the subscriber is never interested in …",27,[[],["bool",15]]],[11,"is_sometimes","","Returns <code>true</code> if the subscriber is sometimes interested in …",27,[[],["bool",15]]],[11,"is_always","","Returns <code>true</code> if the subscriber is always interested in …",27,[[],["bool",15]]],[11,"dispatch","tracing::event","Constructs a new <code>Event</code> with the specified metadata and …",28,[[["valueset",3],["metadata",3]]]],[11,"new","","Returns a new <code>Event</code> in the current span, with the …",28,[[["valueset",3],["metadata",3]],["event",3]]],[11,"new_child_of","","Returns a new <code>Event</code> as a child of the specified span, …",28,[[["valueset",3],["metadata",3]],["event",3]]],[11,"child_of","","Constructs a new <code>Event</code> with the specified metadata and …",28,[[["valueset",3],["metadata",3]]]],[11,"record","","Visits all the fields on this <code>Event</code> with the specified …",28,[[["visit",8]]]],[11,"fields","","Returns an iterator over the set of values on this <code>Event</code>.",28,[[],["iter",3]]],[11,"metadata","","Returns metadata describing this <code>Event</code>.",28,[[],["metadata",3]]],[11,"is_root","","Returns true if the new event should be a root.",28,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new event\'s parent should be …",28,[[],["bool",15]]],[11,"parent","","Returns the new event\'s explicitly-specified parent, if …",28,[[],[["id",3],["option",4]]]],[18,"ERROR","tracing","The \\\"error\\\" level.",29,null],[18,"WARN","","The \\\"warn\\\" level.",29,null],[18,"INFO","","The \\\"info\\\" level.",29,null],[18,"DEBUG","","The \\\"debug\\\" level.",29,null],[18,"TRACE","","The \\\"trace\\\" level.",29,null],[11,"new","","Construct new metadata for a span or event, with a name, …",30,[[["option",4],["level",3],["u32",15],["kind",3],["str",15],["option",4],["str",15],["fieldset",3]],["metadata",3]]],[11,"fields","","Returns the names of the fields on the described span or …",30,[[],["fieldset",3]]],[11,"level","","Returns the level of verbosity of the described span or …",30,[[],["level",3]]],[11,"name","","Returns the name of the span.",30,[[],["str",15]]],[11,"target","","Returns a string describing the part of the system where …",30,[[],["str",15]]],[11,"module_path","","Returns the path to the Rust module where the span …",30,[[],[["option",4],["str",15]]]],[11,"file","","Returns the name of the source code file where the span …",30,[[],[["option",4],["str",15]]]],[11,"line","","Returns the line number in the source code file where the …",30,[[],[["u32",15],["option",4]]]],[11,"callsite","","Returns an opaque <code>Identifier</code> that uniquely identifies the …",30,[[],["identifier",3]]],[11,"is_event","","Returns true if the callsite kind is <code>Event</code>.",30,[[],["bool",15]]],[11,"is_span","","Return true if the callsite kind is <code>Span</code>.",30,[[],["bool",15]]]],"p":[[8,"Visit"],[8,"Value"],[8,"AsField"],[8,"Instrument"],[8,"WithSubscriber"],[3,"Instrumented"],[8,"AsId"],[3,"Span"],[3,"EnteredSpan"],[8,"Subscriber"],[3,"DefaultGuard"],[3,"Dispatch"],[3,"SetGlobalDefaultError"],[3,"Field"],[3,"Empty"],[3,"FieldSet"],[3,"ValueSet"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"WithDispatch"],[3,"ParseLevelFilterError"],[3,"LevelFilter"],[3,"Attributes"],[3,"Id"],[3,"Record"],[3,"Entered"],[3,"Interest"],[3,"Event"],[3,"Level"],[3,"Metadata"]]},\
"tracing_core":{"doc":"Core primitives for <code>tracing</code>.","i":[[0,"callsite","tracing_core","Callsites represent the source locations from which spans …",null,null],[8,"Callsite","tracing_core::callsite","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the <code>Interest</code> for this callsite.",0,[[["interest",3]]]],[10,"metadata","","Returns the metadata associated with the callsite.",0,[[],["metadata",3]]],[3,"Identifier","","Uniquely identifies a <code>Callsite</code>",null,null],[5,"rebuild_interest_cache","","Clear and reregister interest on every <code>Callsite</code>",null,[[]]],[5,"register","","Register a new <code>Callsite</code> with the global registry.",null,[[["callsite",8]]]],[0,"dispatcher","tracing_core","Dispatches trace events to <code>Subscriber</code>s.",null,null],[3,"Dispatch","tracing_core::dispatcher","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"DefaultGuard","","A guard that resets the current default dispatcher to the …",null,null],[5,"with_default","","Sets this dispatch as the default for the duration of a …",null,[[["dispatch",3]]]],[5,"set_default","","Sets the dispatch as the default dispatch for the …",null,[[["dispatch",3]],["defaultguard",3]]],[5,"set_global_default","","Sets this dispatch as the global default for the duration …",null,[[["dispatch",3]],[["result",4],["setglobaldefaulterror",3]]]],[3,"SetGlobalDefaultError","","Returned if setting the global dispatcher fails.",null,null],[5,"get_default","","Executes a closure with a reference to this thread\'s …",null,[[]]],[11,"none","","Returns a new <code>Dispatch</code> that discards events and spans.",1,[[]]],[11,"new","","Returns a <code>Dispatch</code> that forwards to the given <code>Subscriber</code>.",1,[[]]],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",1,[[["metadata",3]],["interest",3]]],[11,"new_span","","Record the construction of a new span, returning a new ID …",1,[[["attributes",3]],["id",3]]],[11,"record","","Record a set of values on a span.",1,[[["record",3],["id",3]]]],[11,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",1,[[["id",3]]]],[11,"enabled","","Returns true if a span with the specified metadata would …",1,[[["metadata",3]],["bool",15]]],[11,"event","","Records that an <code>Event</code> has occurred.",1,[[["event",3]]]],[11,"enter","","Records that a span has been can_enter.",1,[[["id",3]]]],[11,"exit","","Records that a span has been exited.",1,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",1,[[["id",3]],["id",3]]],[11,"drop_span","","Notifies the subscriber that a span ID has been dropped.",1,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a span ID has been dropped, …",1,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",1,[[],["current",3]]],[11,"is","","Returns <code>true</code> if this <code>Dispatch</code> forwards to a <code>Subscriber</code> of …",1,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to the <code>Subscriber</code> this <code>Dispatch</code> …",1,[[],["option",4]]],[0,"event","tracing_core","Events represent single points in time during the …",null,null],[3,"Event","tracing_core::event","<code>Event</code>s represent single points in time where something …",null,null],[11,"dispatch","","Constructs a new <code>Event</code> with the specified metadata and …",2,[[["metadata",3],["valueset",3]]]],[11,"new","","Returns a new <code>Event</code> in the current span, with the …",2,[[["metadata",3],["valueset",3]]]],[11,"new_child_of","","Returns a new <code>Event</code> as a child of the specified span, …",2,[[["metadata",3],["valueset",3]]]],[11,"child_of","","Constructs a new <code>Event</code> with the specified metadata and …",2,[[["metadata",3],["valueset",3]]]],[11,"record","","Visits all the fields on this <code>Event</code> with the specified …",2,[[["visit",8]]]],[11,"fields","","Returns an iterator over the set of values on this <code>Event</code>.",2,[[],["iter",3]]],[11,"metadata","","Returns metadata describing this <code>Event</code>.",2,[[],["metadata",3]]],[11,"is_root","","Returns true if the new event should be a root.",2,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new event\'s parent should be …",2,[[],["bool",15]]],[11,"parent","","Returns the new event\'s explicitly-specified parent, if …",2,[[],[["option",4],["id",3]]]],[0,"field","tracing_core","Span and <code>Event</code> key-value data.",null,null],[3,"Field","tracing_core::field","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\'s …",null,null],[3,"Empty","","An empty field.",null,null],[3,"FieldSet","","Describes the fields present on a span.",null,null],[3,"ValueSet","","A set of fields and values for a span.",null,null],[3,"Iter","","An iterator over a set of fields.",null,null],[8,"Visit","","Visits typed values.",null,null],[11,"record_i64","","Visit a signed 64-bit integer value.",3,[[["field",3],["i64",15]]]],[11,"record_u64","","Visit an unsigned 64-bit integer value.",3,[[["field",3],["u64",15]]]],[11,"record_bool","","Visit a boolean value.",3,[[["field",3],["bool",15]]]],[11,"record_str","","Visit a string value.",3,[[["field",3],["str",15]]]],[11,"record_error","","Records a type implementing <code>Error</code>.",3,[[["field",3],["error",8]]]],[10,"record_debug","","Visit a value implementing <code>fmt::Debug</code>.",3,[[["field",3],["debug",8]]]],[8,"Value","","A field value of an erased type.",null,null],[10,"record","","Visits this value with the given <code>Visitor</code>.",4,[[["field",3],["visit",8]]]],[3,"DisplayValue","","A <code>Value</code> which serializes using <code>fmt::Display</code>.",null,null],[3,"DebugValue","","A <code>Value</code> which serializes as a string using <code>fmt::Debug</code>.",null,null],[5,"display","","Wraps a type implementing <code>fmt::Display</code> as a <code>Value</code> that …",null,[[],["displayvalue",3]]],[5,"debug","","Wraps a type implementing <code>fmt::Debug</code> as a <code>Value</code> that can …",null,[[],["debugvalue",3]]],[11,"callsite","","Returns an <code>Identifier</code> that uniquely identifies the …",5,[[],["identifier",3]]],[11,"name","","Returns a string representing the name of the field.",5,[[],["str",15]]],[11,"new","","Constructs a new <code>FieldSet</code> with the given array of field …",6,[[["identifier",3]]]],[11,"field","","Returns the <code>Field</code> named <code>name</code>, or <code>None</code> if no such field …",6,[[],[["option",4],["field",3]]]],[11,"contains","","Returns <code>true</code> if <code>self</code> contains the given <code>field</code>.",6,[[["field",3]],["bool",15]]],[11,"iter","","Returns an iterator over the <code>Field</code>s in this <code>FieldSet</code>.",6,[[],["iter",3]]],[11,"len","","Returns the number of fields in this <code>FieldSet</code>.",6,[[],["usize",15]]],[11,"is_empty","","Returns whether or not this <code>FieldSet</code> has fields.",6,[[],["bool",15]]],[11,"callsite","","Returns an <code>Identifier</code> that uniquely identifies the …",7,[[],["identifier",3]]],[0,"metadata","tracing_core","Metadata describing trace data.",null,null],[3,"Metadata","tracing_core::metadata","Metadata describing a span or event.",null,null],[3,"Kind","","Indicates whether the callsite is a span or event.",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"LevelFilter","","A filter comparable to a verbosity <code>Level</code>.",null,null],[3,"ParseLevelFilterError","","Indicates that a string could not be parsed to a valid …",null,null],[11,"new","","Construct new metadata for a span or event, with a name, …",8,[[["u32",15],["level",3],["option",4],["str",15],["str",15],["option",4],["kind",3],["fieldset",3]]]],[11,"fields","","Returns the names of the fields on the described span or …",8,[[],["fieldset",3]]],[11,"level","","Returns the level of verbosity of the described span or …",8,[[],["level",3]]],[11,"name","","Returns the name of the span.",8,[[],["str",15]]],[11,"target","","Returns a string describing the part of the system where …",8,[[],["str",15]]],[11,"module_path","","Returns the path to the Rust module where the span …",8,[[],[["option",4],["str",15]]]],[11,"file","","Returns the name of the source code file where the span …",8,[[],[["option",4],["str",15]]]],[11,"line","","Returns the line number in the source code file where the …",8,[[],[["u32",15],["option",4]]]],[11,"callsite","","Returns an opaque <code>Identifier</code> that uniquely identifies the …",8,[[],["identifier",3]]],[11,"is_event","","Returns true if the callsite kind is <code>Event</code>.",8,[[],["bool",15]]],[11,"is_span","","Return true if the callsite kind is <code>Span</code>.",8,[[],["bool",15]]],[18,"EVENT","","<code>Event</code> callsite",9,null],[18,"SPAN","","<code>Span</code> callsite",9,null],[11,"is_span","","Return true if the callsite kind is <code>Span</code>",9,[[],["bool",15]]],[11,"is_event","","Return true if the callsite kind is <code>Event</code>",9,[[],["bool",15]]],[18,"ERROR","","The \\\"error\\\" level.",10,null],[18,"WARN","","The \\\"warn\\\" level.",10,null],[18,"INFO","","The \\\"info\\\" level.",10,null],[18,"DEBUG","","The \\\"debug\\\" level.",10,null],[18,"TRACE","","The \\\"trace\\\" level.",10,null],[18,"OFF","","The \\\"off\\\" level.",11,null],[18,"ERROR","","The \\\"error\\\" level.",11,null],[18,"WARN","","The \\\"warn\\\" level.",11,null],[18,"INFO","","The \\\"info\\\" level.",11,null],[18,"DEBUG","","The \\\"debug\\\" level.",11,null],[18,"TRACE","","The \\\"trace\\\" level.",11,null],[11,"from_level","","Returns a <code>LevelFilter</code> that enables spans and events with …",11,[[["level",3]]]],[11,"into_level","","Returns the most verbose <code>Level</code> that this filter accepts, …",11,[[],[["level",3],["option",4]]]],[11,"current","","Returns a <code>LevelFilter</code> that matches the most verbose <code>Level</code> …",11,[[]]],[3,"ParseLevelError","","Returned if parsing a <code>Level</code> fails.",null,null],[0,"span","tracing_core","Spans represent periods of time in the execution of a …",null,null],[3,"Id","tracing_core::span","Identifies a span within the context of a subscriber.",null,null],[3,"Attributes","","Attributes provided to a <code>Subscriber</code> describing a new span …",null,null],[3,"Record","","A set of fields recorded by a span.",null,null],[3,"Current","","Indicates what the <code>Subscriber</code> considers the \\\"current\\\" …",null,null],[11,"from_u64","","Constructs a new span ID from the given <code>u64</code>.",12,[[["u64",15]]]],[11,"from_non_zero_u64","","Constructs a new span ID from the given <code>NonZeroU64</code>.",12,[[["nonzerou64",3]]]],[11,"into_u64","","Returns the span\'s ID as a <code>u64</code>.",12,[[],["u64",15]]],[11,"into_non_zero_u64","","Returns the span\'s ID as a <code>NonZeroU64</code>.",12,[[],["nonzerou64",3]]],[11,"new","","Returns <code>Attributes</code> describing a new child span of the …",13,[[["metadata",3],["valueset",3]]]],[11,"new_root","","Returns <code>Attributes</code> describing a new span at the root of …",13,[[["metadata",3],["valueset",3]]]],[11,"child_of","","Returns <code>Attributes</code> describing a new child span of the …",13,[[["id",3],["metadata",3],["valueset",3]]]],[11,"metadata","","Returns a reference to the new span\'s metadata.",13,[[],["metadata",3]]],[11,"values","","Returns a reference to a <code>ValueSet</code> containing any values …",13,[[],["valueset",3]]],[11,"is_root","","Returns true if the new span should be a root.",13,[[],["bool",15]]],[11,"is_contextual","","Returns true if the new span\'s parent should be …",13,[[],["bool",15]]],[11,"parent","","Returns the new span\'s explicitly-specified parent, if …",13,[[],[["option",4],["id",3]]]],[11,"record","","Records all the fields in this set of <code>Attributes</code> with the …",13,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …",13,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.",13,[[],["bool",15]]],[11,"fields","","Returns the set of all fields defined by this span\'s …",13,[[],["fieldset",3]]],[11,"new","","Constructs a new <code>Record</code> from a <code>ValueSet</code>.",14,[[["valueset",3]]]],[11,"record","","Records all the fields in this <code>Record</code> with the provided …",14,[[["visit",8]]]],[11,"contains","","Returns <code>true</code> if this <code>Record</code> contains a value for the …",14,[[["field",3]],["bool",15]]],[11,"is_empty","","Returns true if this <code>Record</code> contains <em>no</em> values.",14,[[],["bool",15]]],[11,"new","","Constructs a new <code>Current</code> that indicates the current …",15,[[["id",3],["metadata",3]]]],[11,"none","","Constructs a new <code>Current</code> that indicates the current …",15,[[]]],[11,"is_known","","Returns <code>true</code> if the <code>Subscriber</code> that constructed this …",15,[[],["bool",15]]],[11,"into_inner","","Consumes <code>self</code> and returns the span <code>Id</code> and <code>Metadata</code> of the …",15,[[],["option",4]]],[11,"id","","Borrows the <code>Id</code> of the current span, if one exists and is …",15,[[],[["option",4],["id",3]]]],[11,"metadata","","Borrows the <code>Metadata</code> of the current span, if one exists …",15,[[],[["option",4],["metadata",3]]]],[0,"subscriber","tracing_core","Subscribers collect and record trace data.",null,null],[8,"Subscriber","tracing_core::subscriber","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",16,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",16,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",16,[[],[["levelfilter",3],["option",4]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",16,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",16,[[["record",3],["id",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",16,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",16,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",16,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",16,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",16,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",16,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",16,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",16,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",16,[[["typeid",3]],["option",4]]],[11,"is","","Returns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.",16,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to this <code>Subscriber</code> value if it is …",16,[[],["option",4]]],[3,"Interest","","Indicates a <code>Subscriber</code>\'s interest in a particular …",null,null],[11,"never","","Returns an <code>Interest</code> indicating that the subscriber is …",17,[[]]],[11,"sometimes","","Returns an <code>Interest</code> indicating the subscriber is …",17,[[]]],[11,"always","","Returns an <code>Interest</code> indicating the subscriber is always …",17,[[]]],[11,"is_never","","Returns <code>true</code> if the subscriber is never interested in …",17,[[],["bool",15]]],[11,"is_sometimes","","Returns <code>true</code> if the subscriber is sometimes interested in …",17,[[],["bool",15]]],[11,"is_always","","Returns <code>true</code> if the subscriber is always interested in …",17,[[],["bool",15]]],[3,"Once","tracing_core","A synchronization primitive which can be used to run a …",null,null],[8,"Callsite","","Trait implemented by callsites.",null,null],[10,"set_interest","","Sets the <code>Interest</code> for this callsite.",0,[[["interest",3]]]],[10,"metadata","","Returns the metadata associated with the callsite.",0,[[],["metadata",3]]],[3,"Dispatch","","<code>Dispatch</code> trace data to a <code>Subscriber</code>.",null,null],[3,"Event","","<code>Event</code>s represent single points in time where something …",null,null],[3,"Field","","An opaque key allowing <em>O</em>(1) access to a field in a <code>Span</code>\'s …",null,null],[3,"Level","","Describes the level of verbosity of a span or event.",null,null],[3,"LevelFilter","","A filter comparable to a verbosity <code>Level</code>.",null,null],[3,"Metadata","","Metadata describing a span or event.",null,null],[8,"Subscriber","","Trait representing the functions required to collect …",null,null],[11,"register_callsite","","Registers a new callsite with this subscriber, returning …",16,[[["metadata",3]],["interest",3]]],[10,"enabled","","Returns true if a span or event with the specified …",16,[[["metadata",3]],["bool",15]]],[11,"max_level_hint","","Returns the highest verbosity level that this <code>Subscriber</code> …",16,[[],[["levelfilter",3],["option",4]]]],[10,"new_span","","Visit the construction of a new span, returning a new …",16,[[["attributes",3]],["id",3]]],[10,"record","","Record a set of values on a span.",16,[[["record",3],["id",3]]]],[10,"record_follows_from","","Adds an indication that <code>span</code> follows from the span with …",16,[[["id",3]]]],[10,"event","","Records that an <code>Event</code> has occurred.",16,[[["event",3]]]],[10,"enter","","Records that a span has been entered.",16,[[["id",3]]]],[10,"exit","","Records that a span has been exited.",16,[[["id",3]]]],[11,"clone_span","","Notifies the subscriber that a span ID has been cloned.",16,[[["id",3]],["id",3]]],[11,"drop_span","","<strong>This method is deprecated.</strong>",16,[[["id",3]]]],[11,"try_close","","Notifies the subscriber that a [<code>span ID</code>] has been …",16,[[["id",3]],["bool",15]]],[11,"current_span","","Returns a type representing this subscriber\'s view of the …",16,[[],["current",3]]],[11,"downcast_raw","","If <code>self</code> is the same type as the provided <code>TypeId</code>, returns …",16,[[["typeid",3]],["option",4]]],[14,"identify_callsite","","Statically constructs an <code>Identifier</code> for the provided …",null,null],[14,"metadata","","Statically constructs new span metadata.",null,null],[11,"from","tracing_core::callsite","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tracing_core","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tracing_core::dispatcher","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","tracing_core","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","tracing_core::field","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","tracing_core","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tracing_core::metadata","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","tracing_core","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","tracing_core::metadata","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","tracing_core::span","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","tracing_core::subscriber","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","tracing_core","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"record","tracing_core::field","",23,[[["field",3],["visit",8]]]],[11,"record","","",24,[[["field",3],["visit",8]]]],[11,"record","","",21,[[["field",3],["visit",8]]]],[11,"drop","tracing_core::dispatcher","",19,[[]]],[11,"as_ref","tracing_core","",5,[[],["str",15]]],[11,"from","","",1,[[]]],[11,"from","","",11,[[["level",3]]]],[11,"from","","",11,[[["level",3],["option",4]]]],[11,"next","tracing_core::field","",22,[[],[["option",4],["field",3]]]],[11,"clone","tracing_core::callsite","",18,[[],["identifier",3]]],[11,"clone","tracing_core","",1,[[],["dispatch",3]]],[11,"clone","tracing_core::field","",23,[[],["displayvalue",3]]],[11,"clone","","",24,[[],["debugvalue",3]]],[11,"clone","tracing_core","",5,[[]]],[11,"clone","tracing_core::metadata","",9,[[],["kind",3]]],[11,"clone","tracing_core","",10,[[],["level",3]]],[11,"clone","","",11,[[],["levelfilter",3]]],[11,"clone","tracing_core::metadata","",25,[[],["parselevelfiltererror",3]]],[11,"clone","tracing_core::span","",12,[[],["id",3]]],[11,"clone","tracing_core::subscriber","",17,[[],["interest",3]]],[11,"default","tracing_core","Returns the current default dispatcher",1,[[]]],[11,"cmp","","",10,[[],["ordering",4]]],[11,"cmp","","",11,[[],["ordering",4]]],[11,"eq","tracing_core::callsite","",18,[[["identifier",3]],["bool",15]]],[11,"eq","tracing_core::field","",21,[[["empty",3]],["bool",15]]],[11,"eq","tracing_core","",5,[[],["bool",15]]],[11,"eq","tracing_core::metadata","",9,[[["kind",3]],["bool",15]]],[11,"ne","","",9,[[["kind",3]],["bool",15]]],[11,"eq","tracing_core","",10,[[["level",3]],["bool",15]]],[11,"ne","","",10,[[["level",3]],["bool",15]]],[11,"eq","","",11,[[["levelfilter",3]],["bool",15]]],[11,"ne","","",11,[[["levelfilter",3]],["bool",15]]],[11,"eq","","",10,[[["levelfilter",3]],["bool",15]]],[11,"eq","","",11,[[["level",3]],["bool",15]]],[11,"eq","tracing_core::span","",12,[[["id",3]],["bool",15]]],[11,"ne","","",12,[[["id",3]],["bool",15]]],[11,"partial_cmp","tracing_core","",10,[[["level",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["level",3]],["bool",15]]],[11,"le","","",10,[[["level",3]],["bool",15]]],[11,"gt","","",10,[[["level",3]],["bool",15]]],[11,"ge","","",10,[[["level",3]],["bool",15]]],[11,"partial_cmp","","",10,[[["levelfilter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["levelfilter",3]],["bool",15]]],[11,"le","","",10,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",10,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",10,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["levelfilter",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["levelfilter",3]],["bool",15]]],[11,"le","","",11,[[["levelfilter",3]],["bool",15]]],[11,"gt","","",11,[[["levelfilter",3]],["bool",15]]],[11,"ge","","",11,[[["levelfilter",3]],["bool",15]]],[11,"partial_cmp","","",11,[[["level",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["level",3]],["bool",15]]],[11,"le","","",11,[[["level",3]],["bool",15]]],[11,"gt","","",11,[[["level",3]],["bool",15]]],[11,"ge","","",11,[[["level",3]],["bool",15]]],[11,"fmt","tracing_core::callsite","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::dispatcher","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::field","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",10,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",25,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",26,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::span","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::subscriber","",17,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::dispatcher","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::field","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::field","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","tracing_core::metadata","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"hash","tracing_core::callsite","",18,[[]]],[11,"hash","tracing_core","",5,[[]]],[11,"hash","tracing_core::span","",12,[[]]],[11,"from_str","tracing_core","",10,[[["str",15]],[["parselevelerror",3],["result",4]]]],[11,"from_str","","",11,[[["str",15]],["result",4]]],[11,"new","","Creates a new <code>Once</code> value.",27,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. …",27,[[]]],[11,"call_once_force","","Performs the same function as <code>call_once()</code> except ignores …",27,[[]]],[11,"is_completed","","Returns <code>true</code> if some <code>call_once()</code> call has completed …",27,[[],["bool",15]]]],"p":[[8,"Callsite"],[3,"Dispatch"],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,"FieldSet"],[3,"ValueSet"],[3,"Metadata"],[3,"Kind"],[3,"Level"],[3,"LevelFilter"],[3,"Id"],[3,"Attributes"],[3,"Record"],[3,"Current"],[8,"Subscriber"],[3,"Interest"],[3,"Identifier"],[3,"DefaultGuard"],[3,"SetGlobalDefaultError"],[3,"Empty"],[3,"Iter"],[3,"DisplayValue"],[3,"DebugValue"],[3,"ParseLevelFilterError"],[3,"ParseLevelError"],[3,"Once"]]},\
"try_lock":{"doc":"A light-weight lock guarded by an atomic boolean.","i":[[3,"TryLock","try_lock","A light-weight lock guarded by an atomic boolean.",null,null],[11,"new","","Create a <code>TryLock</code> around the value.",0,[[],["trylock",3]]],[11,"try_lock","","Try to acquire the lock of this value.",0,[[],[["locked",3],["option",4]]]],[11,"try_lock_order","","Try to acquire the lock of this value using the lock and …",0,[[["ordering",4]],[["locked",3],["option",4]]]],[11,"try_lock_explicit","","Try to acquire the lock of this value using the specified …",0,[[["ordering",4]],[["locked",3],["option",4]]]],[11,"try_lock_explicit_unchecked","","Try to acquire the lock of this value using the specified …",0,[[["ordering",4]],[["locked",3],["option",4]]]],[11,"into_inner","","Take the value back out of the lock when this is the sole …",0,[[]]],[3,"Locked","","A locked value acquired from a <code>TryLock</code>.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"drop","","",1,[[]]],[11,"default","","",0,[[],["trylock",3]]]],"p":[[3,"TryLock"],[3,"Locked"]]},\
"unicase":{"doc":"UniCaseUniCase provides a way of specifying strings that …","i":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[3,"Ascii","","Case Insensitive wrapper of Ascii strings.",null,null],[5,"eq","","Compare two string-like types for case-less equality, …",null,[[],["bool",15]]],[5,"eq_ascii","","Compare two string-like types for case-less equality, …",null,[[],["bool",15]]],[11,"new","","Creates a new <code>UniCase</code>.",0,[[],["unicase",3]]],[11,"unicode","","Creates a new <code>UniCase</code>, skipping the ASCII check.",0,[[],["unicase",3]]],[11,"ascii","","Creates a new <code>UniCase</code> which performs only ASCII case …",0,[[],["unicase",3]]],[11,"is_ascii","","Return <code>true</code> if this instance will only perform ASCII case …",0,[[],["bool",15]]],[11,"into_inner","","Unwraps the inner value held by this <code>UniCase</code>.",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"deref","","",1,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",1,[[]]],[11,"deref_mut","","",0,[[]]],[11,"from","","",0,[[["ascii",3]]]],[11,"from","","",0,[[]]],[11,"from","","",0,[[["str",15]]]],[11,"from","","",0,[[["string",3]]]],[11,"from","","",0,[[["str",15]]]],[11,"from","","",0,[[["cow",4],["str",15]]]],[11,"from","","",0,[[["string",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[],["bool",15]]],[11,"eq","","",0,[[["unicase",3]],["bool",15]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"cmp","","",0,[[],["ordering",4]]],[11,"partial_cmp","","",1,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",0,[[],[["ordering",4],["option",4]]]],[11,"hash","","",1,[[]]],[11,"hash","","",0,[[]]],[11,"from_str","","",1,[[["str",15]],[["result",4],["ascii",3]]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["unicase",3]]]],[11,"as_ref","","",1,[[],["str",15]]],[11,"as_ref","","",0,[[],["str",15]]],[11,"into","","",0,[[],["str",15]]],[11,"into","","",0,[[],["string",3]]],[11,"into","","",0,[[],[["cow",4],["str",15]]]],[11,"clone","","",0,[[],["unicase",3]]],[11,"clone","","",1,[[],["ascii",3]]],[11,"default","","",1,[[],["ascii",3]]],[11,"default","","",0,[[]]],[11,"new","","",1,[[],["ascii",3]]],[11,"into_unicase","","",1,[[],["unicase",3]]],[11,"into_inner","","",1,[[]]]],"p":[[3,"UniCase"],[3,"Ascii"]]},\
"unicode_bidi":{"doc":"This crate implements the Unicode Bidirectional Algorithm …","i":[[0,"deprecated","unicode_bidi","This module holds deprecated assets only.",null,null],[5,"visual_runs","unicode_bidi::deprecated","Find the level runs within a line and return them in …",null,[[["usize",15],["range",3]],[["vec",3],["levelrun",6]]]],[0,"format_chars","unicode_bidi","Directional Formatting Characters",null,null],[17,"ALM","unicode_bidi::format_chars","ARABIC LETTER MARK",null,null],[17,"LRM","","LEFT-TO-RIGHT MARK",null,null],[17,"RLM","","RIGHT-TO-LEFT MARK",null,null],[17,"LRI","","LEFT‑TO‑RIGHT ISOLATE",null,null],[17,"RLI","","RIGHT‑TO‑LEFT ISOLATE",null,null],[17,"FSI","","FIRST STRONG ISOLATE",null,null],[17,"PDI","","POP DIRECTIONAL ISOLATE",null,null],[17,"LRE","","LEFT-TO-RIGHT EMBEDDING",null,null],[17,"RLE","","RIGHT-TO-LEFT EMBEDDING",null,null],[17,"PDF","","POP DIRECTIONAL FORMATTING",null,null],[17,"LRO","","LEFT-TO-RIGHT OVERRIDE",null,null],[17,"RLO","","RIGHT-TO-LEFT OVERRIDE",null,null],[0,"level","unicode_bidi","Bidi Embedding Level",null,null],[3,"Level","unicode_bidi::level","Embedding Level",null,null],[17,"LTR_LEVEL","","",null,null],[17,"RTL_LEVEL","","",null,null],[17,"MAX_EXPLICIT_DEPTH","","During explicit level resolution, embedding level can go …",null,null],[17,"MAX_IMPLICIT_DEPTH","","During implicit level resolution, embedding level can go …",null,null],[4,"Error","","Errors that can occur on Level creation or mutation",null,null],[13,"OutOfRangeNumber","","Out-of-range (invalid) embedding level number.",0,null],[11,"ltr","","New LTR level with smallest number value (0).",1,[[],["level",3]]],[11,"rtl","","New RTL level with smallest number value (1).",1,[[],["level",3]]],[11,"max_implicit_depth","","Maximum depth of the directional status stack during …",1,[[],["u8",15]]],[11,"max_explicit_depth","","Maximum depth of the directional status stack during …",1,[[],["u8",15]]],[11,"new","","Create new level, fail if number is larger than …",1,[[["u8",15]],[["result",4],["level",3],["error",4]]]],[11,"new_explicit","","Create new level, fail if number is larger than <code>max_depth</code>.",1,[[["u8",15]],[["result",4],["level",3],["error",4]]]],[11,"number","","The level number.",1,[[],["u8",15]]],[11,"is_ltr","","If this level is left-to-right.",1,[[],["bool",15]]],[11,"is_rtl","","If this level is right-to-left.",1,[[],["bool",15]]],[11,"raise","","Raise level by <code>amount</code>, fail if number is larger than …",1,[[["u8",15]],[["result",4],["error",4]]]],[11,"raise_explicit","","Raise level by <code>amount</code>, fail if number is larger than …",1,[[["u8",15]],[["result",4],["error",4]]]],[11,"lower","","Lower level by <code>amount</code>, fail if number goes below zero.",1,[[["u8",15]],[["result",4],["error",4]]]],[11,"new_explicit_next_ltr","","The next LTR (even) level greater than this, or fail if …",1,[[],[["result",4],["level",3],["error",4]]]],[11,"new_explicit_next_rtl","","The next RTL (odd) level greater than this, or fail if …",1,[[],[["result",4],["level",3],["error",4]]]],[11,"new_lowest_ge_rtl","","The lowest RTL (odd) level greater than or equal to this, …",1,[[],[["result",4],["level",3],["error",4]]]],[11,"bidi_class","","Generate a character type based on a level (as specified …",1,[[],["bidiclass",4]]],[11,"vec","","",1,[[],[["level",3],["vec",3]]]],[5,"has_rtl","","If levels has any RTL (odd) level",null,[[],["bool",15]]],[4,"BidiClass","unicode_bidi","Represents values of the Unicode character property …",null,null],[13,"AL","","",2,null],[13,"AN","","",2,null],[13,"B","","",2,null],[13,"BN","","",2,null],[13,"CS","","",2,null],[13,"EN","","",2,null],[13,"ES","","",2,null],[13,"ET","","",2,null],[13,"FSI","","",2,null],[13,"L","","",2,null],[13,"LRE","","",2,null],[13,"LRI","","",2,null],[13,"LRO","","",2,null],[13,"NSM","","",2,null],[13,"ON","","",2,null],[13,"PDF","","",2,null],[13,"PDI","","",2,null],[13,"R","","",2,null],[13,"RLE","","",2,null],[13,"RLI","","",2,null],[13,"RLO","","",2,null],[13,"S","","",2,null],[13,"WS","","",2,null],[5,"bidi_class","","Find the <code>BidiClass</code> of a single char.",null,[[["char",15]],["bidiclass",4]]],[17,"UNICODE_VERSION","","The Unicode version of data",null,null],[6,"LevelRun","","A maximal substring of characters with the same embedding …",null,null],[3,"ParagraphInfo","","Bidi information about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte …",3,null],[12,"level","","The paragraph embedding level.",3,null],[3,"InitialInfo","","Initial bidi information of the text.",null,null],[12,"text","","The text",4,null],[12,"original_classes","","The BidiClass of the character at each byte in the text. …",4,null],[12,"paragraphs","","The boundaries and level of each paragraph within the …",4,null],[11,"new","","Find the paragraphs and BidiClasses in a string of text.",4,[[["option",4],["level",3],["str",15]],["initialinfo",3]]],[3,"BidiInfo","","Bidi information of the text.",null,null],[12,"text","","The text",5,null],[12,"original_classes","","The BidiClass of the character at each byte in the text.",5,null],[12,"levels","","The directional embedding level of each byte in the text.",5,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each …",5,null],[11,"new","","Split the text into paragraphs and determine the bidi …",5,[[["option",4],["level",3],["str",15]],["bidiinfo",3]]],[11,"reordered_levels","","Re-order a line based on resolved levels and return only …",5,[[["usize",15],["paragraphinfo",3],["range",3]],[["level",3],["vec",3]]]],[11,"reordered_levels_per_char","","Re-order a line based on resolved levels and return only …",5,[[["usize",15],["paragraphinfo",3],["range",3]],[["level",3],["vec",3]]]],[11,"reorder_line","","Re-order a line based on resolved levels and return the …",5,[[["usize",15],["paragraphinfo",3],["range",3]],[["cow",4],["str",15]]]],[11,"visual_runs","","Find the level runs within a line and return them in …",5,[[["usize",15],["paragraphinfo",3],["range",3]]]],[11,"has_rtl","","If processed text has any computed RTL levels",5,[[],["bool",15]]],[11,"from","unicode_bidi::level","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","unicode_bidi","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","unicode_bidi::level","Create level by number",1,[[["u8",15]],["level",3]]],[11,"into","","Convert to the level number",1,[[],["u8",15]]],[11,"clone","","",1,[[],["level",3]]],[11,"clone","unicode_bidi","",2,[[],["bidiclass",4]]],[11,"cmp","unicode_bidi::level","",1,[[["level",3]],["ordering",4]]],[11,"eq","","",1,[[["level",3]],["bool",15]]],[11,"ne","","",1,[[["level",3]],["bool",15]]],[11,"eq","","",0,[[["error",4]],["bool",15]]],[11,"eq","","",1,[[["str",15]],["bool",15]]],[11,"eq","","",1,[[["string",3]],["bool",15]]],[11,"eq","unicode_bidi","",2,[[["bidiclass",4]],["bool",15]]],[11,"eq","","",3,[[["paragraphinfo",3]],["bool",15]]],[11,"ne","","",3,[[["paragraphinfo",3]],["bool",15]]],[11,"eq","","",4,[[["initialinfo",3]],["bool",15]]],[11,"ne","","",4,[[["initialinfo",3]],["bool",15]]],[11,"eq","","",5,[[["bidiinfo",3]],["bool",15]]],[11,"ne","","",5,[[["bidiinfo",3]],["bool",15]]],[11,"partial_cmp","unicode_bidi::level","",1,[[["level",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",3]],["bool",15]]],[11,"le","","",1,[[["level",3]],["bool",15]]],[11,"gt","","",1,[[["level",3]],["bool",15]]],[11,"ge","","",1,[[["level",3]],["bool",15]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","unicode_bidi","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]]],"p":[[4,"Error"],[3,"Level"],[4,"BidiClass"],[3,"ParagraphInfo"],[3,"InitialInfo"],[3,"BidiInfo"]]},\
"unicode_normalization":{"doc":"Unicode character composition and decomposition utilities …","i":[[0,"char","unicode_normalization","Methods for composing and decomposing characters.",null,null],[5,"compose","unicode_normalization::char","Compose two characters into a single character, if …",null,[[["char",15]],[["char",15],["option",4]]]],[5,"decompose_canonical","","Compute canonical Unicode decomposition for character. …",null,[[["char",15]]]],[5,"decompose_cjk_compat_variants","","Compute standard-variation decomposition for character.",null,[[["char",15]]]],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for …",null,[[["char",15],["fnmut",8]]]],[5,"canonical_combining_class","","Look up the canonical combining class for a codepoint.",null,[[["char",15]],["u8",15]]],[5,"is_combining_mark","","Return whether the given character is a combining mark (…",null,[[["char",15]],["bool",15]]],[3,"Decompositions","unicode_normalization","External iterator for a string decomposition\'s characters.",null,null],[5,"is_nfc","","Authoritatively check if a string is in NFC.",null,[[["str",15]],["bool",15]]],[5,"is_nfc_quick","","Quickly check if a string is in NFC, potentially returning…",null,[[["iterator",8]],["isnormalized",4]]],[5,"is_nfc_stream_safe","","Authoritatively check if a string is Stream-Safe NFC.",null,[[["str",15]],["bool",15]]],[5,"is_nfc_stream_safe_quick","","Quickly check if a string is Stream-Safe NFC.",null,[[["iterator",8]],["isnormalized",4]]],[5,"is_nfd","","Authoritatively check if a string is in NFD.",null,[[["str",15]],["bool",15]]],[5,"is_nfd_quick","","Quickly check if a string is in NFD.",null,[[["iterator",8]],["isnormalized",4]]],[5,"is_nfd_stream_safe","","Authoritatively check if a string is Stream-Safe NFD.",null,[[["str",15]],["bool",15]]],[5,"is_nfd_stream_safe_quick","","Quickly check if a string is Stream-Safe NFD.",null,[[["iterator",8]],["isnormalized",4]]],[5,"is_nfkc","","Authoritatively check if a string is in NFKC.",null,[[["str",15]],["bool",15]]],[5,"is_nfkc_quick","","Quickly check if a string is in NFKC.",null,[[["iterator",8]],["isnormalized",4]]],[5,"is_nfkd","","Authoritatively check if a string is in NFKD.",null,[[["str",15]],["bool",15]]],[5,"is_nfkd_quick","","Quickly check if a string is in NFKD.",null,[[["iterator",8]],["isnormalized",4]]],[4,"IsNormalized","","The QuickCheck algorithm can quickly determine if a text …",null,null],[13,"Yes","","The text is definitely normalized.",0,null],[13,"No","","The text is definitely not normalized.",0,null],[13,"Maybe","","The text may be normalized.",0,null],[3,"Recompositions","","External iterator for a string recomposition\'s characters.",null,null],[3,"Replacements","","External iterator for replacements for a string\'s …",null,null],[3,"StreamSafe","","UAX15-D4: This iterator keeps track of how many …",null,null],[17,"UNICODE_VERSION","","",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode …",null,null],[10,"nfd","","Returns an iterator over the string in Unicode …",1,[[],["decompositions",3]]],[10,"nfkd","","Returns an iterator over the string in Unicode …",1,[[],["decompositions",3]]],[10,"nfc","","An Iterator over the string in Unicode Normalization Form …",1,[[],["recompositions",3]]],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form …",1,[[],["recompositions",3]]],[10,"cjk_compat_variants","","A transformation which replaces CJK Compatibility …",1,[[],["replacements",3]]],[10,"stream_safe","","An Iterator over the string with Conjoining Grapheme …",1,[[],["streamsafe",3]]],[11,"nfd","","",2,[[],["decompositions",3]]],[11,"nfkd","","",2,[[],["decompositions",3]]],[11,"nfc","","",2,[[],["recompositions",3]]],[11,"nfkc","","",2,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",2,[[],["replacements",3]]],[11,"stream_safe","","",2,[[],["streamsafe",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"into_iter","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"nfd","","",3,[[],["decompositions",3]]],[11,"nfkd","","",3,[[],["decompositions",3]]],[11,"nfc","","",3,[[],["recompositions",3]]],[11,"nfkc","","",3,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",3,[[],["replacements",3]]],[11,"stream_safe","","",3,[[],["streamsafe",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"nfd","","",4,[[],["decompositions",3]]],[11,"nfkd","","",4,[[],["decompositions",3]]],[11,"nfc","","",4,[[],["recompositions",3]]],[11,"nfkc","","",4,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",4,[[],["replacements",3]]],[11,"stream_safe","","",4,[[],["streamsafe",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"nfd","","",5,[[],["decompositions",3]]],[11,"nfkd","","",5,[[],["decompositions",3]]],[11,"nfc","","",5,[[],["recompositions",3]]],[11,"nfkc","","",5,[[],["recompositions",3]]],[11,"cjk_compat_variants","","",5,[[],["replacements",3]]],[11,"stream_safe","","",5,[[],["streamsafe",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"next","","",2,[[],[["char",15],["option",4]]]],[11,"size_hint","","",2,[[]]],[11,"next","","",3,[[],[["char",15],["option",4]]]],[11,"next","","",4,[[],[["char",15],["option",4]]]],[11,"size_hint","","",4,[[]]],[11,"next","","",5,[[],[["char",15],["option",4]]]],[11,"clone","","",2,[[],["decompositions",3]]],[11,"clone","","",3,[[],["recompositions",3]]],[11,"clone","","",4,[[],["replacements",3]]],[11,"eq","","",0,[[["isnormalized",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]]],"p":[[4,"IsNormalized"],[8,"UnicodeNormalization"],[3,"Decompositions"],[3,"Recompositions"],[3,"Replacements"],[3,"StreamSafe"]]},\
"unicode_xid":{"doc":"Determine if a <code>char</code> is a valid identifier for a parser …","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid …",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid …",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the …",0,[[],["bool",15]]],[10,"is_xid_continue","","Returns whether the specified <code>char</code> satisfies the …",0,[[],["bool",15]]]],"p":[[8,"UnicodeXID"]]},\
"url":{"doc":"rust-url is an implementation of the URL Standard for the …","i":[[4,"Host","url","The host name of an URL.",null,null],[13,"Domain","","A DNS domain name, as \'.\' dot-separated labels. Non-ASCII …",0,null],[13,"Ipv4","","An IPv4 address. <code>Url::host_str</code> returns the serialization …",0,null],[13,"Ipv6","","An IPv6 address. <code>Url::host_str</code> returns the serialization …",0,null],[3,"OpaqueOrigin","","Opaque identifier for URLs that have file or other schemes",null,null],[4,"Origin","","The origin of an URL",null,null],[13,"Opaque","","A globally unique identifier",1,null],[13,"Tuple","","Consists of the URL\'s scheme, host and port",1,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",2,null],[13,"IdnaError","","",2,null],[13,"InvalidPort","","",2,null],[13,"InvalidIpv4Address","","",2,null],[13,"InvalidIpv6Address","","",2,null],[13,"InvalidDomainCharacter","","",2,null],[13,"RelativeUrlWithoutBase","","",2,null],[13,"RelativeUrlWithCannotBeABaseBase","","",2,null],[13,"SetHostOnCannotBeABaseUrl","","",2,null],[13,"Overflow","","",2,null],[4,"SyntaxViolation","","Non-fatal syntax violations that can occur during parsing.",null,null],[13,"Backslash","","",3,null],[13,"C0SpaceIgnored","","",3,null],[13,"EmbeddedCredentials","","",3,null],[13,"ExpectedDoubleSlash","","",3,null],[13,"ExpectedFileDoubleSlash","","",3,null],[13,"FileWithHostAndWindowsDrive","","",3,null],[13,"NonUrlCodePoint","","",3,null],[13,"NullInFragment","","",3,null],[13,"PercentDecode","","",3,null],[13,"TabOrNewlineIgnored","","",3,null],[13,"UnencodedAtSign","","",3,null],[3,"PathSegmentsMut","","Exposes methods to manipulate the path of an URL that is …",null,null],[4,"Position","","Indicates a position within a URL based on its components.",null,null],[13,"BeforeScheme","","",4,null],[13,"AfterScheme","","",4,null],[13,"BeforeUsername","","",4,null],[13,"AfterUsername","","",4,null],[13,"BeforePassword","","",4,null],[13,"AfterPassword","","",4,null],[13,"BeforeHost","","",4,null],[13,"AfterHost","","",4,null],[13,"BeforePort","","",4,null],[13,"AfterPort","","",4,null],[13,"BeforePath","","",4,null],[13,"AfterPath","","",4,null],[13,"BeforeQuery","","",4,null],[13,"AfterQuery","","",4,null],[13,"BeforeFragment","","",4,null],[13,"AfterFragment","","",4,null],[6,"EncodingOverride","","",null,null],[3,"Url","","A parsed URL record.",null,null],[3,"ParseOptions","","Full configuration for the URL parser.",null,null],[11,"base_url","","Change the base URL",5,[[["option",4],["url",3]]]],[11,"encoding_override","","Override the character encoding of query strings. This is …",5,[[["encodingoverride",6]]]],[11,"syntax_violation_callback","","Call the provided function or closure for a non-fatal …",5,[[["option",4],["fn",8]]]],[11,"parse","","Parse an URL string with the configuration so far.",5,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"parse","","Parse an absolute URL from a string.",6,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",6,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",6,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"make_relative","","Creates a relative URL if possible, with this URL as the …",6,[[["url",3]],[["string",3],["option",4]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",6,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",6,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",6,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",6,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",6,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",6,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",6,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",6,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",6,[[],[["option",4],["str",15]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",6,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",6,[[],[["option",4],["str",15]]]],[11,"host","","Return the parsed representation of the host for this URL.…",6,[[],[["option",4],["host",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",6,[[],[["option",4],["str",15]]]],[11,"port","","Return the port number for this URL, if any.",6,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",6,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",6,[[],[["result",6],["vec",3]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",6,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",6,[[],[["option",4],["split",3]]]],[11,"query","","Return this URL’s query string, if any, as a …",6,[[],[["option",4],["str",15]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",6,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",6,[[],[["option",4],["str",15]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",6,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",6,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",6,[[],[["urlquery",3],["serializer",3]]]],[11,"set_path","","Change this URL’s path.",6,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",6,[[],[["pathsegmentsmut",3],["result",4]]]],[11,"set_port","","Change this URL’s port number.",6,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",6,[[["option",4],["str",15]],[["result",4],["parseerror",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",6,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",6,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",6,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",6,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",6,[[["asref",8],["path",3]],[["url",3],["result",4]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",6,[[["asref",8],["path",3]],[["url",3],["result",4]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",6,[[],[["pathbuf",3],["result",4]]]],[3,"UrlQuery","","Implementation detail of <code>Url::query_pairs_mut</code>. Typically …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"drop","","",8,[[]]],[11,"drop","","",9,[[]]],[11,"as_ref","","",6,[[],["str",15]]],[11,"from","","",2,[[["errors",3]],["parseerror",4]]],[11,"clone","","",0,[[],["host",4]]],[11,"clone","","",1,[[],["origin",4]]],[11,"clone","","",7,[[],["opaqueorigin",3]]],[11,"clone","","",2,[[],["parseerror",4]]],[11,"clone","","",3,[[],["syntaxviolation",4]]],[11,"clone","","",4,[[],["position",4]]],[11,"clone","","",6,[[],["url",3]]],[11,"clone","","",5,[[],["parseoptions",3]]],[11,"cmp","","",0,[[["host",4]],["ordering",4]]],[11,"cmp","","",6,[[],["ordering",4]]],[11,"eq","","",0,[[["host",4]],["bool",15]]],[11,"eq","","",1,[[["origin",4]],["bool",15]]],[11,"ne","","",1,[[["origin",4]],["bool",15]]],[11,"eq","","",7,[[["opaqueorigin",3]],["bool",15]]],[11,"ne","","",7,[[["opaqueorigin",3]],["bool",15]]],[11,"eq","","",2,[[["parseerror",4]],["bool",15]]],[11,"eq","","",3,[[["syntaxviolation",4]],["bool",15]]],[11,"eq","","",6,[[],["bool",15]]],[11,"partial_cmp","","",0,[[["host",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["host",4]],["bool",15]]],[11,"le","","",0,[[["host",4]],["bool",15]]],[11,"gt","","",0,[[["host",4]],["bool",15]]],[11,"ge","","",0,[[["host",4]],["bool",15]]],[11,"partial_cmp","","",6,[[],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"index","","",6,[[["rangefull",3]],["str",15]]],[11,"index","","",6,[[["rangefrom",3],["position",4]],["str",15]]],[11,"index","","",6,[[["rangeto",3],["position",4]],["str",15]]],[11,"index","","",6,[[["range",3],["position",4]],["str",15]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",6,[[]]],[11,"try_from","","",6,[[["str",15]],["result",4]]],[11,"from_str","","",6,[[["str",15]],[["url",3],["result",4],["parseerror",4]]]],[11,"as_mut_string","","",9,[[],["string",3]]],[11,"finish","","",9,[[],["url",3]]],[11,"to_owned","","Return a copy of <code>self</code> that owns an allocated <code>String</code> but …",0,[[],[["host",4],["string",3]]]],[11,"parse","","Parse a host: either an IPv6 address in [] square …",0,[[["str",15]],[["result",4],["parseerror",4]]]],[11,"parse_opaque","","",0,[[["str",15]],[["result",4],["parseerror",4]]]],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",1,[[],["origin",4]]],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple…",1,[[],["bool",15]]],[11,"ascii_serialization","","…",1,[[],["string",3]]],[11,"unicode_serialization","","…",1,[[],["string",3]]],[11,"description","","",3,[[],["str",15]]],[11,"clear","","Remove all segments in the path, leaving the minimal …",8,[[]]],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is …",8,[[]]],[11,"pop","","Remove the last segment of this URL’s path.",8,[[]]],[11,"push","","Append the given segment at the end of this URL’s path.",8,[[["str",15]]]],[11,"extend","","Append each segment from the given iterator at the end of …",8,[[]]]],"p":[[4,"Host"],[4,"Origin"],[4,"ParseError"],[4,"SyntaxViolation"],[4,"Position"],[3,"ParseOptions"],[3,"Url"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[3,"UrlQuery"]]},\
"want":{"doc":"A Futures channel-like utility to signal when a value is …","i":[[5,"new","want","Create a new <code>want</code> channel.",null,[[]]],[3,"Giver","","An entity that gives a value when wanted.",null,null],[3,"Taker","","An entity that wants a value.",null,null],[3,"SharedGiver","","A cloneable <code>Giver</code>.",null,null],[3,"Closed","","The <code>Taker</code> has canceled its interest in a value.",null,null],[11,"want","","Returns a <code>Future</code> that fulfills when the <code>Taker</code> has done …",0,[[]]],[11,"poll_want","","Poll whether the <code>Taker</code> has registered interest in another …",0,[[["context",3]],[["result",4],["poll",4]]]],[11,"give","","Mark the state as idle, if the Taker currently is wanting.",0,[[],["bool",15]]],[11,"is_wanting","","Check if the <code>Taker</code> has called <code>want()</code> without parking a …",0,[[],["bool",15]]],[11,"is_canceled","","Check if the <code>Taker</code> has canceled interest without parking …",0,[[],["bool",15]]],[11,"shared","","Converts this into a <code>SharedGiver</code>.",0,[[],["sharedgiver",3]]],[11,"is_wanting","","Check if the <code>Taker</code> has called <code>want()</code> without parking a …",1,[[],["bool",15]]],[11,"is_canceled","","Check if the <code>Taker</code> has canceled interest without parking …",1,[[],["bool",15]]],[11,"cancel","","Signal to the <code>Giver</code> that the want is canceled.",2,[[]]],[11,"want","","Signal to the <code>Giver</code> that a value is wanted.",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"drop","","",2,[[]]],[11,"clone","","",1,[[],["sharedgiver",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]]],"p":[[3,"Giver"],[3,"SharedGiver"],[3,"Taker"],[3,"Closed"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);